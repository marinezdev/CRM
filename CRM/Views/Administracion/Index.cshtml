
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .chartBox {
        width: 100%;
        height: 250px;
        border-radius: 20px;
        background: white;
        text-align: center;
        align-content: center;
    }
</style>
<div class="row">
    <div class="col-lg-12 mb-4 order-0">
        <div class="row">


            <div class="col-lg-4 col-md-12 col-4 ">
                <div class="card  h-100 ">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">
                        <div class="card-title mb-0 " style="text-align: center;">
                            <h5 class="m-0 me-2" style="font-size: 25px; color: #474747; text-align: center;">
                                <i class="bx bxs-trophy text-warning"></i> Objetivos año
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                            </h5>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="orederStatistics"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="orederStatistics">
                                <a class="dropdown-item" href="javascript:void(0);">Actualizar </a>
                                <a class="dropdown-item" href="javascript:void(0);">Mostrar histórico </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <ul class="p-0 m-0" id="">
                                <div class="mb-2 pb-1">

                                    <div class="row">

                                        <div class="col-md-12 text-right" style='text-align: right;'>
                                            <h6 class="mb-0" style='text-align: left;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span> Meta por cumplir :</h6>
                                            <h6><small class="fw-semibold" id="MetaPorCumplir" style="font-size: 25px; color: #474747; text-align: right;">$0.00</small></h6>
                                            <div class="text-right">
                                                <small class="text-muted" id="TextFacturacionRecurrente" style="text-align: right; font-size: 15px;">Facturación:  </small>
                                                <br />
                                                <small class="text-muted" id="TextProyectosNuevos" style="text-align: right; font-size: 15px;">Metas proyectos nuevos : </small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-2 pb-1">
                                    <div class="row">
                                        <div class="col-md-12 text-right" style='text-align: right;'>
                                            <h6 class="mb-0" style='text-align: left;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span> Facturación acumulada :</h6>
                                            <h6><small class="fw-semibold" id="Acumulado" style="font-size: 25px; color: #474747; text-align: right;">$0.00</small></h6>
                                        </div>
                                    </div>
                                    @*<div class="avatar flex-shrink-0 me-3">
                                    <span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span>
                                </div>
                                <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                                    <div class="me-2">
                                        <h6 class="mb-0">Acumulado : </h6>
                                        <small class="fw-semibold" id="Acumulado" style="font-size: 25px; color: #474747; text-align: right;">$0.00</small>
                                    </div>
                                </div>*@
                                </div>
                                <div class="mb-2 pb-1">
                                    <div class="row">
                                        <div class="col-md-12 text-right" style='text-align: right;'>
                                            <h6 class="mb-0" style='text-align: left;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span><span id="FaltanteText"> Faltante meta:</span> </h6>
                                            <h6><small class="fw-semibold" id="Faltante" style="font-size: 25px; color: #474747; text-align: right;">$0.00</small></h6>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-2 pb-1">
                                    <div class="row">
                                        <div class="col-md-12 text-right" style='text-align: right;'>
                                            <h6 class="mb-0" style='text-align: left;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span><span id="FaltanteFacturacionText"> Faltante facturación :</span></h6>
                                            <h6><small class="fw-semibold" id="FaltanteFacturacion" style="font-size: 25px; color: #474747; text-align: right;">$0.00</small></h6>
                                        </div>
                                    </div>
                                </div>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 col-4 ">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card ">
                            <div class="card-body">
                                <div class="row">
                                    <ul class="p-0 m-0" id="">
                                        <div class="row">
                                            <div class="col-md-12 text-right" style='text-align: right;'>
                                                <h6 class="mb-0" style='text-align: left; font-size: 13px;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span> Facturación acumulada vs Facturación
                                                <script>document.write(new Date().getFullYear() - 1);</script> %</h6>
                                            </div>
                                            <div class="col-md-2">

                                            </div>
                                            <div class="col-md-8">
                                                <div class=" text-center">
                                                    <canvas id="myChartAcelerometro3"></canvas>
                                                </div>
                                            </div>
                                        </div>

                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card ">
                            <div class="card-body">
                                <div class="row">
                                    <ul class="p-0 m-0" id="">
                                        <div class="row">
                                            <div class="col-md-12 text-right" style='text-align: right;'>
                                                <h6 class="mb-0" style='text-align: left; font-size: 13px;'><span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span> Facturación acumulada vs Meta por cumplir %</h6>
                                            </div>
                                            <div class="col-md-2">

                                            </div>
                                            <div class="col-md-8">
                                                <div class=" text-center">
                                                    <canvas id="myChartAcelerometro"></canvas>
                                                </div>
                                            </div>
                                        </div>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-lg-4 col-md-12 col-6 mb-1">
                <div class="card h-100 border border-success mb-3">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">
                        <div class="card-title mb-0 text-center">
                            <h5 class="m-0 me-2 ">Porcentaje oportunidades cerradas ganadas</h5>
                            <span class="badge bg-label-success p-2"><i class="bx bxs-trophy text-success"></i></span>
                            <small class="text-muted">
                                Año
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                            </small>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="orederStatistics"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="orederStatistics">
                                <a class="dropdown-item" href="javascript:void(0);">Actualizar </a>
                                <a class="dropdown-item" href="javascript:void(0);">Mostrar histórico </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-2">
                            </div>
                            <div class="col-sm-8">
                                <canvas id="myChartAcelerometro2" style="height: 150px"></canvas>
                            </div>
                        </div>
                        <div class="d-flex align-items-end row">

                            <div class="col-sm-5 text-center text-sm-left">
                                <img src="~/assets/img/illustrations/win-award-trophy-cup-icon-sign-flat-style-vector-illustration-isolated-white-background_503038-367.jpg" height="100" alt="View Badge User" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png" />
                            </div>
                            <div class="col-sm-7">
                                <br />
                                <h2 class="mb-2" style="font-size:13px;"> Objetivo Nuevos proyectos</h2>
                                <h2 class="mb-2" style="font-size:13px; text-align:right;"> <strong id="Label_NuevosProyectos"></strong></h2>
                                <h2 class="mb-2" style="font-size:13px;"> Oportunidades cerradas ganadas </h2>
                                <h2 class="mb-2" style="font-size:13px; text-align:right;"> <strong id="Label_OportunidadesCerradasGanadas"></strong></h2>
                                <h2 class="mb-2" style="font-size:13px;"> Monto faltante </h2>
                                <h2 class="mb-2" style="font-size:13px; text-align: right;"> <strong id="Label_Faltante"></strong></h2>
                                <h2 class="mb-2" style="font-size:13px;"> Total, de oportunidades </h2>
                                <h2 class="mb-2" style="font-size:13px; text-align: center;"> <strong id="Label_TotalNumero_Oportunidades"></strong></h2>
                            </div>

                        </div>
                    </div>

                    @*<div class="d-flex align-items-end row">
                    <div class="col-sm-7 text-center">
                        <h2 class="mb-2" id="Label_TotalPorcentaje_OportunidadGanada" style="font-size: 40px; color: #38a100">0 % <br /></h2>
                        <h2 class="mb-2" id="Label_TotalImporte_OportunidadGanada" style="font-size: 19px;">$ 0 <br /></h2>
                    </div>
                    <div class="col-sm-12 text-center text-sm-left">
                        <img src="~/assets/img/illustrations/win-award-trophy-cup-icon-sign-flat-style-vector-illustration-isolated-white-background_503038-367.jpg" height="100" alt="View Badge User" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png" />

                    </div>
                </div>*@
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 mb-4 order-0">
        <div class="row">
            <div class="col-lg-4 col-md-12 col-6 mb-1">
                <div class="card h-100">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">
                        <div class="card-title mb-0">
                            <h5 class="m-0 me-2">Oportunidades (Unidad de negocio)</h5>
                            <span class="badge bg-label-primary p-2"><i class="bx bxs-box text-primary"></i></span>
                            <small class="text-muted">
                                Total año
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                            </small>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="orederStatistics"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="orederStatistics">
                                <a class="dropdown-item" href="javascript:void(0);">Actualizar </a>
                                <a class="dropdown-item" href="javascript:void(0);">Mostrar histórico </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="justify-content-between align-items-center mb-3">
                            <div class="d-flex flex-column align-items-center gap-1">
                                <h2 class="mb-2" id=""> <br /></h2>
                                <span>Distribución de oportunidades</span>
                            </div>
                            <div id="GraficaImportesUnidadNegocio" style="height: 150px"><img src="~/assets/img/icons/SoupyLazyGnatcatcher-size_restricted.gif" width="100%" height="100%" /></div>
                        </div>
                        <ul class="p-0 m-0" id="TablaOportunidadesUnidadNegocio">
                        </ul>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 col-6 mb-1">
                <div class="card h-100">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">
                        <div class="card-title mb-0 ">
                            <h5 class="m-0 me-2">Oportunidades (Estatus)</h5>
                            <span class="badge bg-label-primary p-2"><i class="bx bxs-trophy text-primary"></i></span>
                            <small class="text-muted">
                                Total año
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                            </small>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="orederStatistics"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="orederStatistics">
                                <a class="dropdown-item" href="javascript:void(0);">Actualizar </a>
                                <a class="dropdown-item" href="javascript:void(0);">Mostrar histórico </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="justify-content-between align-items-center mb-3">
                            <div class="d-flex flex-column align-items-center gap-1">
                                <h2 class="mb-2" id="Label_Total_OportunidadesEstatus">0</h2>
                                <span>Distribución de oportunidades</span>
                            </div>
                            <div id="GraficaPocentaje" style="height: 150px"><img src="~/assets/img/icons/SoupyLazyGnatcatcher-size_restricted.gif" width="100%" height="100%" /></div>
                        </div>
                        <ul class="p-0 m-0" id="TablaOportunidadesEstatus">
                        </ul>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 col-6 mb-1">
                <div class="card h-100">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">
                        <div class="card-title mb-0">
                            <h5 class="m-0 me-2">Oportunidades (Estatus - Importe)</h5>
                            <span class="badge bg-label-primary p-2"><i class="bx bxs-dollar-circle text-primary"></i></span>
                            <small class="text-muted">
                                Total año
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                            </small>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="orederStatistics"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="orederStatistics">
                                <a class="dropdown-item" href="javascript:void(0);">Actualizar </a>
                                <a class="dropdown-item" href="javascript:void(0);">Mostrar histórico </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="justify-content-between align-items-center mb-3">
                            <div class="d-flex flex-column align-items-center gap-1">
                                <h2 class="mb-2" id="Label_Total_OportunidadesImporte">0</h2>
                                <span>Distribución de oportunidades</span>
                            </div>
                            <div id="GraficaImportes" style="height: 150px"><img src="~/assets/img/icons/SoupyLazyGnatcatcher-size_restricted.gif" width="100%" height="100%" /></div>
                        </div>
                        <ul class="p-0 m-0" id="TablaOportunidadesImporte">
                        </ul>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<div class="row">
    <div class="col-lg-12 mb-4 order-0">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-6 mb-1">
                <div class="card h-100  mb-3">
                    <div class="card-header d-flex align-items-center justify-content-between pb-0">

                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <canvas id="densityChartPorcentajesDocumentosLista" width="600" height="310"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>

<!--<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>-->
@*<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>*@
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

<script>
    function MostrarEstatus(num) {
        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("Estatus", "Oportunidad")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });
    }

    function MostrarUnidadNegocio(num) {
        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("UnidadNegocio", "Oportunidad")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });
    }

    $(document).ready(function () {
        CargaImportes();
        CargaObjetivos();
        CargaImportesUnidadNegocio();
        CargaImportesUsuarios();
    });

    function CargaImportes() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Administracion_Oportunidad_Dhasbord_Importe", "Oportunidad")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#GraficaPocentaje').html('');
                $('#GraficaPocentaje').html('<canvas id="densityChartAvance" width="100%" height="200"></canvas>');
                $('#GraficaImportes').html('');
                $('#GraficaImportes').html('<canvas id="GraficaImportesDona" width="100%" height="200"></canvas>');
                PintaGraficaEstatus(data);
                PintaGraficaImportes(data);

            },
            error: function () {

            }
        });
    }

    function PintaGraficaImportes(data) {
   /*     console.log(data);*/

        const Nombres = [];
        const Porcentajes = [];
        const BackgroundColor = [];
        const HoverBackgroundColor = [];
        var SumTotal = 0;
        var Tabla = "";
        var TotalOportunidad = 0;
        var TotalOportunidadPorcentaje = 0;
        var TotalOportunidades = 0;
        for (var b = 0; b < data.length; b++) {
            SumTotal += data[b].OportunidadImporte.Valor;
            if (data[b].CatEstatusOpurtunidad.Nombre == 'CERRADO GANADO') {
                TotalOportunidad = data[b].OportunidadImporte.Valor;
            }
        }

        for (var b = 0; b < data.length; b++) {
            var Porcentaje = 0;
            Nombres.push(data[b].CatEstatusOpurtunidad.Nombre);
            Porcentaje = ((data[b].OportunidadImporte.Valor * 100) / SumTotal).toFixed(2);
            Porcentajes.push(Porcentaje).toFixed(2);
            BackgroundColor.push(data[b].CatEstatusOpurtunidad.BackgroundColor);
            HoverBackgroundColor.push(data[b].CatEstatusOpurtunidad.HoverBackgroundColor);

            Tabla += " <li class='d-flex mb-2 pb-1' onclick='MostrarEstatus(" + data[b].CatEstatusOpurtunidad.Id +")'>" +
                        "<div class='avatar flex-shrink-0 me-3'>" +
                            "<span class='avatar-initial rounded bg-label-" + data[b].CatEstatusOpurtunidad.Color + "'>" +
                                "<i class='bx bx-" + data[b].CatEstatusOpurtunidad.Icono + "'></i>" +
                            "</span>" +
                        "</div>" +
                        "<div class='d-flex w-100 flex-wrap align-items-center justify-content-between gap-2'>" +
                            "<div class='me-2'>" +
                                "<h6 class='mb-0'>" + data[b].CatEstatusOpurtunidad.Nombre + "</h6>" +
                                "<small class='text-muted'>" + Porcentaje + " %</small>" +
                            "</div>" +
                            "<div class='user-progress'>" +
                                "<small class='fw-semibold'>" + formatProdPrice(data[b].OportunidadImporte.Valor.toFixed(2)) + "</small>" +
                            "</div>" +
                        "</div>" +
                    "</li>";

            if (data[b].CatEstatusOpurtunidad.Nombre == 'CERRADO GANADO') {
                TotalOportunidadPorcentaje = Porcentaje;
            }

            TotalOportunidades += data[b].Total;
        }

        $('#Label_Total_OportunidadesImporte').html(formatProdPrice(SumTotal.toFixed(2)));
        $('#TablaOportunidadesImporte').html(Tabla);

        //$('#Label_TotalImporte_OportunidadGanada').html("$" + TotalOportunidad.toLocaleString('en'));
        //$('#Label_TotalPorcentaje_OportunidadGanada').html( TotalOportunidadPorcentaje + "%");

        PintaGraficaOportunidadesGanadas(TotalOportunidad, TotalOportunidades);

        // setup
        var data = {
            labels: Nombres,
            datasets: [{
                /*    label: 'Weekly Sales',*/
                data: Porcentajes,
                backgroundColor: BackgroundColor,
                hoverBorderWidth: 0,
                hoverBackgroundColor: HoverBackgroundColor,
                borderWidth: 1
            }]
        };

        // config
        const config = {
            type: 'doughnut',
            data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false
                    }
                },


            },
            plugins: [ChartDataLabels],
            //options: {
            //}

        };

        // render init block
        const myChart = new Chart(
            document.getElementById('GraficaImportesDona'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');

    }

    function PintaGraficaEstatus(data) {
        /*console.log(data);*/
        const Nombres = [];
        const Porcentajes = [];
        const BackgroundColor = [];
        const HoverBackgroundColor = [];
        var SumTotal = 0;
        var Tabla = "";
        for (var b = 0; b < data.length; b++) {
            SumTotal += data[b].Total;
        }

        for (var b = 0; b < data.length; b++) {
            var Porcentaje = 0;
            Nombres.push(data[b].CatEstatusOpurtunidad.Nombre);
            Porcentaje = ((data[b].Total * 100) / SumTotal);
            Porcentajes.push(Porcentaje.toFixed(2));
            BackgroundColor.push(data[b].CatEstatusOpurtunidad.BackgroundColor);
            HoverBackgroundColor.push(data[b].CatEstatusOpurtunidad.HoverBackgroundColor);

            Tabla += " <li class='d-flex mb-2 pb-1' onclick='MostrarEstatus(" + data[b].CatEstatusOpurtunidad.Id + ")'>" +
                "<div class='avatar flex-shrink-0 me-3'>" +
                "<span class='avatar-initial rounded bg-label-" + data[b].CatEstatusOpurtunidad.Color + "'>" +
                "<i class='bx bx-" + data[b].CatEstatusOpurtunidad.Icono + "'></i>" +
                "</span>" +
                "</div>" +
                "<div class='d-flex w-100 flex-wrap align-items-center justify-content-between gap-2'>" +
                "<div class='me-2'>" +
                "<h6 class='mb-0'>" + data[b].CatEstatusOpurtunidad.Nombre + "</h6>" +
                "<small class='text-muted'>" + Porcentaje.toFixed(2) + " %</small>" +
                "</div>" +
                "<div class='user-progress'>" +
                "<small class='fw-semibold'>" + data[b].Total + "</small>" +
                "</div>" +
                "</div>" +
                "</li>";

        }

        $('#Label_Total_OportunidadesEstatus').html(SumTotal);
        $('#TablaOportunidadesEstatus').html(Tabla);


        // setup
        var data = {
            labels: Nombres,
            datasets: [{
                /*    label: 'Weekly Sales',*/
                data: Porcentajes,
                backgroundColor: BackgroundColor,
                hoverBorderWidth: 0,
                hoverBackgroundColor: HoverBackgroundColor,
                borderWidth: 1
            }]
        };

        // config
        const config = {
            type: 'pie',
            data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false
                    }
                },


            },
            plugins: [ChartDataLabels],
            //options: {
            //}

        };

        // render init block
        const myChart = new Chart(
            document.getElementById('densityChartAvance'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');

    }


    function PintaGraficaOportunidadesGanadas(TotalOportunidad, TotalOportunidades) {
        var SumProyectosNuevos = 0;
        var Faltante = 0;
        var porcentaje = 0;

        $.ajax({
            type: "POST",
            url: "@Url.Action("ObjetivosResponsables_Selecionar_Year", "ObjetivosResponsables")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                for (var b = 0; b < result.length; b++) {
                    SumProyectosNuevos += result[b].ProyectosNuevos;
                }
            },
            error: function () {

            }
        });

        Faltante = (SumProyectosNuevos.toFixed(2) - TotalOportunidad.toFixed(2));
        porcentaje = ((TotalOportunidad * 100) / SumProyectosNuevos);

        $('#Label_NuevosProyectos').html(formatProdPrice(SumProyectosNuevos.toFixed(2)));
        $('#Label_OportunidadesCerradasGanadas').html(formatProdPrice(TotalOportunidad.toFixed(2)));
        $('#Label_Faltante').html(formatProdPrice(Faltante.toFixed(2)));
        $('#Label_TotalNumero_Oportunidades').html(TotalOportunidades);

        porcentaje = porcentaje;
        // setup
        const data = {
            labels: ['', '', ''],
            datasets: [{
                label: 'Weekly Sales',
                data: [50, 35, 15],
                backgroundColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                ],
                needleValue: porcentaje.toFixed(2),
                borderColor: 'white',
                borderWidth: 2,
                cutout: '70%',
                circumference: 180,
                rotation: 270,
                borderRadius: 2,
            }]
        };

        // gaugeNeedle blok
        const gaugeNeedle = {
            id: 'gaugeNeedle2',
            afterDatasetDraw(chart, args, options) {
                const { ctx, config, data, chartArea: { top, bottom, left, right, width,
                    height } } = chart;

                ctx.save();
                //console.log(data);
                const needleValue = data.datasets[0].needleValue;
                const dataTotal = data.datasets[0].data.reduce((a, b) => a + b, 0);
                const angle = Math.PI + (1 / dataTotal * needleValue * Math.PI);
                //console.log(needleValue);

                const cx = width / 2;
                const cy = chart._metasets[0].data[0].y;

                // needle
                ctx.translate(cx, cy);
                ctx.rotate(angle);
                ctx.beginPath();
                ctx.moveTo(0, -2);
                ctx.lineTo(height - (ctx.canvas.offsetTop + 20), 0);
                ctx.lineTo(0, 2);
                ctx.fillStyle = '#444';
                ctx.fill();
                ctx.restore();

                // needle dot
                ctx.beginPath();
                ctx.arc(cx, cy, 5, 0, 10);
                ctx.fill();
                ctx.restore();

                ctx.font = '30px Helvetica';
                ctx.fillStyle = '#444';
                ctx.fillText(needleValue + '%', cx, cy + 50);
                ctx.textAlign = 'center';
                ctx.restore();
            }
        };

        // config
        const config = {
            type: 'doughnut',
            data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false,
                        callbacks: {
                            label: function (tooltipItem, data, value) {
                                const tracker = tooltipItem.dataset.needleValue;
                                return `Porcentaje cumplido : ${tracker} %`;
                            }
                        }
                    }
                }
            },
            plugins: [gaugeNeedle]
        };

        // render init block
        const myChart = new Chart(
            document.getElementById('myChartAcelerometro2'),
            config
        );
    }

    function CargaObjetivos() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ObjetivosResponsables_Selecionar_Year", "ObjetivosResponsables")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                PintaTablaObjetivos(result);
            },
            error: function () {

            }
        });
    }

    function PintaTablaObjetivos(dbData) {
        //console.log(dbData);

        var Tabla = "";
        var SumObjetivos = 0;
        var SumFacturacionRecurrente = 0;
        var SumProyectosNuevos = 0;
        var SumOportunidadesGanadas = 0;
        var SumAcumuladoMes = 0;
        var SumAcumuladoOld = 0;
        var SumAcumuladoYear = 0;
        var MontoCumplimientoPorcentaje = 0;
        var MontoFacturacionPorcentaje = 0;
        var MontoFaltante = 0;
        var MontoFaltanteFacturacion = 0;
        var SumOportunidadesEnproceso = 0;
        var Prespectacion = 0;
        var Porcentaje = 0;
        var PorcentajeFacturacion = 0;

        for (var b = 0; b < dbData.length; b++) {
            SumObjetivos += dbData[b].FacturacionRecurrente + dbData[b].ProyectosNuevos;
            SumFacturacionRecurrente += dbData[b].FacturacionRecurrente;
            /*console.log(dbData[b].FacturacionRecurrente);*/
            SumProyectosNuevos += dbData[b].ProyectosNuevos;
            SumOportunidadesGanadas += dbData[b].Acumulado;
            SumAcumuladoMes += dbData[b].MontoAcumuladoMes;
            /*console.log(dbData[b].MontoAcumuladoMesOld);*/
            SumAcumuladoOld = dbData[b].MontoAcumuladoMesOld;
            SumAcumuladoYear += dbData[b].MontoAcumulado;
            SumOportunidadesEnproceso += dbData[b].EnProceso;
        }

        MontoCumplimientoPorcentaje = ((SumAcumuladoYear * 100) / SumObjetivos);
        /*MontoFaltante = convertirNegativoAPositivo(SumObjetivos - SumAcumuladoYear);*/
        Porcentaje = MontoCumplimientoPorcentaje.toFixed(2);
        /*MontoFaltanteFacturacion = convertirNegativoAPositivo(SumFacturacionRecurrente - SumAcumuladoYear);*/
        MontoFacturacionPorcentaje = ((SumAcumuladoYear * 100) / SumFacturacionRecurrente);
        PorcentajeFacturacion = MontoFacturacionPorcentaje.toFixed(2);

        FunMontoFaltanteFacturacion(SumFacturacionRecurrente - SumAcumuladoYear);
        FunMontoFaltante(SumObjetivos - SumAcumuladoYear);

        /*$('#Faltante').html(formatProdPrice(MontoFaltante.toFixed(2)));*/
        /*$('#FaltanteFacturacion').html(formatProdPrice(MontoFaltanteFacturacion.toFixed(2)));*/
        $('#Acumulado').html(formatProdPrice(SumAcumuladoYear.toFixed(2)));
        $('#MetaPorCumplir').html(formatProdPrice(SumObjetivos.toFixed(2)));

        //$('#TextFacturacionRecurrente').html("Facturación " + (new Date().getFullYear() - 1) + ": " + formatProdPrice(SumFacturacionRecurrente.toFixed(2)));
        $('#TextFacturacionRecurrente').html("Facturación " + (new Date().getFullYear() - 1) + ": " + formatProdPrice(SumAcumuladoOld.toFixed(2)));
        $('#TextProyectosNuevos').html("Meta proyectos nuevos " + (new Date().getFullYear()) + ": " + formatProdPrice(SumProyectosNuevos.toFixed(2)));

        PintaAcelerometroFacturacion(PorcentajeFacturacion);

        // setup
        const data = {
            labels: ['', '', ''],
            datasets: [{
                label: 'Weekly Sales',
                data: [50, 35, 15],
                backgroundColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                ],
                needleValue: Porcentaje,
                borderColor: 'white',
                borderWidth: 2,
                cutout: '70%',
                circumference: 180,
                rotation: 270,
                borderRadius: 2,
            }]
        };

        // gaugeNeedle blok
        const gaugeNeedle = {
            id: 'gaugeNeedle',
            afterDatasetDraw(chart, args, options) {
                const { ctx, config, data, chartArea: { top, bottom, left, right, width,
                    height } } = chart;

                ctx.save();
                //console.log(data);
                const needleValue = data.datasets[0].needleValue;
                const dataTotal = data.datasets[0].data.reduce((a, b) => a + b, 0);
                const angle = Math.PI + (1 / dataTotal * needleValue * Math.PI);
                //console.log(needleValue);

                const cx = width / 2;
                const cy = chart._metasets[0].data[0].y;

                // needle
                ctx.translate(cx, cy);
                ctx.rotate(angle);
                ctx.beginPath();
                ctx.moveTo(0, -2);
                ctx.lineTo(height - (ctx.canvas.offsetTop + 20), 0);
                ctx.lineTo(0, 2);
                ctx.fillStyle = '#444';
                ctx.fill();
                ctx.restore();

                // needle dot
                ctx.beginPath();
                ctx.arc(cx, cy, 5, 0, 10);
                ctx.fill();
                ctx.restore();

                ctx.font = '30px Helvetica';
                ctx.fillStyle = '#444';
                ctx.fillText(needleValue + '%', cx, cy + 50);
                ctx.textAlign = 'center';
                ctx.restore();
            }
        };

        // config
        const config = {
            type: 'doughnut',
            data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false,
                        callbacks: {
                            label: function (tooltipItem, data, value) {
                                const tracker = tooltipItem.dataset.needleValue;
                                return `Porcentaje cumplido : ${tracker} %`;
                            }
                        }
                    }
                }
            },
            plugins: [gaugeNeedle]
        };

        // render init block
        const myChart = new Chart(
            document.getElementById('myChartAcelerometro'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');
        /*    chartVersion.innerText = Chart.version;*/
    }

    function PintaAcelerometroFacturacion(Porcentaje) {
        // setup
        const data = {
            labels: ['', '', ''],
            datasets: [{
                label: 'Weekly Sales',
                data: [50, 35, 15],
                backgroundColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                ],
                needleValue: Porcentaje,
                borderColor: 'white',
                borderWidth: 2,
                cutout: '70%',
                circumference: 180,
                rotation: 270,
                borderRadius: 2,
            }]
        };

        // gaugeNeedle blok
        const gaugeNeedle = {
            id: 'gaugeNeedle3',
            afterDatasetDraw(chart, args, options) {
                const { ctx, config, data, chartArea: { top, bottom, left, right, width,
                    height } } = chart;

                ctx.save();
                //console.log(data);
                const needleValue = data.datasets[0].needleValue;
                const dataTotal = data.datasets[0].data.reduce((a, b) => a + b, 0);
                const angle = Math.PI + (1 / dataTotal * needleValue * Math.PI);
                //console.log(needleValue);

                const cx = width / 2;
                const cy = chart._metasets[0].data[0].y;

                // needle
                ctx.translate(cx, cy);
                ctx.rotate(angle);
                ctx.beginPath();
                ctx.moveTo(0, -2);
                ctx.lineTo(height - (ctx.canvas.offsetTop + 20), 0);
                ctx.lineTo(0, 2);
                ctx.fillStyle = '#444';
                ctx.fill();
                ctx.restore();

                // needle dot
                ctx.beginPath();
                ctx.arc(cx, cy, 5, 0, 10);
                ctx.fill();
                ctx.restore();

                ctx.font = '30px Helvetica';
                ctx.fillStyle = '#444';
                ctx.fillText(needleValue + '%', cx, cy + 50);
                ctx.textAlign = 'center';
                ctx.restore();
            }
        };

        // config
        const config = {
            type: 'doughnut',
            data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false,
                        callbacks: {
                            label: function (tooltipItem, data, value) {
                                const tracker = tooltipItem.dataset.needleValue;
                                return `Porcentaje cumplido : ${tracker} %`;
                            }
                        }
                    }
                }
            },
            plugins: [gaugeNeedle]
        };

        // render init block
        const myChart = new Chart(
            document.getElementById('myChartAcelerometro3'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');
        /*    chartVersion.innerText = Chart.version;*/
    }

    function CargaImportesUnidadNegocio() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Administracion_Oportunidad_Dhasbord_Importe_UnidadDeNegocio", "Oportunidad")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('#GraficaImportesUnidadNegocio').html('');
                $('#GraficaImportesUnidadNegocio').html('<canvas id="GraficaImportesUnidadNegocioDona" width="100%" height="200"></canvas>');

                PintaGraficaImportesUnidadNegocio(data);
            },
            error: function () {

            }
        });
    }

    function PintaGraficaImportesUnidadNegocio(data) {

        /*console.log(data);*/

        const Nombres = [];
        const Porcentajes = [];
        const BackgroundColor = ['#36a2eb', '#ff6384', '#4bc0c0', '#ff9f40', '#9966ff', '#ffcd56', '#c9cbcf', 'Brown'];
        const HoverBackgroundColor = [];
        var SumTotal = 0;
        var Tabla = "";
        for (var b = 0; b < data.length; b++) {
            SumTotal += data[b].OportunidadImporte.Valor;

        }

        for (var b = 0; b < data.length; b++) {
            var Porcentaje = 0;
            Nombres.push(data[b].CatUnidadNegocio.Nombre);
            Porcentaje = ((data[b].OportunidadImporte.Valor * 100) / SumTotal).toFixed(2);
            Porcentajes.push(Porcentaje).toFixed(2);

            Tabla += " <li class='d-flex mb-2 pb-1' onclick='MostrarUnidadNegocio(" + data[b].CatUnidadNegocio.Id + ")'>" +
                        "<div class='avatar flex-shrink-0 me-3' >" +
                            "<span class='avatar-initial rounded bg-label-primary'>" +
                                "<i class='bx bx-bulb'></i>" +
                            "</span>" +
                        "</div>" +
                        "<div class='d-flex w-100 flex-wrap align-items-center justify-content-between gap-2'>" +
                            "<div class='me-2'>" +
                                "<h6 class='mb-0'>" + data[b].CatUnidadNegocio.Nombre + "</h6>" +
                                "<small class='text-muted'>" + Porcentaje + " % </small>" +
                            "</div>" +
                            "<div class='user-progress'>" +
                                "<small class='fw-semibold'>" +  formatProdPrice(data[b].OportunidadImporte.Valor.toFixed(2)) + "</small>" +
                            "</div>" +
                        "</div>" +
                    "</li>";
        }

        $('#Label_Total_OportunidadesUnidadNegocio').html(formatProdPrice(SumTotal.toFixed(2)));
        $('#TablaOportunidadesUnidadNegocio').html(Tabla);

        // setup
        var data = {
            labels: Nombres,
            datasets: [{
                /*    label: 'Weekly Sales',*/
                data: Porcentajes,
                backgroundColor: BackgroundColor,
                hoverBorderWidth: 0,
                hoverBackgroundColor: HoverBackgroundColor,
                borderWidth: 1
            }]
        };

        // config
        const config = {
            type: 'pie',
            data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        yAlign: 'bottom',
                        displayColors: false
                    }
                },


            },
            plugins: [ChartDataLabels],
            //options: {
            //}

        };

        // render init block
        const myChart = new Chart(
            document.getElementById('GraficaImportesUnidadNegocioDona'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');
    }

    function CargaImportesUsuarios() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Administracion_Oportunidad_Dhasbord_Seleccionar_Usuarios", "Oportunidad")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                const obj = JSON.parse(data);
                PintGraficaImportesUsuarios(obj);
            },
            error: function () {

            }
        });
    }

    function PintGraficaImportesUsuarios(obj) {


        const consulta = [];

        var flag = false;
        var NombreUsuario = "";
        var SumTotal = 0;
        obj.forEach(function (item) {
            Object.keys(item).forEach(function (key) {
                if (flag) {
                    var OportunidadesEstatusUsuairo = new Object();
                    OportunidadesEstatusUsuairo.TicketsAsignedTo = NombreUsuario;
                    OportunidadesEstatusUsuairo.TicketsCount = (item[key]).toFixed(2);
                    OportunidadesEstatusUsuairo.TicketsClasificationType = key;
                    consulta.push(OportunidadesEstatusUsuairo);
                    SumTotal += item[key];
                } else {
                    NombreUsuario = item[key];
                    flag = true;
                }
            });
            flag = false;

        })



       /* console.log(SumTotal);*/

        const labels = Object.keys(
            consulta.reduce((obj, label) => (obj[label.TicketsAsignedTo] = true, obj), {})
        );

        const colors = {
            "EN PROCESO": "#18b8da",
            "CERRADO PERDIDA": "#4b6b7f",
            "CERRADO GANADO": "#02c382",
            "CANCELADO": "#ee0145",
            "SUSPENDIDO": "#fcb117"
        };

        const datasetsObject = consulta.reduce((obj, item) => {
            obj[item.TicketsClasificationType] = obj[item.TicketsClasificationType] || {};
            obj[item.TicketsClasificationType][item.TicketsAsignedTo] = item.TicketsCount;
            return obj;
        }, {});

        const datasets = Object.keys(datasetsObject).map(name => ({
            label: name,
            backgroundColor: colors[name],
            data: labels.map(l => datasetsObject[name][l] || 0)
        }));

        const context = document.getElementById("densityChartPorcentajesDocumentosLista").getContext("2d");
        //Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        //Chart.defaults.global.defaultFontSize = 15;

        const myBarChart = new Chart(context, {
            type: "bar",
            data: { labels, datasets },
            options: {
                indexAxis: 'y',
                legend: {
                    display: false
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                    callbacks: {
                        label: function (t, d) {
                            var xLabel = d.datasets[t.datasetIndex].label;
                            var yLabel = t.xLabel >= 1000 ? '$' + t.xLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : '$' + t.xLabel;
                            /*var yLabel = t.yLabel >= 1000 ? '$' + t.yLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : '$' + t.yLabel;*/
                            return xLabel + ': ' + yLabel;
                        }
                    }
                },
                scales: {
                    xAxes: [{
                        stacked: true,
                        ticks: {
                            callback: function (value, index, values) {
                                if (parseInt(value) >= 1000) {
                                    return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } else {
                                    return '$' + value;
                                }
                            }
                        },
                        scaleFontSize: 8
                    }],
                    yAxes: [{ stacked: true, scaleFontSize: 8 }]
                },
                responsive: true,
                /*scales: {*/
                //    xAxes: [{
                //        ticks: {
                //            callback: function (value, index, values) {
                //                if (parseInt(value) >= 1000) {
                //                    return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                //                } else {
                //                    return '$' + value;
                //                }
                //            }
                //        },
                //    }],

                /*}*/
            }
        });
    }

    function formatProdPrice(value) {
        return new Intl.NumberFormat("en-US", { style: "currency", currency: "USD" }).format(value);
    }
    function convertirNegativoAPositivo(numero) {
        if (numero < 0) {
            return -numero;
        } else {
            return numero;
        }
    }

    function FunMontoFaltante(numero) {
        if (numero == 0) {
            // NO COLOCAR IMAGEN
            $('#FaltanteText').html(" Faltante meta : ");
            $('#Faltante').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))));
        } else if (numero < 0) {
            // COLOCAR IMAGEN VERDER
            $('#FaltanteText').html(" Meta : ");
            $('#Faltante').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))) + " <img src='../assets/img/icons/FlechaVerde.png' width='6%' /> ");
        } else {
            // COLOCAR IMAGEN ROJA
            $('#FaltanteText').html(" Faltante meta : ");
            $('#Faltante').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))) + " <img src='../assets/img/icons/FlechaRoja.png' width='6%' /> ");
        }
    }


    function FunMontoFaltanteFacturacion(numero) {
        if (numero == 0) {
            // NO COLOCAR IMAGEN
            $('#FaltanteFacturacionText').html(" Faltante facturación : ");
            $('#FaltanteFacturacion').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))));
        } else if (numero < 0) {
            // COLOCAR IMAGEN VERDER
            $('#FaltanteFacturacionText').html(" Facturación : ");
            $('#FaltanteFacturacion').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))) + " <img src='../assets/img/icons/FlechaVerde.png' width='6%' /> ");
        } else {
            // COLOCAR IMAGEN ROJA
            $('#FaltanteFacturacionText').html(" Faltante facturación : ");
            $('#FaltanteFacturacion').html(formatProdPrice(convertirNegativoAPositivo(numero.toFixed(2))) + " <img src='../assets/img/icons/FlechaRoja.png' width='6%' /> ");
        }
    }


    $('#Nv1Dashboard').addClass("active open");
</script>
