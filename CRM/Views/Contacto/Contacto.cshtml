
@{
    ViewBag.Title = "Contacto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Scripts/Checkboxes-fSelect/fSelect.css" rel="stylesheet" />
<script src="~/Scripts/Checkboxes-fSelect/fSelect.js"></script>

<style>
    .nav-link {
        display: block;
        padding: 0.5rem 0.25rem;
        color: #8e9baa;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    }

    .toast2 {
        width: 350px;
        max-width: 100%;
        font-size: 0.9375rem;
        pointer-events: auto;
        background-color: #fff;
        background-clip: padding-box;
        border: 0 solid rgba(67, 89, 113, 0.1);
        box-shadow: 0 0.25rem 1rem rgba(161, 172, 184, 0.45);
        border-radius: 0.5rem;
    }
</style>

<!-- Toast with Placements -->
<div class="bs-toast toast toast-placement-ex m-2" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000">
    <div class="toast-header">
        <i class="bx bx-bell me-2"></i>
        <div class="me-auto fw-semibold" id="AlertaTitulo"></div>
        <small id="AlertaFecha"></small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body" id="AlertaTexto"></div>
</div>


<div class="row">
    <div class="col-lg-8 mb-4 order-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="d-flex align-items-end row">
                        <div class="col-sm-7">
                            <div class="row">
                                <div>
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Contacto: @ViewBag.Contato.Persona.Nombre @ViewBag.Contato.Persona.ApellidoPaterno @ViewBag.Contato.Persona.ApellidoMaterno! 🎉</h5>
                                        <p class="mb-4">
                                            Unidad de negocio: <span class="fw-bold">@ViewBag.Contato.Persona.CatUnidadNegocio.Nombre </span>
                                            <br />
                                            Tipo contacto:  <span class="fw-bold">@ViewBag.Contato.Persona.CatTipoPersona.Nombre </span>
                                            <br />
                                            Cargo: <span class="fw-bold">@ViewBag.Contato.CatCargo.Nombre </span>
                                            <br />
                                            Fuente de origen: <span class="fw-bold"> @ViewBag.Contato.CatFuenteOrigen.Nombre </span>
                                            <br />
                                            Propietario del registro : <span class="fw-bold text-center">@ViewBag.Contato.Propietario </span>
                                            <br />
                                            Descripción: <span class="fw-bold text-center">@ViewBag.Contato.Persona.Descripcion </span> .
                                        </p>
                                        <a href="javascript:;" class="btn btn-sm btn-outline-primary" onclick="FormularioInformacion()">Información principal </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-5 text-center text-sm-left">
                            <div class="card-body pb-0 px-0 px-md-4">
                                <img src="~/assets/img/illustrations/man-with-laptop-light.png" height="140" alt="View Badge User" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="FormPrincipal">
            <div class="col-md-12">
                <div class="demo-inline-spacing">
                    <button type="button" class="btn btn-outline-primary" id="BtnFormularioInformacion" onclick="FormularioInformacion()">
                        <span class="tf-icons bx bx-spreadsheet"></span>&nbsp; Información
                    </button>
                    <button type="button" class="btn btn-primary" id="BtnFormularioPrincipal">
                        <span class="tf-icons bx bx-task"></span>&nbsp; Actividad
                    </button>
                </div>
            </div>
            <div class="col-md-12">
                <br />
                <div class="nav-align-top mb-4">
                    <ul class="nav nav-tabs nav-fill" role="tablist">
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link active"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-home"
                                    aria-controls="navs-justified-home"
                                    aria-selected="true">
                                Actividad
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-profile"
                                    aria-controls="navs-justified-profile"
                                    aria-selected="false">
                                Notas
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-Correos"
                                    aria-controls="navs-justified-Correos"
                                    aria-selected="false">
                                Correos electrónicos
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-Llamadas"
                                    aria-controls="navs-justified-Llamadas"
                                    aria-selected="false">
                                Llamadas
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-Tareas"
                                    aria-controls="navs-justified-Tareas"
                                    aria-selected="false">
                                Tareas
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-Meetings"
                                    aria-controls="navs-justified-Meetings"
                                    aria-selected="false">
                                Meetings
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button"
                                    class="nav-link"
                                    role="tab"
                                    data-bs-toggle="tab"
                                    data-bs-target="#navs-justified-Mensaje"
                                    aria-controls="navs-justified-Mensaje"
                                    aria-selected="false">
                                Mensaje
                            </button>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="navs-justified-home" role="tabpanel">
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">

                                    @if (ViewBag.PersonaBitacora != null)
                                    {

                                        foreach (var item in ViewBag.PersonaBitacora)
                                        {
                                            <a href="javascript:void(0);"
                                               class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>@item.Operacion</h6>
                                                    <small class="text-muted">@Convert.ToDateTime(item.FechaRegistro).ToString("dd-MM-yyyy")</small>
                                                </div>

                                                <p class="mb-1">
                                                    <strong>@item.Propietario</strong>  @Html.Raw(item.Nota)
                                                </p>
                                                <small class="text-muted">@Convert.ToDateTime(item.FechaRegistro)</small>
                                            </a>
                                        }
                                    }


                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-profile" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaNota">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Crear nota
                                </button>
                            </div>
                            <br />
                            <p class="text-center">
                                <span>Toma notas sobre este registro para realizar un seguimiento de la información importante. Incluso puedes @@mencionar a un compañero de equipo si lo necesitas. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.Notas != null)
                                    {

                                        foreach (var item in ViewBag.Notas)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>
                                                        Propietario: @item.Usuario.Persona.Nombre.ToUpper()
                                                        @{if (item.Usuario.Persona.ApellidoPaterno != null)
                                                            { @item.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.Usuario.Persona.ApellidoMaterno != null)
                                                            { @item.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.Usuario.Persona.Email != null)
                                                            {
                                                                @item.Usuario.Persona.Email.email
                                                            }
                                                        }
                                                    </h6>
                                                    <small class="text-muted">Fecha registro: @Convert.ToDateTime(item.FechaRegistro).ToString("dd-MM-yyyy")</small>
                                                </div>
                                                <p class="mb-1">
                                                    <strong>Nota :</strong>
                                                    <br />
                                                    @item.nota
                                                </p>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-Correos" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoCorreo">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar correo electrónico
                                </button>
                            </div>
                            <br />
                            <p class="text-center">
                                <span>Registra un correo electrónico para realizar un seguimiento. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.Correos != null)
                                    {

                                        foreach (var item in ViewBag.Correos)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>
                                                        Propietario: @item.Correo.Usuario.Persona.Nombre.ToUpper()
                                                        @{if (item.Correo.Usuario.Persona.ApellidoPaterno != null)
                                                            { @item.Correo.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.Correo.Usuario.Persona.ApellidoMaterno != null)
                                                            { @item.Correo.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.Correo.Usuario.Persona.Email != null)
                                                            {
                                                                @item.Correo.Usuario.Persona.Email.email
                                                            }
                                                        }
                                                    </h6>
                                                    <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Correo.FechaEnvio)</small>
                                                </div>
                                                <p class="mb-1">
                                                    <strong>Mensaje :</strong>
                                                    <br />
                                                    @if (@item.Correo.Mensaje != null)
                                                    {
                                                        @item.Correo.Mensaje
                                                    }
                                                    else
                                                    {
                                                        @Html.Label("NO REGISTRO CONTENIDO DEL CORREO");
                                                    }
                                                </p>
                                                <small class="text-muted">@Convert.ToDateTime(item.Correo.FechaRegistro)</small>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-Llamadas" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaLlamada">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar llamada
                                </button>
                            </div>
                            <br />
                            <p class="text-center">
                                <span>Registra una actividad de llamada para realizar un seguimiento de tu discusión y tus notas. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.Llamadas != null)
                                    {

                                        foreach (var item in ViewBag.Llamadas)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>
                                                        Propietario: @item.Llamada.Usuario.Persona.Nombre.ToUpper()
                                                        @{if (item.Llamada.Usuario.Persona.ApellidoPaterno != null)
                                                            { @item.Llamada.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.Llamada.Usuario.Persona.ApellidoMaterno != null)
                                                            { @item.Llamada.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.Llamada.Usuario.Persona.Email != null)
                                                            {
                                                                @item.Llamada.Usuario.Persona.Email.email
                                                            }
                                                        }
                                                    </h6>
                                                    <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Llamada.Fecha)</small>
                                                </div>
                                                <p class="mb-1">
                                                    <strong>Resultado de la llamada:</strong> @item.Llamada.CatResultadoLlamada.Nombre
                                                    <br />
                                                    <strong>Dirección de la llamada:</strong> @item.Llamada.CatDireccionLlamada.Nombre
                                                    <br />
                                                    <strong>Fecha que se realizó la llamada:</strong> @Convert.ToDateTime(item.Llamada.Fecha)
                                                </p>
                                                <p class="mb-1">
                                                    <strong>Descripción :</strong>
                                                    <br />
                                                    @if (@item.Llamada.Descripcion != null)
                                                    {
                                                        @item.Llamada.Descripcion
                                                    }
                                                    else
                                                    {
                                                        @Html.Label("NO REGISTRO CONTENIDO");
                                                    }
                                                </p>
                                                <small class="text-muted">@Convert.ToDateTime(item.Llamada.FechaRegistro)</small>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-Tareas" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaTarea">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Crear tarea
                                </button>
                            </div>
                            <p class="text-center">
                                <span>Registra una tarea para realizar un seguimiento y tus notas. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.BitaoraTareas != null)
                                    {

                                        foreach (var item in ViewBag.BitaoraTareas)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>Titulo: @item.Tarea.Titulo</h6>
                                                    <small class="text-muted">Fecha registro: @Convert.ToDateTime(item.Tarea.FechaRegistro).ToString("dd-MM-yyyy")</small>

                                                </div>
                                                <strong>Tarea :</strong> @item.TareaPersona.CatTipoTarea.Nombre
                                                <p class="mb-1">
                                                    <strong>Estatus:</strong> @item.Tarea.CatEstatusTarea.Nombre -  <strong>Prioridad:</strong> @item.TareaPersona.CatPrioridad.Nombre
                                                    <br />
                                                    <strong>Vencimiento:</strong> @item.Tarea.CatFechaVencimiento.Nombre - <strong>Fecha Vencimiento:</strong> @Convert.ToDateTime(item.Tarea.FechaVencimiento).ToString("dd-MM-yyyy")
                                                    <br />
                                                    <strong>Recordatorio:</strong> @item.Tarea.CatRecordatorio.Nombre -  @{if (item.Tarea.FechaRecordatorio != null)
                                                        { <strong>Fecha Recordatorio:</strong> @Convert.ToDateTime(item.Tarea.FechaRecordatorio).ToString("dd-MM-yyyy") }
                                                    }
                                                </p>
                                                <p class="mb-1">
                                                    <strong>Tarea asignada a:</strong> @item.TareaPersona.Persona.Nombre.ToUpper()
                                                    @{if (item.TareaPersona.Persona.ApellidoPaterno != null)
                                                        { @item.TareaPersona.Persona.ApellidoPaterno.ToUpper()} }
                                                    @{if (item.TareaPersona.Persona.ApellidoMaterno != null)
                                                        { @item.TareaPersona.Persona.ApellidoMaterno.ToUpper()} } -
                                                    @{if (@item.TareaPersona.Persona.Email != null)
                                                        {
                                                            @item.TareaPersona.Persona.Email.email
                                                        }
                                                    }
                                                </p>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-Meetings" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaReunion">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar reunión
                                </button>
                            </div>
                            <br />
                            <p class="text-center">
                                <span>Registra una actividad de reunión para realizar un seguimiento de tus reuniones y tus notas.. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.Reuniones != null)
                                    {

                                        foreach (var item in ViewBag.Reuniones)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>
                                                        Propietario: @item.Reunion.Usuario.Persona.Nombre.ToUpper()
                                                        @{if (item.Reunion.Usuario.Persona.ApellidoPaterno != null)
                                                            { @item.Reunion.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.Reunion.Usuario.Persona.ApellidoMaterno != null)
                                                            { @item.Reunion.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.Reunion.Usuario.Persona.Email != null)
                                                            {
                                                                @item.Reunion.Usuario.Persona.Email.email
                                                            }
                                                        }
                                                    </h6>
                                                    <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Reunion.Fecha)</small>
                                                </div>
                                                <p class="mb-1">
                                                    <strong>Resultado de la reunión:</strong> @item.Reunion.CatResultadoReunion.Nombre
                                                    <br />
                                                    <strong>Duración:</strong> @item.Reunion.CatDuracionReunion.Nombre
                                                    <br />
                                                    <strong>Tipo de reunión:</strong> @item.Reunion.CatTipoReunion.Nombre
                                                    <br />
                                                    <strong>Fecha que se realizó la reunión:</strong> @Convert.ToDateTime(item.Reunion.Fecha)
                                                </p>
                                                <p class="mb-1">
                                                    <strong>Descripción :</strong>
                                                    <br />
                                                    @if (@item.Reunion.Descripcion != null)
                                                    {
                                                        @item.Reunion.Descripcion
                                                    }
                                                    else
                                                    {
                                                        @Html.Label("NO REGISTRO CONTENIDO");
                                                    }
                                                </p>
                                                <small class="text-muted">@Convert.ToDateTime(item.Reunion.FechaRegistro)</small>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="navs-justified-Mensaje" role="tabpanel">
                            <div class="demo-inline-spacing text-left">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoMensaje">
                                    <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar mensaje
                                </button>
                            </div>
                            <br />
                            <p class="text-center">
                                <span>Registra un mensaje para realizar un seguimiento y tus notas. </span>
                            </p>
                            <div class="demo-inline-spacing mt-3">
                                <div class="list-group">
                                    @if (ViewBag.Mensajes != null)
                                    {

                                        foreach (var item in ViewBag.Mensajes)
                                        {
                                            <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                <div class="d-flex justify-content-between w-100">
                                                    <h6>
                                                        Propietario: @item.Mensaje.Usuario.Persona.Nombre.ToUpper()
                                                        @{if (item.Mensaje.Usuario.Persona.ApellidoPaterno != null)
                                                            { @item.Mensaje.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.Mensaje.Usuario.Persona.ApellidoMaterno != null)
                                                            { @item.Mensaje.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.Mensaje.Usuario.Persona.Email != null)
                                                            {
                                                                @item.Mensaje.Usuario.Persona.Email.email
                                                            }
                                                        }
                                                    </h6>
                                                    <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Mensaje.Fecha)</small>
                                                </div>
                                                <p class="mb-1">
                                                    <strong>Tipo de mensaje:</strong> @item.Mensaje.CatTipoMensaje.Nombre
                                                    <br />
                                                    <br />
                                                    <strong>Fecha envió:</strong> @Convert.ToDateTime(item.Mensaje.Fecha)
                                                </p>
                                                <p class="mb-1">
                                                    <strong>Descripción :</strong>
                                                    <br />
                                                    @if (@item.Mensaje.Descripcion != null)
                                                    {
                                                        @item.Mensaje.Descripcion
                                                    }
                                                    else
                                                    {
                                                        @Html.Label("NO REGISTRO CONTENIDO");
                                                    }
                                                </p>
                                                <small class="text-muted">@Convert.ToDateTime(item.Mensaje.FechaRegistro)</small>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div id="FormInformacion" style="display:none">
            <div class="col-md-12">
                <div class="demo-inline-spacing">
                    <button type="button" class="btn btn-primary">
                        <span class="tf-icons bx bx-spreadsheet"></span>&nbsp; Información
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="BtnFormularioPrincipal" onclick="FormularioPrincipal()">
                        <span class="tf-icons bx bx-task"></span>&nbsp; Actividad
                    </button>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title"> Información ! 🖐️</h5>
                                        <div class="row">
                                            <div class="col">
                                                <small class="text-light fw-semibold">Completa los campos marcados *</small>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Nombre </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-user"></i>
                                                        </span>
                                                        <input type="text" class="form-control" value="@ViewBag.Contato.Persona.Nombre" id="Contacto_Nombre" placeholder="Nombre" aria-label="" aria-describedby="Contacto_Nombre" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">Apellido paterno </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-user"></i>
                                                        </span>
                                                        <input type="text" class="form-control" value="@ViewBag.Contato.Persona.ApellidoPaterno" id="Contacto_ApellidoPaterno" placeholder="Apellido paterno" aria-label="" aria-describedby="Contacto_ApellidoPaterno" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">Apellido materno  </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-user"></i>
                                                        </span>
                                                        <input type="text" class="form-control" value="@ViewBag.Contato.Persona.ApellidoMaterno" id="Contacto_ApellidoMaterno" placeholder="Apellido materno" aria-label="" aria-describedby="Contacto_ApellidoMaterno" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">RFC  </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-user"></i>
                                                        </span>
                                                        <input type="text" class="form-control" value="@ViewBag.Contato.Persona.RFC" id="Contacto_RFC" placeholder="RFC" aria-label="" aria-describedby="Contacto_RFC" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname"> Sexo  </label>
                                                    <select class="form-select" id="Contacto_Sexo" aria-label="Contacto_Sexo">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @if (ViewBag.Contato.Persona.Sexo == 1)
                                                        {
                                                            <option value="1" selected>MASCULINO </option>
                                                            <option value="2">FEMENINO </option>
                                                        }
                                                        else if (ViewBag.Contato.Persona.Sexo == 2)
                                                        {
                                                            <option value="1">MASCULINO </option>
                                                            <option value="2" selected>FEMENINO </option>
                                                        }
                                                        else
                                                        {
                                                            <option value="1">MASCULINO </option>
                                                            <option value="2">FEMENINO </option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname"> Fecha nacimiento  </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-calendar"></i>
                                                        </span>
                                                        <input type="date" class="form-control" value="@{ if (ViewBag.Contato.Persona.FechaNacimiento != null) { @ViewBag.Contato.Persona.FechaNacimiento.ToString("yyyy-MM-dd") }  }" id="Contacto_FechaNacimiento" aria-label="" aria-describedby="Contacto_FechaNacimiento" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Tipo contacto  </label>
                                                    <div class="input-group">
                                                        <select id='Contacto_TipoPersona' class="form-select" aria-label="Contacto_TipoPersona" onchange="ValidaSelect('Contacto_TipoPersona')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.TipoPersona)
                                                            {
                                                                if (ViewBag.Contato.Persona.CatTipoPersona.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTipoPersona" aria-controls="offcanvasTipoPersona">+</button>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Cargo   </label>
                                                    <div class="input-group">
                                                        <select id='Contacto_Cargo' class="form-select" aria-label="Contacto_Cargo" onchange="ValidaSelect('Contacto_Cargo')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.Cargo)
                                                            {
                                                                if (ViewBag.Contato.CatCargo.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCargo" aria-controls="offcanvasCargo">+</button>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Estatus   </label>
                                                    <div class="input-group">
                                                        <select id='Contacto_EstatusPersona' class="form-select" aria-label="Contacto_EstatusPersona" onchange="ValidaSelect('Contacto_EstatusPersona')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.EstatusPersona)
                                                            {
                                                                if (ViewBag.Contato.Persona.CatEstatusPersona.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasEstatusPersona" aria-controls="offcanvasEstatusPersona">+</button>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Unidad de negocio </label>
                                                    <div class="input-group">
                                                        <select id='Contacto_UnidadNegocio' class="form-select" aria-label="Contacto_UnidadNegocio" onchange="ValidaSelect('Contacto_UnidadNegocio')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.UnidadNegocio)
                                                            {
                                                                if (ViewBag.Contato.Persona.CatUnidadNegocio.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasUnidadNegocio" aria-controls="offcanvasUnidadNegocio">+</button>
                                                    </div>
                                                </div>
                                            </div>



                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Fuente de origen</label>
                                                    <div class="input-group">
                                                        <select id='Contacto_FuenteOrigen' class="form-select" aria-label="Contacto_FuenteOrigen" onchange="ValidaSelect('Contacto_FuenteOrigen')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.FuenteOrigen)
                                                            {
                                                                if (ViewBag.Contato.CatFuenteOrigen.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasFuenteOrigen" aria-controls="offcanvasFuenteOrigen">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12">
                                                <label for="exampleFormControlTextarea1" class="form-label">Descripción </label>
                                                <textarea class="form-control" id="Contacto_Descripcion1" rows="3" onkeyup="Mayus(this);">@ViewBag.Contato.Persona.Descripcion</textarea>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-8">

                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnActualizarContacto()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Actualizar información
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormEmpresa" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Empresa! 🏢</h5>
                                        <div class="row">
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Empresa   </label>
                                                    <select id='Empresa_Empresa' class="form-select" aria-label="Empresa_Empresa" onchange="CargaDepartamento()">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @if (ViewBag.Empresas != null)
                                                        {
                                                            foreach (var item in ViewBag.Empresas)
                                                            {
                                                                <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Departamento </label>
                                                    <button class="btn btn-primary" type="button" id="IdBtnModalDepartamentoAbrir" data-bs-toggle="offcanvas" data-bs-target="#offcanvasDepartamento" aria-controls="offcanvasDepartamento" style="display:none;">+</button>
                                                    <div class="input-group">
                                                        <select id='Empresa_Departamento' class="form-select" aria-label="Empresa_Departamento" onchange="CargaPuesto()">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalDepartamento" onclick="AbrirDepartamento()">+</button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Puesto </label>
                                                    <button class="btn btn-primary" type="button" id="IdBtnModalPuestoAbrir" data-bs-toggle="offcanvas" data-bs-target="#offcanvasPuesto" aria-controls="offcanvasPuesto" style="display:none;">+</button>
                                                    <div class="input-group">
                                                        <select id='Empresa_Puesto' class="form-select" aria-label="Empresa_Puesto" onchange="ValidaSelect('Empresa_Puesto')">
                                                            <option value="0" selected>SELECCIONAR</option>

                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalPuesto" onclick="AbrirPuesto()">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarEmpresa()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing" id="DivRegistrarEmpresa">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarEmpresa()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                                <div class="demo-inline-spacing" id="DivActualizarEmpresa" style="display:none;">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div id="FormEmail" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Email! 📧</h5>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-email">* Email</label>
                                                    <div class="input-group input-group-merge">
                                                        <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                                                        <input type="text" id="Contacto_Email" class="form-control" placeholder="" aria-label="" aria-describedby="Contacto_Email" onkeyup="BusquedaContactoEmail(this);" />
                                                        <span id="basic-icon-default-email2" class="input-group-text">@@example.com</span>
                                                    </div>
                                                    <div class="form-text">Puedes usar letras, números y puntos</div>
                                                    <button class="btn btn-primary" type="button" id="BtnAbrirBusqueda" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBusquedaEmail" aria-controls="offcanvasBusquedaEmail" style="display:none">
                                                        DF
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarEmail()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarEmail()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormTelefono" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Teléfono! ☎️</h5>
                                        <div class="row">

                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-phone">Teléfono </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-phone2" class="input-group-text">
                                                            <i class="bx bx-phone"></i>
                                                        </span>
                                                        <input type="text"
                                                               id="Telefono_Numero"
                                                               class="form-control phone-mask"
                                                               maxlength="10"
                                                               placeholder="658 799 8941"
                                                               aria-label="658 799 8941"
                                                               aria-describedby="basic-icon-default-phone2"
                                                               pattern="\d*"
                                                               inputmode="numeric"
                                                               oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                                               onchange="ValidaInput('Telefono_Numero')"
                                                               title="Solo se permiten números"
                                                               required />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Tipo teléfono </label>
                                                    <div class="input-group">
                                                        <select id='Telefono_TipoTelefono' class="form-select" aria-label="Telefono_TipoTelefono" onchange="ValidaSelect('Telefono_TipoTelefono')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @{
                                                                if (ViewBag.CatTipoTelefonos != null)
                                                                {
                                                                    foreach (var item in ViewBag.CatTipoTelefonos)
                                                                    {
                                                                        <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalTipoTelefono" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTipoTelefono" aria-controls="offcanvasTipoTelefono">+</button>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarTelefono()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarTelefono()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormDireccion" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Dirección ! 🏘️</h5>
                                        <div class="row">
                                            <div class="col">
                                                <small class="text-light fw-semibold"><br />Dirección (Agiliza tu búsqueda colocando el <strong> código postal </strong>) </small>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Nombre dirección </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-extension"></i>
                                                        </span>
                                                        <input type="text" class="form-control" id="Direccion_Nombre" placeholder="Nombre" aria-label="" aria-describedby="basic-icon-default-fullname2" onchange="ValidaInput('Direccion_Nombre')" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row">
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Código postal  </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-location-plus"></i>
                                                        </span>
                                                        <input type="text" class="form-control" id="Direccion_CP" maxlength="6" placeholder="Código postal" aria-label="" aria-describedby="basic-icon-default-fullname2" onchange="CPBuscar(this.value)" onkeypress="return soloNum(event)" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-8">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">Calle </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-location-plus"></i>
                                                        </span>
                                                        <input type="text" class="form-control" id="Direccion_Calle" placeholder="Calle" aria-label="" aria-describedby="basic-icon-default-fullname2" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">Número exterior </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-location-plus"></i>
                                                        </span>
                                                        <input type="text" class="form-control" id="Direccion_NumeroExterior" placeholder="Número exterior" aria-label="" aria-describedby="basic-icon-default-fullname2" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">Número interior </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-location-plus"></i>
                                                        </span>
                                                        <input type="text" class="form-control" id="Direccion_NumeroInterior" placeholder="Número interior" aria-label="" aria-describedby="basic-icon-default-fullname2" onkeyup="Mayus(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Estado</label>
                                                    <select class="form-select" id="Direccion_Estado" aria-label="Default select example" onchange="callEstados(this.value)">
                                                        <option selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.CatEstados)
                                                        {
                                                            <option value="@item.Id">@item.Estado.ToUpper()</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Ciudad o Municipio</label>
                                                    <select class="form-select" id="Direccion_Poblacion" aria-label="Default select example" onchange="callColonias(this.value)">
                                                        <option selected>SELECCIONAR</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Colonia</label>
                                                    <select class="form-select" id="Direccion_Colonia" aria-label="Default select example" onchange="callCP(this.value)">
                                                        <option selected>SELECCIONAR</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarDireccion()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarDireccion()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="col-lg-4 mb-4 order-0">
        <div class="row">
            <div class="col-lg-12 col-md-12 mb-3">
                <div class="card border border-@ViewBag.Contato.Persona.CatEstatusPersona.Color">
                    <div class="card-body">
                        <div class="card-title d-flex align-items-start justify-content-between" style="margin-bottom: 0rem; ">
                            <div class="avatar flex-shrink-0">
                                <div class="d-flex">
                                    <div class="me-2">
                                        <span class="badge bg-label-@ViewBag.Contato.Persona.CatEstatusPersona.Color p-2"><i class="bx bx-hive text-@ViewBag.Contato.Persona.CatEstatusPersona.Color"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="text-center" role="toolbar" aria-label="Toolbar with button groups">
                                <div class="btn-group " role="group" aria-label="First group">
                                    <button type="button" class="btn btn-outline-@ViewBag.Contato.Persona.CatEstatusPersona.Color"
                                            data-bs-toggle="tooltip"
                                            data-bs-offset="0,4"
                                            data-bs-placement="top"
                                            data-bs-html="true"
                                            title="<i class='bx bx-edit' ></i> <span>Editar</span>" onclick="BtnAbrirActualizarEstatus()">
                                        <i class="tf-icons bx bx-edit"></i>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <span class="fw-semibold d-block mb-1 text-@ViewBag.Contato.Persona.CatEstatusPersona.Color" style=" font-size: 15px;">Estatus contacto: </span>
                        <h3 class="card-title mb-2 text-@ViewBag.Contato.Persona.CatEstatusPersona.Color" style=" font-size: 20px;"> @ViewBag.Contato.Persona.CatEstatusPersona.Nombre</h3>

                    </div>
                </div>
            </div>
        </div>

        @{
            if (ViewBag.UsuarioTarea != null)
            {
                <div class="row">
                    <div class="col-lg-12 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title text-center">Lista de tareas pendientes </h5>
                                @foreach (var item1 in ViewBag.UsuarioTarea)
                                {
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12  mb-4">
                                            <div class="card border border-primary">
                                                <div class="card-title d-flex align-items-start justify-content-between p-2" style="margin-bottom: -1.125rem;">
                                                    <div class="avatar flex-shrink-0">
                                                        <div class="d-flex">
                                                            <div class="me-2">
                                                                <span class="badge bg-label-primary p-2"><i class="bx bx-bell text-primary"></i> @item1.Tarea.CatEstatusTarea.Nombre</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="dropdown ">
                                                        <div class="me-2">
                                                            <span class="badge bg-label-primary p-2"><i class="bx bx-calendar text-primary"></i>  </span> <span> Fecha Vencimiento : <strong>  @Convert.ToDateTime(@item1.Tarea.FechaVencimiento).ToString("dd-MM-yyyy") </strong></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=" justify-content-between p-2">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <span class="fw-semibold mb-1">TIPO TAREA: <strong> @item1.TareaPersona.CatTipoTarea.Nombre</strong></span>
                                                        </div>
                                                        <div class="col-md-12">
                                                            <span class="fw-semibold mb-1">TITULO:<br /> <strong>@item1.Tarea.Titulo</strong></span>
                                                        </div>
                                                        <div class="col-md-12 text-center">
                                                            <div class="demo-inline-spacing">
                                                                <button type="button" class="btn btn-secondary">
                                                                    <span class="tf-icons bx bx-calendar"></span>
                                                                </button>
                                                                <button type="button" class="btn btn-info" onclick="AbrirFormCompletarTarea(@item1.Tarea.Id)">
                                                                    <span class="tf-icons bx bx-check-circle"></span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        <div class="row">
            <div class="col-lg-12">
                <div class="accordion" id="accordionExample">
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingTwo">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionTwo"
                                    aria-expanded="false"
                                    aria-controls="accordionTwo">
                                Empresas  &nbsp;<span id="Btn_Titulo_Empresas"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar empresa</span>" onclick="MostrarAgregarEmpresa()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableEmpresas">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las empresas u organizaciones asociadas a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingThree">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionThree"
                                    aria-expanded="false"
                                    aria-controls="accordionThree">
                                Oportunidades  &nbsp;<span id="Btn_Titulo_Oportunidades"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionThree"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingThree"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableOportunidades">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las oportunidades asociadas a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingOne">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionOne"
                                    aria-expanded="false"
                                    aria-controls="accordionOne">
                                Email relacionados  &nbsp;<span id="Btn_Titulo_PersonaEmail"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionOne"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingOne"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar Email</span>" onclick="MostrarAgregarEmail()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TablePersonaEmail">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve los emails asociados a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingTelefono">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionTelefono"
                                    aria-expanded="false"
                                    aria-controls="accordionTelefono">
                                Teléfonos relacionados  &nbsp;<span id="Btn_Titulo_Telefonos"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionTelefono"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingTelefono"
                             data-bs-parent="#accordionTelefono">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar Teléfono</span>" onclick="MostrarAgregarTelefono()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TablePersonaTelefonos">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve los teléfonos asociados a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingDirecciones">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionDirecciones"
                                    aria-expanded="false"
                                    aria-controls="accordionDirecciones">
                                Direcciones relacionadas  &nbsp;<span id="Btn_Titulo_Direcciones"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionDirecciones"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingDirecciones"
                             data-bs-parent="#accordionDirecciones">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar dirección </span>" onclick="MostrarAgregarDireccion()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TablePersonaDirecciones">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las direcciones asociadas a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingPertenencia">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionPertenencia"
                                    aria-expanded="false"
                                    aria-controls="accordionPertenencia">
                                Pertenencia a listas (0)
                            </button>
                        </h2>
                        <div id="accordionPertenencia"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingPertenencia"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                ....
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las listas asociados a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingCuatro">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionCuatro"
                                    aria-expanded="false"
                                    aria-controls="accordionThree">
                                Archivos Adjuntos &nbsp;<span id="Btn_Titulo_Archivos"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionCuatro"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingThree"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" id="BtnAgregarImporte" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Subir Archivo</span>" onclick="SubirArchivo()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 text-center">
                                        <input id="fileInputArchivo" type="file" style="visibility:hidden">
                                        <progress id="fileProgresArchivo" style="width: 100%; display: none;"></progress>
                                    </div>
                                </div>
                                <div class="row" id="TableArchivosAdjuntos">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve los archivos adjuntos a las actividades o cargados en este registro.</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!---  FORMULARIO NUEVO DEPARTAMENTO  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasDepartamento" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO DEPARTAMENTO</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre departamento</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-building-house"></i>
                        </span>
                        <input type="text" class="form-control" id="Departamento_Nombre" placeholder="Nombre departamento" aria-label="" aria-describedby="Departamento_Nombre" onchange="ValidaInput('Departamento_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarDepartamento()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnDepartamentoCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVO PUESTO  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasPuesto" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO PUESTO</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre puesto</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-building-house"></i>
                        </span>
                        <input type="text" class="form-control" id="Puesto_Nombre" placeholder="Nombre puesto" aria-label="" aria-describedby="Puesto_Nombre" onchange="ValidaInput('Puesto_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarPuesto()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnPuestoCerrar">  Cancelar  </button>
    </div>
</div>

<!---- BUSQUEDA DE EMAIL --->
<div id="offcanvasBusquedaEmail" class="offcanvas offcanvas-end" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" aria-labelledby="offcanvasScrollLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasScrollLabel" class="offcanvas-title">SIMILITUD EN EMAIL</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="text-nowrap" id="TablaBusquedaEmail">

            </div>
        </div>

        <br />
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnBusquedaEmailCerrar">
            Cerrar
        </button>
    </div>
</div>

<!---  FORMULARIO NUEVO TIPO TELÉFONO  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasTipoTelefono" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO TIPO TELÉFONO </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre tipo teléfono </label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-building-house"></i>
                        </span>
                        <input type="text" class="form-control" id="Tipo_Telefono" placeholder="Tipo teléfono" aria-label="" aria-describedby="Tipo_Telefono" onchange="ValidaInput('Tipo_Telefono')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarTipoTelefono()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnTipoTelefonoCerrar">  Cancelar  </button>
    </div>
</div>





<!-- MODAL ACTUALIZAR ESTATUS -->
<div class="modal fade" id="modalEstatusContacto" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Actualizar estatus contacto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Estatus </label>
                            <div class="input-group">
                                <select id='Contacto_EstatusContacto' class="form-select" aria-label="Contacto_EstatusContacto">
                                    <option value="0" selected>SELECCIONAR</option>
                                    @foreach (var item in ViewBag.EstatusPersona)
                                    {
                                        <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                        @*if (ViewBag.Persona.CatEstatusPersona.Id != item.Id)
                                            {
                                                <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                            }*@
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Observación </label>
                        <textarea class="form-control" id="Contacto_Descripcion" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                    <div class="col-lg-12">
                        <br />
                        <p>Coloca el número de confirmación : <strong><span id="Contacto_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Clave</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-key"></i>
                                </span>
                                <input type="text" class="form-control" id="Contacto_Clave" placeholder="Numero de confirmación" aria-label="" aria-describedby="Contacto_Clave" onkeyup="Mayus(this);" onchange="ValidaInput('Contacto_Clave')" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" id="BtnCancelarContactoEstatus" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="ActualizarEstatusContacto()">Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA TAREA  -->
<div class="modal fade" id="modalNuevaTarea" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Nueva Tarea</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Tarea_checkbox_Tarea" onclick="ConsultaTareasTarea()" />
                            <label class="form-check-label" for="Tarea_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Tarea" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Tarea_Tarea' class="form-select" aria-label="Tarea_Tarea" onchange="ValidaSelect('Tarea_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <label for="defaultFormControlInput" class="form-label">* Ingresa el título de tu tarea</label>
                        <input type="text" class="form-control" id="Tarea_Titulo" placeholder="Tarea" aria-describedby="Tarea_Titulo" onchange="ValidaInput('Tarea_Titulo')" onkeyup="Mayus(this);" />
                        <div id="defaultFormControlHelp" class="form-text">
                            Ingresa un nombre corto y descriptivo de tu tarea.
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Fecha de vencimiento </label>
                            <select id='Tarea_FechaVencimiento' class="form-select" aria-label="Tarea_FechaVencimiento" onchange="ValidaFechaVencimiento()">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.FechaVencimiento)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                            <input type="date" class="form-control" id="Tarea_FechaVencimiento_Date" aria-label="" aria-describedby="Tarea_FechaVencimiento_Date" onchange="ValidaInput('Tarea_FechaVencimiento_Date')" style="display:none;" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Enviar recordatorio </label>
                            <select id='Tarea_FechaRecordatorio' class="form-select" aria-label="Tarea_FechaRecordatorio" onchange="ValidaFechaRecordatorio()">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Recordatorio)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                            <input type="date" class="form-control" id="Tarea_FechaRecordatorio_Date" aria-label="" aria-describedby="Tarea_FechaRecordatorio_Date" onchange="ValidaInput('Tarea_FechaRecordatorio_Date')" style="display:none;" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo </label>
                            <select id='Tarea_TipoTarea' class="form-select" aria-label="Tarea_TipoTarea" onchange="ValidaSelect('Tarea_TipoTarea')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoTarea)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* ASOCIAR A   </label>
                            <select id='Tarea_Contacto' class="form-select" aria-label="Tarea_Contacto" style="width:100%" onchange="ValidaSelect('Tarea_Contacto')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Usuarios)
                                {
                                    //if (((CRM.Models.Usuario)System.Web.HttpContext.Current.Session["Sesion"]).Id == item.Id)
                                    //{

                                    //}
                                    //else
                                    //{
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper() @item.Persona.ApellidoPaterno.ToUpper() @item.Persona.ApellidoMaterno.ToUpper() ( @if (@item.Persona.Email != null)
                                        {@item.Persona.Email.email.ToLower()} )
                                    </option>
                                    @*}*@
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Prioridad </label>
                            <select id='Tarea_Prioridad' class="form-select" aria-label="Tarea_Prioridad" onchange="ValidaSelect('Tarea_Prioridad')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Prioridad)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Notas </label>
                        <textarea class="form-control" id="Tarea_Notas" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnCrearTarea()">Crear tarea</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL ACTUALIZAR ESTATUS TAREA-->
<div class="modal fade" id="modalEstatusTarea" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Tarea terminada </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Observación </label>
                        <textarea class="form-control" id="Tarea_Estatus_Descripcion" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                    <div class="col-lg-12">
                        <br />
                        <p>Coloca el número de confirmación : <strong><span id="Tarea_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Clave</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-key"></i>
                                </span>
                                <input type="text" class="form-control" id="Tarea_Clave" placeholder="Numero de confirmación" aria-label="" aria-describedby="Tarea_Clave" onkeyup="Mayus(this);" onchange="ValidaInput('Tarea_Clave')" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" id="DivBTNsEstatusTarea">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="ActualizarEstatusTarea()">Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA NOTA  -->
<div class="modal fade" id="modalNuevaNota" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Nueva Nota</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Notas </label>
                        <textarea class="form-control" id="Nota_Notas" placeholder="..." rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnCrearNota()">Crear nota</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVO CORREO  -->
<div class="modal fade" id="modalNuevoCorreo" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar correo electrónico</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Correo_checkbox_Tarea" onclick="ConsultaTareasCorreo()" />
                            <label class="form-check-label" for="Correo_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Correo" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Correo_Tarea' class="form-select" aria-label="Correo_Tarea" onchange="ValidaSelect('Correo_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-7">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Correo_Contacto' class="test form-select" aria-label="Correo_Contacto" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    if (ViewBag.Contato.Persona.Id == item.Persona.Id)
                                    {
                                        <option value="@item.Persona.Id" selected>
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@item.Persona.Id">
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha envió </label>
                            <input class="form-control" type="datetime-local" id="Correo_FechaEnvio" onchange="ValidaInput('Correo_FechaEnvio')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Correo_MensajeCorreo" rows="3" placeholder="Describe el correo ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarCorreo()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA LLAMDA  -->
<div class="modal fade" id="modalNuevaLlamada" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar llamada  </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Llamada_checkbox_Tarea" onclick="ConsultaTareasLlamada()" />
                            <label class="form-check-label" for="Llamada_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Llamada" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Llamada_Tarea' class="form-select" aria-label="Llamada_Tarea" onchange="ValidaSelect('Llamada_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Llamada_Contacto' class="test form-select" aria-label="Llamada_Contacto" onchange="ValidaSelect('Llamada_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    if (ViewBag.Contato.Persona.Id == item.Persona.Id)
                                    {
                                        <option value="@item.Persona.Id" selected>
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@item.Persona.Id">
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Resultado de la llamada </label>
                            <select id='Llamada_ResultadoLlamada' class="form-select" aria-label="Llamada_ResultadoLlamada" onchange="ValidaSelect('Llamada_ResultadoLlamada')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.ResultadoLlamada)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Dirección de la llamada </label>
                            <select id='Llamada_DireccionLlamada' class="form-select" aria-label="Llamada_DireccionLlamada" onchange="ValidaSelect('Llamada_DireccionLlamada')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.DireccionLlamada)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha que se realizó la llamada </label>
                            <input class="form-control" type="datetime-local" id="Llamada_FechaLlamada" onchange="ValidaInput('Llamada_FechaLlamada')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Llamada_Descripcion" rows="3" placeholder="Describe la llamada ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarLlamada()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA REUNION  -->
<div class="modal fade" id="modalNuevaReunion" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar reunión  </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Reunion_checkbox_Tarea" onclick="ConsultaTareasReunion()" />
                            <label class="form-check-label" for="Reunion_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Reunion" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Reunion_Tarea' class="form-select" aria-label="Reunion_Tarea" onchange="ValidaSelect('Reunion_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Asistentes </label>
                            <select id='Reunion_Contacto' class="test form-select" aria-label="Reunion_Contacto" onchange="ValidaSelect('Reunion_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    if (ViewBag.Contato.Persona.Id == item.Persona.Id)
                                    {
                                        <option value="@item.Persona.Id" selected>
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@item.Persona.Id">
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha  </label>
                            <input class="form-control" type="datetime-local" id="Reunion_Fecha" onchange="ValidaInput('Reunion_Fecha')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Resultado de la reunion </label>
                            <select id='Reunion_ResultadoReunion' class="form-select" aria-label="Reunion_ResultadoReunion" onchange="ValidaSelect('Reunion_ResultadoReunion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.ResultadoReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Duración </label>
                            <select id='Reunion_Duracion' class="form-select" aria-label="Reunion_Duracion" onchange="ValidaSelect('Reunion_Duracion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.DuracionReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo de reunión </label>
                            <select id='Reunion_TipoReunion' class="form-select" aria-label="Reunion_TipoReunion" onchange="ValidaSelect('Reunion_TipoReunion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Reunion_Descripcion" rows="3" placeholder="Describe la reunion ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarReunion()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVO MENSAJE  -->
<div class="modal fade" id="modalNuevoMensaje" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar mensaje</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Mensaje_checkbox_Tarea" onclick="ConsultaTareasMensaje()" />
                            <label class="form-check-label" for="Mensaje_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Mensaje" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Mensaje_Tarea' class="form-select" aria-label="Mensaje_Tarea" onchange="ValidaSelect('Mensaje_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Mensaje_Contacto' class="test form-select" aria-label="Mensaje_Contacto" onchange="ValidaSelect('Mensaje_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    if (ViewBag.Contato.Persona.Id == item.Persona.Id)
                                    {
                                        <option value="@item.Persona.Id" selected>
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@item.Persona.Id">
                                            @item.Persona.Nombre.ToUpper()
                                            @{if (item.Persona.ApellidoPaterno != null)
                                                { @item.Persona.ApellidoPaterno.ToUpper()} }
                                            @{if (item.Persona.ApellidoMaterno != null)
                                                { @item.Persona.ApellidoMaterno.ToUpper()} }
                                            (@item.Persona.Email.email)
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo Mensaje </label>
                            <select id='Mensaje_TipoMensaje' class="form-select" aria-label="Mensaje_TipoMensaje" onchange="ValidaSelect('Mensaje_TipoMensaje')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoMensaje)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha envió </label>
                            <input class="form-control" type="datetime-local" id="Mensaje_FechaEnvio" onchange="ValidaInput('Mensaje_FechaEnvio')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Mensaje_Descripcion" rows="3" placeholder="Describe el mensaje  ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarMensaje()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL ACTUALIZAR Telefono -->
<div class="modal fade" id="modalActualizarTelefono" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Actualizar Telefono ☎️</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        
                        <p>Coloca el nuevo numero : <strong><span id="Contacto_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Telefono</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-phone2" class="input-group-text">
                                    <i class="bx bx-phone"></i>
                                </span>
                                <input type="text"
                                       class="form-control"
                                       id="TelefonoNuevo"
                                       placeholder="Numero de telefono"
                                       aria-label=""
                                       aria-describedby="Contacto_Clave"
                                       pattern="\d{10}"
                                       maxlength="10"
                                       inputmode="numeric"
                                       oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);"
                                       title="Debe contener exactamente 10 dígitos numéricos"
                                       required />

                            </div>
                            <span id="telefonoError" style="color: red;"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" id="BtnCancelarContactoEstatus" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnNuevoTel" >Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<script>(function ($) {
        $(function () {
            window.fs_test = $('.test').fSelect();
        });
    })(jQuery);</script>

<script>
    function ConsultaTareasTarea() {
        if ($("#Tarea_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Tarea").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 6;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Tarea_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Tarea_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Tarea_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Tarea").css("display", "none");
        }
    }

    function ConsultaTareasMensaje() {
        if ($("#Mensaje_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Mensaje").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 4;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Mensaje_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Mensaje_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Mensaje_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Mensaje").css("display", "none");
        }
    }

    function ConsultaTareasReunion() {
        if ($("#Reunion_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Reunion").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 5;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Reunion_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Reunion_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Reunion_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Reunion").css("display", "none");
        }
    }

    function ConsultaTareasLlamada() {
         if ($("#Llamada_checkbox_Tarea").is(':checked')) {

             $("#ListaTareaUsuario_Llamada").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 1;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Llamada_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Llamada_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Llamada_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
             $("#ListaTareaUsuario_Llamada").css("display", "none");
        }
    }

    function ConsultaTareasCorreo() {
        if ($("#Correo_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Correo").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 2;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Correo_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Correo_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Correo_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Correo").css("display", "none");
        }
    }
</script>

<script>
    function BtnRegistrarMensaje() {
        if (ValidarNuevaMensaje()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var MensajeEntidad = new Object();
            MensajeEntidad.CatEntidad = CatEntidad;
            MensajeEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            if ($("#Mensaje_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Mensaje_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var MensajePersona = [];
            $("#Mensaje_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                MensajePersona.push({
                    "Persona": Persona,
                });
            });

            var CatTipoMensaje = new Object();
            CatTipoMensaje.Id = $("#Mensaje_TipoMensaje option:selected").val();

            var Mensaje = new Object();
            Mensaje.CatTipoMensaje = CatTipoMensaje;
            Mensaje.Descripcion = $('#Mensaje_Descripcion').val();
            Mensaje.Fecha = $('#Mensaje_FechaEnvio').val();

            var NuevaMensaje = new Object();
            NuevaMensaje.Tarea = Tarea;
            NuevaMensaje.MensajeEntidad = MensajeEntidad;
            NuevaMensaje.Mensaje = Mensaje;
            NuevaMensaje.MensajePersona = MensajePersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Mensaje_Agregar", "Mensaje")",
                async: false,
                data: JSON.stringify(NuevaMensaje),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nuevo mensaje registrado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Mensaje no registrado ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Mensaje no registardo ! ", "Intentelo mas tarde.");
                }
            });
        }
    }

    function ValidarNuevaMensaje() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Mensaje_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Mensaje_checkbox_Tarea").is(':checked')) {
            if ($("#Mensaje_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }


        $('#Mensaje_Tarea').css("border", "1px solid #f44336");
        $('#Mensaje_TipoMensaje').css("border", "1px solid #f44336");
        $('#Mensaje_FechaEnvio').css("border", "1px solid #f44336");


        if ($("#Mensaje_Tarea option:selected").val() > 0) {
            $('#Mensaje_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($("#Mensaje_TipoMensaje option:selected").val() > 0) {
            $('#Mensaje_TipoMensaje').css("border", "1px solid #d9dee3");
        }

        if ($('#Mensaje_FechaEnvio').val().length > 0) {
            $('#Mensaje_FechaEnvio').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Mensaje_TipoMensaje option:selected").val() > 0) {
                    if ($('#Mensaje_FechaEnvio').val().length > 0) {
                        result = true;
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }

        return result;
    }
</script>

<script>
    function BtnRegistrarReunion() {
        if (ValidarNuevaReunion()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var ReunionEntidad = new Object();
            ReunionEntidad.CatEntidad = CatEntidad;
            ReunionEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            if ($("#Reunion_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Reunion_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var ReunionPersona = [];
            $("#Reunion_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                ReunionPersona.push({
                    "Persona": Persona,
                });
            });

            var CatResultadoReunion = new Object();
            CatResultadoReunion.Id = $("#Reunion_ResultadoReunion option:selected").val();

            var CatDuracionReunion = new Object();
            CatDuracionReunion.Id = $("#Reunion_Duracion option:selected").val();

            var CatTipoReunion = new Object();
            CatTipoReunion.Id = $("#Reunion_TipoReunion option:selected").val();

            var Reunion = new Object();
            Reunion.CatResultadoReunion = CatResultadoReunion;
            Reunion.CatDuracionReunion = CatDuracionReunion;
            Reunion.CatTipoReunion = CatTipoReunion;
            Reunion.Descripcion = $('#Reunion_Descripcion').val();
            Reunion.Fecha = $('#Reunion_Fecha').val();

            var NuevaReunion = new Object();
            NuevaReunion.Tarea = Tarea;
            NuevaReunion.ReunionEntidad = ReunionEntidad;
            NuevaReunion.Reunion = Reunion;
            NuevaReunion.ReunionPersona = ReunionPersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Reunion_Agregar", "Reunion")",
                async: false,
                data: JSON.stringify(NuevaReunion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nueva reunión registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Reunión no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Reunión no registarda ! ", "Intentelo mas tarde.");
                }
            });

        }
    }

    function ValidarNuevaReunion() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Reunion_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Reunion_checkbox_Tarea").is(':checked')) {
            if ($("#Reunion_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        $('#Reunion_Tarea').css("border", "1px solid #f44336");
        $('#Reunion_Fecha').css("border", "1px solid #f44336");
        $('#Reunion_ResultadoReunion').css("border", "1px solid #f44336");
        $('#Reunion_Duracion').css("border", "1px solid #f44336");
        $('#Reunion_TipoReunion').css("border", "1px solid #f44336");

        if ($("#Reunion_Tarea option:selected").val() > 0) {
            $('#Reunion_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($('#Reunion_Fecha').val().length > 0) {
            $('#Reunion_Fecha').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_ResultadoReunion option:selected").val() > 0) {
            $('#Reunion_ResultadoReunion').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_Duracion option:selected").val() > 0) {
            $('#Reunion_Duracion').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_TipoReunion option:selected").val() > 0) {
            $('#Reunion_TipoReunion').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Reunion_ResultadoReunion option:selected").val() > 0) {
                    if ($("#Reunion_Duracion option:selected").val() > 0) {
                        if ($("#Reunion_TipoReunion option:selected").val() > 0) {
                            if ($('#Reunion_Fecha').val().length > 0) {
                                result = true;
                            } else { AlertIncompleto(); }
                        } else { AlertIncompleto(); }
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }

        return result;
    }
</script>

<script>
    function BtnRegistrarLlamada() {
        if (ValidarNuevaLlamada()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var LlamadaEntidad = new Object();
            LlamadaEntidad.CatEntidad = CatEntidad;
            LlamadaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            if ($("#Llamada_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Llamada_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var LlamadaPersona = [];
            $("#Llamada_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                LlamadaPersona.push({
                    "Persona": Persona,
                });
            });

            var CatResultadoLlamada = new Object();
            CatResultadoLlamada.Id = $("#Llamada_ResultadoLlamada option:selected").val();

            var CatDireccionLlamada = new Object();
            CatDireccionLlamada.Id = $("#Llamada_DireccionLlamada option:selected").val();


            var Llamada = new Object();
            Llamada.CatResultadoLlamada = CatResultadoLlamada;
            Llamada.CatDireccionLlamada = CatDireccionLlamada;
            Llamada.Descripcion = $('#Llamada_Descripcion').val();
            Llamada.Fecha = $('#Llamada_FechaLlamada').val();

            var NuevaLlamada = new Object();
            NuevaLlamada.Tarea = Tarea;
            NuevaLlamada.LlamadaEntidad = LlamadaEntidad;
            NuevaLlamada.Llamada = Llamada;
            NuevaLlamada.LlamadaPersona = LlamadaPersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Llamada_Agregar", "Llamada")",
                async: false,
                data: JSON.stringify(NuevaLlamada),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nueva llamada registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Llamada no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Llamada no registarda ! ", "Intentelo mas tarde.");
                }
            });

        }
    }

    function ValidarNuevaLlamada() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Llamada_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Llamada_checkbox_Tarea").is(':checked')) {
            if ($("#Llamada_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        $('#Llamada_Tarea').css("border", "1px solid #f44336");
        $('#Llamada_ResultadoLlamada').css("border", "1px solid #f44336");
        $('#Llamada_DireccionLlamada').css("border", "1px solid #f44336");
        $('#Llamada_FechaLlamada').css("border", "1px solid #f44336");

        if ($("#Llamada_Tarea option:selected").val() > 0) {
            $('#Llamada_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($("#Llamada_ResultadoLlamada option:selected").val() > 0) {
            $('#Llamada_ResultadoLlamada').css("border", "1px solid #d9dee3");
        }

        if ($("#Llamada_DireccionLlamada option:selected").val() > 0) {
            $('#Llamada_DireccionLlamada').css("border", "1px solid #d9dee3");
        }

        if ($('#Llamada_FechaLlamada').val().length > 0) {
            $('#Llamada_FechaLlamada').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Llamada_ResultadoLlamada option:selected").val() > 0) {
                    if ($("#Llamada_DireccionLlamada option:selected").val() > 0) {
                        if ($('#Llamada_FechaLlamada').val().length > 0) {
                            result = true;
                        } else { AlertIncompleto(); }
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }
        return result;
    }
</script>

<script>
    function BtnRegistrarCorreo() {
        if (ValidarNuevoCorreo()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var CorreoEntidad = new Object();
            CorreoEntidad.CatEntidad = CatEntidad;
            CorreoEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var Correo = new Object();
            Correo.Mensaje = $('#Correo_MensajeCorreo').val();
            Correo.FechaEnvio = $('#Correo_FechaEnvio').val();

            var Tarea = new Object();
            if ($("#Correo_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Correo_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var CorreoPersona = [];
            $("#Correo_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                CorreoPersona.push({
                    "Persona": Persona,
                });
            });

            var NuevoCorreo = new Object();
            NuevoCorreo.Tarea = Tarea;
            NuevoCorreo.CorreoEntidad = CorreoEntidad;
            NuevoCorreo.Correo = Correo;
            NuevoCorreo.CorreoPersona = CorreoPersona;

             $.ajax({
                type: "POST",
                url: "@Url.Action("CorreoElectronico_Agregar", "CorreoElectronico")",
                async: false,
                 data: JSON.stringify(NuevoCorreo),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nuevo correo electrónico  registrado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Correo electrónico  no registrado ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Correo electrónico  no registardo ! ", "Intentelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarNuevoCorreo() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Correo_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        $('#Correo_Tarea').css("border", "1px solid #f44336");
        $("#SelectContenido").css("border", "1px solid #f44336");
        $('#Correo_FechaEnvio').css("border", "1px solid #f44336");

        if ($("#Correo_checkbox_Tarea").is(':checked')) {
            if ($("#Correo_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        if ($("#Correo_Tarea option:selected").val() > 0) {
            $('#Correo_Tarea').css("border", "1px solid #d9dee3");
        }

        if (Contactos.length > 0) {
            $("#SelectContenido").css("border", "1px solid #d9dee3");
        }

        if ($('#Correo_FechaEnvio').val().length > 0) {
            $('#Correo_FechaEnvio').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($('#Correo_FechaEnvio').val().length > 0) {
                    result = true;
                }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos .");
            }
        }

        return result;
    }

</script>

<script>
    function BtnCrearNota(){
        if (ValidarNuevaNota()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var Nota = new Object();
            Nota.nota = $('#Nota_Notas').val();

            var NotaEntidad = new Object();
            NotaEntidad.Nota = Nota;
            NotaEntidad.CatEntidad = CatEntidad;
            NotaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Nota_Agregar", "Notas")",
                async: false,
                data: JSON.stringify(NotaEntidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Nueva nota registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Nota no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Nota no registarda ! ", "Intentelo mas tarde.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function ValidarNuevaNota() {
        var result = false;

        $('#Nota_Notas').css("border", "1px solid #f44336");


        if ($('#Nota_Notas').val().length > 0) {
            $('#Nota_Notas').css("border", "1px solid #d9dee3");
        }

        if ($('#Nota_Notas').val().length > 0) {
            result = true;
        }

        return result;
    }
</script>

<script>
    function ActualizarEstatusTarea(Id) {
        if (ValidarEstatusTarea()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad =  @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            Tarea.Id = Id;
            Tarea.Notas = $('#Tarea_Estatus_Descripcion').val();

            var NuevaTarea = new Object();
            NuevaTarea.TareaEntidad = TareaEntidad;
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.Clave = $('#Tarea_Clave').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Actulizar_Terminar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Tarea finalizada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Tarea no actulizada ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ActualizarEstatusTareaCancelar(Id) {
        if (ValidarEstatusTarea()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad =  @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            Tarea.Id = Id;
            Tarea.Notas = $('#Tarea_Estatus_Descripcion').val();

            var NuevaTarea = new Object();
            NuevaTarea.TareaEntidad = TareaEntidad;
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.Clave = $('#Tarea_Clave').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Actulizar_Cancelar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Tarea cancelada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Tarea no actulizada ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarEstatusTarea() {
        var result = false;

        $('#Tarea_Clave').css("border", "1px solid #f44336");
        $('#Tarea_Clave').css("border-left", "none");

        if ($('#Tarea_Clave').val().length > 0) {
            $('#Tarea_Clave').css("border", "1px solid #d9dee3");
            $('#Tarea_Clave').css("border-left", "none");
        }

        if ($('#Tarea_Clave').val().length > 0) {
            result = true;
        }

        return result;
    }

    function AbrirFormCompletarTarea(Id) {
        var ClaveMovimiento = new Object();
        ClaveMovimiento.Movimiento = "Actualizar";
        ClaveMovimiento.Observaciones = "Actualizar estatus tarea";

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClaveMovimiento_Agregar", "ClaveMovimiento")",
            async: false,
            data: JSON.stringify(ClaveMovimiento),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
              /*  console.log(data);*/
                if (data.Id > 0) {
                    $("#modalEstatusTarea").modal("show");
                    $('#Tarea_Clave_Text').text(data.Clave);

                    //var html = "<button type='button' class='btn btn-outline-secondary' data-bs-dismiss='modal'>" +
                    //            "    Cerrar" +
                    //            "</button>" +
                    var html = "<button type='button' class='btn btn-primary' id='BtnGuardarOportunidadEstatus' onclick='ActualizarEstatusTarea(" + Id + ")'>" +
                            "<span class='tf-icons bx bx-like'></span>&nbsp; Terminar tarea</button> " +
                            "<button type='button' class='btn btn-danger' id='BtnGuardarOportunidadEstatus' onclick='ActualizarEstatusTareaCancelar(" + Id + ")'> " +
                                "<span class='tf-icons bx bx-trash'></span>&nbsp; Eliminar tarea " +
                            "</button > ";
                    $('#DivBTNsEstatusTarea').html(html);

                } else if (data.Id == 0) {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            },
            error: function () {
                AlertDanger("Permiso denegado ! ", "Actualización no valida .");
            }
        });
    }

</script>
<script>

    function BtnCrearTarea() {
        if (ValidarTarea()) {

            var CatFechaVencimiento = new Object();
            CatFechaVencimiento.Id = $("#Tarea_FechaVencimiento option:selected").val();

            var CatRecordatorio = new Object();
            CatRecordatorio.Id = $("#Tarea_FechaRecordatorio option:selected").val();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = $("#Tarea_TipoTarea option:selected").val();

            var CatPrioridad = new Object();
            CatPrioridad.Id = $("#Tarea_Prioridad option:selected").val()

            var Persona = new Object();
            Persona.Id = $("#Tarea_Contacto option:selected").val();

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;
            TareaPersona.CatPrioridad = CatPrioridad;
            TareaPersona.Persona = Persona;

            var CatEntidad = new Object();
            CatEntidad.Id = 1;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

            var Tarea = new Object();
            Tarea.Titulo = $('#Tarea_Titulo').val();
            Tarea.CatFechaVencimiento = CatFechaVencimiento;
            Tarea.FechaVencimiento = $('#Tarea_FechaVencimiento_Date').val();
            Tarea.CatRecordatorio = CatRecordatorio;
            Tarea.FechaRecordatorio = $('#Tarea_FechaRecordatorio_Date').val();
            Tarea.Notas = $('#Tarea_Notas').val();

            if ($("#Tarea_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Tarea_Tarea option:selected").val();
            }


            var NuevaTarea = new Object();
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Agregar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Nueva tarea asignada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Tarea no creada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Tarea no creada ! ", "Intentelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarTarea() {
        var result = false;
        var AsociarTarea = false;
        var FechaVencimiento = false;
        var IdFechaVencimiento = $("#Tarea_FechaVencimiento option:selected").val();
        var FechaRecordatorio = false;
        var IdFechaRecordatorio = $("#Tarea_FechaRecordatorio option:selected").val();

        $('#Tarea_Titulo').css("border", "1px solid #f44336");
        $('#Tarea_FechaVencimiento').css("border", "1px solid #f44336");
        $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #f44336");
        $('#Tarea_FechaRecordatorio').css("border", "1px solid #f44336");
        $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #f44336");
        $('#Tarea_TipoTarea').css("border", "1px solid #f44336");
        $('#Tarea_Contacto').css("border", "1px solid #f44336");
        $('#Tarea_Prioridad').css("border", "1px solid #f44336");
        $('#select2-Tarea_Contacto-container').css("border", "1px solid #f44336");
        $('#Tarea_Tarea').css("border", "1px solid #f44336");

        if ($('#Tarea_Titulo').val().length > 0) {
            $('#Tarea_Titulo').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_FechaVencimiento option:selected").val() > 0) {
            $('#Tarea_FechaVencimiento').css("border", "1px solid #d9dee3");
        }
        if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
            $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #d9dee3");
        }

        if ($("#Tarea_FechaRecordatorio option:selected").val() > 0) {
            $('#Tarea_FechaRecordatorio').css("border", "1px solid #d9dee3");
        }
        if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
            $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_TipoTarea option:selected").val() > 0) {
            $('#Tarea_TipoTarea').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_Contacto option:selected").val() > 0) {
            $('#Tarea_Contacto').css("border", "1px solid #d9dee3");
            $('#select2-Tarea_Contacto-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Tarea_Prioridad option:selected").val() > 0) {
            $('#Tarea_Prioridad').css("border", "1px solid #d9dee3");
        }

        if ($("#Tarea_Tarea option:selected").val() > 0) {
            $('#Tarea_Tarea').css("border", "1px solid #d9dee3");
        }


        if (IdFechaVencimiento == 12) {
            if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
                FechaVencimiento = true;
            }
        } else {
            FechaVencimiento = true;
        }

        if (IdFechaRecordatorio == 7) {
            if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
                FechaRecordatorio = true;
            }
        } else {
            FechaRecordatorio = true;
        }

        if ($("#Tarea_checkbox_Tarea").is(':checked')) {
            if ($("#Tarea_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }



        if ($('#Tarea_Titulo').val().length > 0) {
            if (FechaVencimiento) {
                if (FechaRecordatorio) {
                    if ($("#Tarea_TipoTarea option:selected").val() > 0) {
                        if ($("#Tarea_Prioridad option:selected").val() > 0) {
                            if (AsociarTarea) {
                                result = true;
                            }
                        }
                    }
                }
            }
        }

        return result;
    }
</script>

<script>function ValidaFechaVencimiento() {
        var IdFecha = $("#Tarea_FechaVencimiento option:selected").val();

        if (IdFecha == 12) {
            $("#Tarea_FechaVencimiento_Date").show();
            $("#Tarea_FechaVencimiento").css("display", "none");
        } else {
            $("#Tarea_FechaVencimiento").show();
            $("#Tarea_FechaVencimiento_Date").css("display", "none");
        }

        if (IdFecha > 0) {
            if ($('#Tarea_FechaVencimiento').val().length > 0) {
                $('#Tarea_FechaVencimiento').css("border", "1px solid #d9dee3");
            }
        }

        if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
            $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #d9dee3");
        }

    }

    function ValidaFechaRecordatorio() {
        var IdFecha = $("#Tarea_FechaRecordatorio option:selected").val();

        if (IdFecha == 7) {
            $("#Tarea_FechaRecordatorio_Date").show();
            $("#Tarea_FechaRecordatorio").css("display", "none");
        } else {
            $("#Tarea_FechaRecordatorio").show();
            $("#Tarea_FechaRecordatorio_Date").css("display", "none");
        }

        if (IdFecha > 0) {
            if ($('#Tarea_FechaRecordatorio').val().length > 0) {
                $('#Tarea_FechaRecordatorio').css("border", "1px solid #d9dee3");
            }
        }

        if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
            $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #d9dee3");
        }

    }</script>


<script>
    function ActualizarEstatusContacto() {
        if (ValidarEstatusContacto()) {

            var CatEstatusPersona = new Object();
            CatEstatusPersona.Id = $("#Contacto_EstatusContacto option:selected").val();

            var Persona = new Object();
            Persona.CatEstatusPersona = CatEstatusPersona;

            var Contacto = new Object();
            Contacto.Id = @ViewBag.Contato.Id;
            Contacto.Persona = Persona;
            Contacto.Descripcion = $('#Contacto_Descripcion').val();
            Contacto.Clave = $('#Contacto_Clave').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Contacto_Actualizar_Estatus", "Contacto")",
                async: false,
                data: JSON.stringify(Contacto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Contacto Actulizado!",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Contacto no actulizado ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function ValidarEstatusContacto() {
        var result = false;

        $('#Contacto_EstatusContacto').css("border", "1px solid #f44336");

        $('#Contacto_Clave').css("border", "1px solid #f44336");
        $('#Contacto_Clave').css("border-left", "none");

        if ($("#Contacto_EstatusContacto option:selected").val() > 0) {
            $('#Contacto_EstatusContacto').css("border", "1px solid #d9dee3");
        }

        if ($('#Contacto_Clave').val().length > 0) {
            $('#Contacto_Clave').css("border", "1px solid #d9dee3");
            $('#Contacto_Clave').css("border-left", "none");
        }

        if ($("#Contacto_EstatusContacto option:selected").val() > 0) {
            if ($('#Contacto_Clave').val().length > 0) {
                result = true;
            }
        }

        return result;
    }

    function BtnAbrirActualizarEstatus() {

        var ClaveMovimiento = new Object();
        ClaveMovimiento.Movimiento = "Actualizar";
        ClaveMovimiento.Observaciones = "Actualizar estatus contacto";

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClaveMovimiento_Agregar", "ClaveMovimiento")",
            async: false,
            data: JSON.stringify(ClaveMovimiento),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
     /*           console.log(data);*/
                if (data.Id > 0) {
                    $("#modalEstatusContacto").modal("show");
                    $('#Contacto_Clave_Text').text(data.Clave);
                } else if (data.Id == 0) {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            },
            error: function () {
                AlertDanger("Permiso denegado ! ", "Actualización no valida .");
            }
        });
    }
</script>

<script>
    function BtnActualizarContacto() {
        if (ValidForm()) {
            var CatTipoPersona = new Object();
            CatTipoPersona.Id = $("#Contacto_TipoPersona option:selected").val();

            var CatEstatusPersona = new Object();
            CatEstatusPersona.Id = $("#Contacto_EstatusPersona option:selected").val();

            var CatUnidadNegocio = new Object();
            CatUnidadNegocio.Id = $("#Contacto_UnidadNegocio option:selected").val();

            var Persona = new Object();
            Persona.Nombre = $('#Contacto_Nombre').val();
            Persona.ApellidoPaterno = $('#Contacto_ApellidoPaterno').val();
            Persona.ApellidoMaterno = $('#Contacto_ApellidoMaterno').val();
            Persona.RFC = $('#Contacto_RFC').val();
            Persona.Sexo = $("#Contacto_Sexo option:selected").val();
            Persona.FechaNacimiento = $('#Contacto_FechaNacimiento').val();
            Persona.Descripcion = $('#Contacto_Descripcion1').val();
            Persona.CatTipoPersona = CatTipoPersona;
            Persona.CatEstatusPersona = CatEstatusPersona;

            Persona.CatUnidadNegocio = CatUnidadNegocio;

            var CatFuenteOrigen = new Object();
            CatFuenteOrigen.Id = $("#Contacto_FuenteOrigen option:selected").val();

            var CatCargo = new Object();
            CatCargo.Id = $("#Contacto_Cargo option:selected").val();

            var Contacto = new Object();
            Contacto.Id = @ViewBag.Contato.Id;
            Contacto.Persona = Persona;
            Contacto.CatFuenteOrigen = CatFuenteOrigen;
            Contacto.CatCargo = CatCargo;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Contacto_Actualizar", "Contacto")",
                data: JSON.stringify(Contacto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Contacto actualizado. !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });

                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al actualizar el contacto.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidForm() {
        var result = false;


        $('#Contacto_Nombre').css("border", "1px solid #f44336");
        $('#Contacto_Nombre').css("border-left", "none");

        $('#select2-Contacto_TipoPersona-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_Cargo-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_EstatusPersona-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_UnidadNegocio-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_Propietario-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_FuenteOrigen-container').css("border", "1px solid #f44336");



        if ($('#Contacto_Nombre').val().length > 0) {
            $('#Contacto_Nombre').css("border", "1px solid #d9dee3");
            $('#Contacto_Nombre').css("border-left", "none");
        }


        if ($("#Contacto_TipoPersona option:selected").val() > 0) {
            $('#select2-Contacto_TipoPersona-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_Cargo option:selected").val() > 0) {
            $('#select2-Contacto_Cargo-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_EstatusPersona option:selected").val() > 0) {
            $('#select2-Contacto_EstatusPersona-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_UnidadNegocio option:selected").val() > 0) {
            $('#select2-Contacto_UnidadNegocio-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_Propietario option:selected").val() > 0) {
            $('#select2-Contacto_Propietario-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_FuenteOrigen option:selected").val() > 0) {
            $('#select2-Contacto_FuenteOrigen-container').css("border", "0px solid #d9dee3");
        }

        if ($('#Contacto_Nombre').val().length > 0) {
            if ($("#Contacto_TipoPersona option:selected").val() > 0) {
                if ($("#Contacto_Cargo option:selected").val() > 0) {
                    if ($("#Contacto_EstatusPersona option:selected").val() > 0) {
                        if ($("#Contacto_UnidadNegocio option:selected").val() > 0) {
                            if ($("#Contacto_FuenteOrigen option:selected").val() > 0) {
                                result = true;
                            }
                        }
                    }
                }
            }
        }

        return result;
    }

    function FormularioPrincipal() {

        $("#FormPrincipal").show();
        $("#FormInformacion").css("display", "none");

        //$("#Oportunidad_Contacto").select2();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);

    }

    function FormularioInformacion() {
        $("#FormInformacion").show();
        $("#FormPrincipal").css("display", "none");

        $("#Contacto_TipoPersona").select2();
        $("#Contacto_Cargo").select2();
        $("#Contacto_EstatusPersona").select2();
        $("#Contacto_EstatusPersona").select2();
        $("#Contacto_FuenteOrigen").select2();
        $("#Contacto_UnidadNegocio").select2();

        //$("#Oportunidad_Contacto").select2();

        var posicion = $("#FormInformacion").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>

<script>
    $(document).ready(function () {
        CargaInformacionEmpresa();
        CargaInformacionOportunidad();
        CargaInformacionEmail();
        CargaInformacionTelefonos();
        CargaInformacionDireccion();
        CargaInformacionArchvos();
    });

    function OcultaFormularios() {
        $("#FormPrincipal").show();
        $("#FormInformacion").css("display", "none");
        $("#FormEmpresa").css("display", "none");
        $("#FormEmail").css("display", "none");
        $("#FormTelefono").css("display", "none");
        $("#FormDireccion").css("display", "none");
    }

    function CargaInformacionDireccion() {
        $("#FormDireccion").css("display", "none");
        $("#FormPrincipal").show();
        $('#Direccion_Nombre').val("");
        $('#Direccion_CP').val("");
        $('#Direccion_Calle').val("");
        $('#Direccion_NumeroExterior').val("");
        $('#Direccion_NumeroInterior').val("");

        $('#Direccion_Estado option[value="0"]').attr("selected", true);
        $('#Direccion_Poblacion option[value="0"]').attr("selected", true);
        $('#Direccion_Colonia option[value="0"]').attr("selected", true);

        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("PersonaDireccion_Seleccionar_IdPersona", "PersonaDireccion")",
            async: false,
            data: JSON.stringify(Persona),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Direcciones').text("(" + data.length + ")");
                //console.log(data);

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Dirección </th>" +
                                                "<th> Acciones  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Nombre + "</strong></td>" +
                                                "<td>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary'>" + /*onclick='EditarDireccion(" + data[b].Id + ") '*/
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarDireccion(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TablePersonaDirecciones").html(Table);
            },
            error: function () {

            }
        });

    }

    function CargaInformacionTelefonos() {
        $("#FormTelefono").css("display", "none");
        $("#FormPrincipal").show();
        $('#Telefono_Numero').val("");
        $('#Telefono_TipoTelefono option[value="0"]').attr("selected", true);


        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("PersonaTelefono_Seleccionar_IdPersona", "PersonaTelefono")",
            async: false,
            data: JSON.stringify(Persona),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Telefonos').text("(" + data.length + ")");
                console.log(data);

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Teléfonos </th>" +
                                                "<th> Acciones  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Telefono.telefono + "</strong></td>" +
                                                "<td>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EditarTelefono(" + data[b].Id + " , " + data[b].Telefono.telefono + ")' >" +
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarTelefono(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TablePersonaTelefonos").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionEmail() {
        $("#FormEmail").css("display", "none");
        $("#FormPrincipal").show();

        $('#Contacto_Email').val('');

        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("PersonaEmail_Seleccionar_IdPersona", "PersonaEmail")",
            async: false,
            data: JSON.stringify(Persona),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_PersonaEmail').text("(" + data.length + ")");
             /*   console.log(data);*/

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Oportunidades </th>" +
                                                "<th> Acciones  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Email.email + "</strong></td>" +
                                                "<td>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary'>" +
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary'>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                                        

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TablePersonaEmail").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionOportunidad() {
        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadPersona_Seleccionar_IdPersona", "OportunidadPersona")",
            async: false,
            data: JSON.stringify(Persona),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Oportunidades').text("(" + data.length + ")");
                console.log(data);

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Oportunidades </th>" +
                                                "<th> Acciones  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Oportunidad.Nombre + "</strong></td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='MostrarOportunidad(" + data[b].Oportunidad.Id +")'>" +
                                                        "<span class='tf-icons bx bx-trophy'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarOportunidad(" + data[b].Id + "," + data[b].Oportunidad.Id +")'>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableOportunidades").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionEmpresa() {
        $("#FormEmpresa").css("display", "none");
        $("#FormPrincipal").show();
        $('#Empresa_Empresa option[value="0"]').attr("selected", true);
        $('#Empresa_Departamento option[value="0"]').attr("selected", true);
        $('#Empresa_Puesto option[value="0"]').attr("selected", true);

        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        var Empleado = new Object();
        Empleado.Persona = Persona;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleado_Seleccionar_IdPersona", "Empleado")",
            async: false,
            data: JSON.stringify(Empleado),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Empresas').text("(" + data.length + ")");
               /* console.log(data);*/

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Empresa </th>" +
                                                "<th> Editar </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Puesto.Departamento.Empresa.Nombre + "</strong></td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='FromEditarEmpresa(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarEmpresa(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='MostrarEmpresa(" + data[b].Puesto.Departamento.Empresa.Id + ")'>" +
                                                        "<span class='tf-icons bx bx-building'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableEmpresas").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionArchvos() {
        var CatEntidad = new Object();
        CatEntidad.Id = 1;

        var ArchivoEntidad = new Object();
        ArchivoEntidad.CatEntidad = CatEntidad;
        ArchivoEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Archivo_Seleccionar_Entidad_Valor", "Archivo")",
            async: false,
            data: JSON.stringify(ArchivoEntidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Archivos').text("(" + data.length + ")");

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Nombre archivo </th>" +
                                                "<th>  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].NombreOrigianl +"</strong></td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='DescargarArchivo(" + data[b].Id + ") '>" +
                                                        "<span class='tf-icons bx bx-cloud-download'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarArchivo(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableArchivosAdjuntos").html(Table);

            },
            error: function () {

            }
        });
    }

    function BtnRegistrarEmpresa() {
        if (ValidaEmpresa()) {

            var Persona = new Object();
            Persona.Id = @ViewBag.Contato.Persona.Id;

            var Puesto = new Object();
            Puesto.Id = $("#Empresa_Puesto option:selected").val();

            var Empleado = new Object();
            Empleado.Persona = Persona;
            Empleado.Puesto = Puesto;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Empleado_Agregar", "Empleado")",
                data: JSON.stringify(Empleado),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Nueva empresa relacionada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar la empresa");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La empresa que intentas relacionar ya se encuentra registrada.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidaEmpresa() {
        var result = false;
        $('#select2-Empresa_Empresa-container').css("border", "1px solid #f44336");
        $('#select2-Empresa_Departamento-container').css("border", "1px solid #f44336");
        $('#select2-Empresa_Puesto-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            $('#select2-Empresa_Empresa-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Empresa_Departamento option:selected").val() > 0) {
            $('#select2-Empresa_Departamento-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Empresa_Puesto option:selected").val() > 0) {
            $('#select2-Empresa_Puesto-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            if ($("#Empresa_Departamento option:selected").val() > 0) {
                if ($("#Empresa_Puesto option:selected").val() > 0) {
                    result = true;
                }
            }
        }
        return result;
    }

    function MostrarAgregarEmpresa() {
        OcultaFormularios();

        $("#DivActualizarEmail").css("display", "none");
        $("#DivRegistrarEmail").show();

        $("#Empresa_Empresa").val(0);
        $('#Empresa_Empresa').val(0).trigger('change.select2');

        $("#Empresa_Departamento").val(0);
        $('#Empresa_Departamento').val(0).trigger('change.select2');

        $("#Empresa_Puesto").val(0);
        $('#Empresa_Puesto').val(0).trigger('change.select2');

        $("#FormPrincipal").css("display", "none");
        $("#FormEmpresa").show();
        $("#Empresa_Empresa").select2();
        $("#Empresa_Departamento").select2();
        $("#Empresa_Puesto").select2();

        var posicion = $("#FormEmpresa").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);

    }

    function OcultarAgregarEmpresa() {
        $("#FormEmpresa").css("display", "none");
        $("#FormPrincipal").show();

        $('#Empresa_Puesto option[value="0"]').attr("selected", true);
        $('#Empresa_Departamento option[value="0"]').attr("selected", true);
        $('#Empresa_Empresa option[value="0"]').attr("selected", true);

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>

<script>
    function FromEditarEmpresa(IdEmpleado) {
        MostrarAgregarEmpresa();

        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        var Empleado = new Object();
        Empleado.Id = IdEmpleado;
        Empleado.Persona = Persona;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleado_Seleccionar_Id", "Empleado")",
            async: false,
            data: JSON.stringify(Empleado),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                $("#Empresa_Empresa").val(data.Puesto.Departamento.Empresa.Id);
                $('#Empresa_Empresa').val(data.Puesto.Departamento.Empresa.Id).trigger('change.select2');

                $("#Empresa_Departamento").val(data.Puesto.Departamento.Id);
                $('#Empresa_Departamento').val(data.Puesto.Departamento.Id).trigger('change.select2');

                $("#Empresa_Puesto").val(data.Puesto.Id);
                $('#Empresa_Puesto').val(data.Puesto.Id).trigger('change.select2');

                $("#DivRegistrarEmpresa").css("display", "none");
                $("#DivActualizarEmpresa").show();

                var btn = "<button type='button' class='btn btn-outline-primary' style='width: 100%;' onclick='EditarEmpresa(" + IdEmpleado + ")'>" +
                                "<span class='tf-icons bx bx-save'></span>&nbsp; Actualizar" +
                            "</button>";
                $("#DivActualizarEmpresa").html(btn);
            },
            error: function () {

            }
        });
    }

    function EditarEmpresa(IdEmpleado) {
        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        var Puesto = new Object();
        Puesto.Id = $("#Empresa_Puesto option:selected").val();

        var Empleado = new Object();
        Empleado.Id = IdEmpleado;
        Empleado.Persona = Persona;
        Empleado.Puesto = Puesto;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleado_Actualizar", "Empleado")",
            data: JSON.stringify(Empleado),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                if (respuesta.Id > 0) {

                    swal({
                        title: "Nueva empresa relacionada !",
                        icon: "success",
                        buttons: {
                            agregar: {
                                text: "Aceptar", className: 'sweet-continuar'
                            },
                        },
                    })
                    .then((value) => {
                        switch (value) {
                            case "agregar":
                                location.reload();
                            break;
                        }
                    });
                } else if (respuesta.Id == 0) {
                    AlertWarning("Problemas al registrar ", "Problemas al relacionar la empresa");
                } else if (respuesta.Id == -1) {

                }
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function EliminarEmpresa(IdEmpleado) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar empresa !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {

             if (willDelete) {
                var Persona = new Object();
                Persona.Id = @ViewBag.Contato.Persona.Id;

                var Empleado = new Object();
                Empleado.Id = IdEmpleado;
                Empleado.Persona = Persona;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Empleado_Eliminar", "Empleado")",
                    async: false,
                    data: JSON.stringify(Empleado),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }
         });
    }

    function MostrarEmpresa(num) {

        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("Empresa", "Empresa")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });

    }
</script>

<script>
    function SubirArchivo() {
        $("#fileInputArchivo").click();
    }

    $('#fileInputArchivo').change(function () {
        var fileInput = document.getElementById('fileInputArchivo');

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'png' || ext == 'jpg' || ext == 'jpeg' || ext == 'pdf' || ext == 'txt' || ext == 'eml' || ext == 'xls' || ext == 'ppt' || ext == 'pptx' || ext == 'docx' || ext == 'doc' || ext == 'xlsx' || ext == 'zip') {
                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#fileProgresArchivo").show();

                    $.ajax({
                        url: '/api/FileAPI/UploadFileArchivo',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                            CargaDocumentoOportunidad(documento);
                        },
                        xhr: function () {
                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgresArchivo").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {
                            AlertWarning("Problema ocurrido", "Problemas para leer el archivo");
                            CerrarProgresArchivo();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarProgresArchivo, 1000);
                    });

                } else {
                    AlertPrimary("Formulario incompleto ", "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG");
                }
            } else {
                AlertPrimary("Formulario incompleto ", "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .png, .jpg, jpeg ");
            }
        } else {
            AlertPrimary("Formulario incompleto ","Selecciona un archivo.");
        }
    });

    function CerrarProgresArchivo() {
        $("#fileProgresArchivo").css("display", "none");
    }

    function CargaDocumentoOportunidad(documento) {

        var CatEntidad = new Object();
        CatEntidad.Id = 1;

        var Archivo = new Object();
        Archivo.NombreOrigianl = documento.NombreOrigianl;
        Archivo.NombreNuevo = documento.NombreNuevo;
        Archivo.Extencion = documento.Extencion;

        var ArchivoEntidad = new Object();
        ArchivoEntidad.CatEntidad = CatEntidad;
        ArchivoEntidad.IdValorEntidad = @ViewBag.Contato.Persona.Id;
        ArchivoEntidad.Archivo = Archivo;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Archivo_Agregar", "Archivo")",
            async: false,
            data: JSON.stringify(ArchivoEntidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Id > 0) {
                    swal({
                        title: "Nuevo documento registrado !",
                        icon: "success",
                        buttons: {
                            agregar: {
                                text: "Aceptar", className: 'sweet-continuar'
                            },
                        },
                    }).then((value) => {
                        switch (value) {
                            case "agregar":
                                CargaInformacionArchvos();
                            break;
                        }
                    });

                } else  {
                    AlertDanger("Archivo no registrado ! ", "Verifica tu información");
                }
            },
            error: function () {
                AlertDanger("Archivo no registardo ! ", "Intentelo mas tarde.");
            }
        });
    }

    function EliminarArchivo(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar archivo !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {

                var Archivo = new Object();
                Archivo.Id = Id;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Archivo_Eliminar", "Archivo")",
                    async: false,
                    data: JSON.stringify(Archivo),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        CargaInformacionArchvos();
                    },
                    error: function () {

                    }
                });
            }
        });
    }

    function DescargarArchivo(Id) {
        var Archivo = new Object();
        Archivo.Id = Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Archivo_Seleccionar_Id", "Archivo")",
            async: false,
            data: JSON.stringify(Archivo),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                // Verifica que la ruta del archivo esté disponible
                if (data.NombreNuevo) {
                    var url = "http://" + data.NombreNuevo;


                    var a = document.createElement('a');
                    a.href = url;
                    a.download = data.NombreOrigianl || 'archivo_descargado';


                    document.body.appendChild(a);
                    a.click();


                    document.body.removeChild(a);
                }
            },
            error: function () {
                console.error("Error al intentar descargar el archivo.");
            }
        });
    }
</script>

<script>
    function BtnRegistrarDireccion() {
        if (ValidarDireccion()) {

            var Persona = new Object();
            Persona.Id = @ViewBag.Contato.Persona.Id;

            var CatColonias = new Object();
            CatColonias.Id = $("#Direccion_Colonia option:selected").val();

            var PersonaDireccion = new Object();
            PersonaDireccion.Nombre = $('#Direccion_Nombre').val();
            PersonaDireccion.NumExterior = $('#Direccion_NumeroExterior').val();
            PersonaDireccion.NumInterior = $('#Direccion_NumeroInterior').val();
            PersonaDireccion.Calle = $('#Direccion_Calle').val();
            PersonaDireccion.CatColonias = CatColonias;
            PersonaDireccion.Persona = Persona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("PersonaDireccion_Agregar", "PersonaDireccion")",
                data: JSON.stringify(PersonaDireccion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Nueva dirección agregada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    CargaInformacionDireccion();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al registrar la dirección");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La dirección que intentas agregar ya se encuentra registrada.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidarDireccion() {
        var result = false;

        $('#Direccion_CP').css("border", "1px solid #f44336");
        $('#Direccion_CP').css("border-left", "none");
        $('#Direccion_Nombre').css("border", "1px solid #f44336");
        $('#Direccion_Nombre').css("border-left", "none");


        if ($('#Direccion_CP').val().length > 0) {
            $('#Direccion_CP').css("border", "1px solid #d9dee3");
            $('#Direccion_CP').css("border-left", "none");
        }
        if ($('#Direccion_Nombre').val().length > 0) {
            $('#Direccion_Nombre').css("border", "1px solid #d9dee3");
            $('#Direccion_Nombre').css("border-left", "none");
        }

        $('#select2-Direccion_Estado-container').css("border", "1px solid #f44336");
        $('#select2-Direccion_Poblacion-container').css("border", "1px solid #f44336");
        $('#select2-Direccion_Colonia-container').css("border", "1px solid #f44336");

        if ($("#Direccion_Estado option:selected").val() > 0) {
            $('#select2-Direccion_Estado-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Direccion_Poblacion option:selected").val() > 0) {
            $('#select2-Direccion_Poblacion-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Direccion_Colonia option:selected").val() > 0) {
            $('#select2-Direccion_Colonia-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Direccion_Estado option:selected").val() > 0) {
            if ($("#Direccion_Poblacion option:selected").val() > 0) {
                if ($("#Direccion_Colonia option:selected").val() > 0) {
                    if ($('#Direccion_Nombre').val().length > 0) {
                        if ($('#Direccion_CP').val().length > 0) {
                            result = true;
                        }
                    }
                }
            }
        }
        return result;
    }

    function CPBuscar(valor) {
        ValidaInput('Direccion_CP');
        $('#Direccion_CP').css("border", "1px solid #ff0049");

        if ($('#Direccion_CP').val().length > 0) {
            $('#Direccion_CP').css("border", "1px solid #cccccc");
        }

        if (valor.length > 0) {
            var obj = {};
            obj['CP'] = valor;

            var jsonObject = {
                "CatCP": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatCP_Busqueda", "Direccion")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoBusqueda,
                error: function (result) {
                    AlertDanger("Problemas en la busqueda", "Código postal no encontrado .");
                }
            });
        } else {
            AlertDanger("Problemas en la busqueda", "Coloca tu código postal.");
        }

    }

    function resultadoBusqueda(data) {

        if (data.length > 0) {

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatEstados_Seleccionar", "Direccion")",
                async: false,
                //data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (dataestados) {

                    $("#Direccion_Estado").empty();
                    if (dataestados.length > 0) {

                        var option = $(document.createElement('option'));
                        option.text("SELECCIONAR");
                        option.val(0);

                        $("#Direccion_Estado").append(option);

                        $(dataestados).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Estado.toUpperCase());
                            option.val(this.Id);

                            $("#Direccion_Estado").append(option);
                        });

                        $('#Direccion_Estado option[value="' + data[0].CatEstados.Id + '"]').attr("selected", true);
                        $("#Direccion_Estado").select2();

                        var IdEstado = $("#Direccion_Estado option:selected").val();

                        if (IdEstado > 0) {
                            var obj = {};
                            obj['Id'] = IdEstado;

                            var jsonObject = {
                                "CatEstados": obj
                            };

                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("CatPoblaciones_Seleccionar_IdEstado", "Direccion")",
                                data: JSON.stringify(jsonObject),
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (result) {

                                    $("#Direccion_Poblacion").empty();

                                    if (result.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Direccion_Poblacion").append(option);

                                        $(result).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.Poblacion.toUpperCase());
                                            option.val(this.Id);

                                            $("#Direccion_Poblacion").append(option);
                                        });
                                    }
                                    $('#Direccion_Poblacion option[value="' + data[0].CatPoblaciones.Id + '"]').attr("selected", true);
                                    $("#Direccion_Poblacion").select2();

                                    $("#Direccion_Colonia").empty();

                                    if (data.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Direccion_Colonia").append(option);

                                        $(data).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.CatColonias.Colonia.toUpperCase());
                                            option.val(this.CatColonias.Id);

                                            $("#Direccion_Colonia").append(option);
                                        });
                                    }

                                    $('#Direccion_Colonia option[value="' + data[0].CatColonias.Id + '"]').attr("selected", true);
                                    $("#Direccion_Colonia").select2();


                                    $('#Direccion_CP').css("border", "1px solid #e6e6e6");
                                    $('#Direccion_Colonia').css("border", "1px solid #e6e6e6");
                                    $('#Direccion_Poblacion').css("border", "1px solid #e6e6e6");
                                    $('#Direccion_Estado').css("border", "1px solid #e6e6e6");

                                }
                            });
                        }

                    }
                },
                error: function () {
                    AlertDanger("Problemas en la busqueda", "Código postal no encontrado .");
                }
            });

        } else {

            $("#Direccion_Poblacion").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Direccion_Poblacion").append(option);

            $("#Direccion_Colonia").empty();
            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Direccion_Colonia").append(option);

            AlertDanger("Problemas en la busqueda", "Código postal no encontrado .");
        }

    }

    function callCP(valor)
    {
        if (valor > 0) {

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "CatColonias": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatCP_Seleccionar_IdColonia", "Direccion")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoCP,
                error: function () {

                }
            });
        }
    }

    function resultadoCP(data) {
        $("#Direccion_CP").val(data[0].CP);
        ValidaInput('Direccion_Colonia');
        ValidaInput('Direccion_CP');
    }

    function callColonias(valor) {
        if (valor > 0) {
            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "CatPoblaciones": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatColonias_Seleccionar_IdPoblacion", "Direccion")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoColonias,
                error: function () {

                }
            });
        }
    }

    function resultadoColonias(data) {
        ValidaSelect("Direccion_Poblacion");
        $("#Direccion_Colonia").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Direccion_Colonia").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Colonia.toUpperCase());
                option.val(this.Id);

                $("#Direccion_Colonia").append(option);
            });

            $("#Direccion_Colonia").select2();
        }
    }

    function callEstados(valor) {
        if (valor > 0) {
            $("#Direccion_Poblacion").empty();
            $("#Direccion_Colonia").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            var option2 = $(document.createElement('option'));
            option2.text("SELECCIONAR");
            option2.val(0);

            $("#Direccion_Poblacion").append(option);
            $("#Direccion_Colonia").append(option);

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "CatEstados": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatPoblaciones_Seleccionar_IdEstado", "Direccion")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoPoblaciones,
                error: function () {

                }
            });

        }
    }

    function resultadoPoblaciones(data) {
        ValidaSelect("Direccion_Estado");
        $("#Direccion_Poblacion").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Direccion_Poblacion").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Poblacion.toUpperCase());
                option.val(this.Id);

                $("#Direccion_Poblacion").append(option);
            });

            $("#Direccion_Poblacion").select2();
        }
    }

    function MostrarAgregarDireccion() {
        OcultaFormularios();
        $("#FormPrincipal").css("display", "none");
        $("#FormDireccion").show();
        $("#Direccion_Estado").select2();

        var posicion = $("#FormDireccion").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarDireccion() {
        $("#FormDireccion").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function EliminarDireccion(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar direccion !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                 var Persona = new Object();
                Persona.Id = @ViewBag.Contato.Persona.Id;

                var CatColonias = new Object();
                CatColonias.Id = $("#Direccion_Colonia option:selected").val();

                 var PersonaDireccion = new Object();
                 PersonaDireccion.Id = Id
                PersonaDireccion.Persona = Persona;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("PersonaDireccion_Eliminar", "PersonaDireccion")",
                    async: false,
                    data: JSON.stringify(PersonaDireccion),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }

         });
    }
</script>

<script>
    function BtnRegistrarTelefono() {
        if (ValidaTelefono()) {

            var Persona = new Object();
            Persona.Id = @ViewBag.Contato.Persona.Id;

            var CatTipoTelefono = new Object();
            CatTipoTelefono.Id = $("#Telefono_TipoTelefono option:selected").val();

            var Telefono = new Object();
            Telefono.CatTipoTelefono = CatTipoTelefono;
            Telefono.telefono = $('#Telefono_Numero').val();

            var PersonaTelefono = new Object();
            PersonaTelefono.Persona = Persona;
            PersonaTelefono.Telefono = Telefono;

            $.ajax({
                type: "POST",
                url: "@Url.Action("PersonaTelefono_Agregar", "PersonaTelefono")",
                async: false,
                data: JSON.stringify(PersonaTelefono),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Nuevo teléfono relacionado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    CargaInformacionTelefonos();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar el teléfono");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El teléfono que intentas relacionar ya se encuentra registrado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function ValidaTelefono() {
        var result = false;
        $('#Telefono_Numero').css("border", "1px solid #f44336");
        $('#Telefono_Numero').css("border-left", "none");

        $('#select2-Telefono_TipoTelefono-container').css("border", "1px solid #f44336");

        if ($("#Telefono_TipoTelefono option:selected").val() > 0) {
            $('#select2-Telefono_TipoTelefono-container').css("border", "0px solid #d9dee3");
        }

        if ($('#Telefono_Numero').val().length > 0) {
            $('#Telefono_Numero').css("border", "1px solid #d9dee3");
            $('#Telefono_Numero').css("border-left", "none");
        }

        if ($('#Telefono_Numero').val().length > 0) {
            if ($("#Telefono_TipoTelefono option:selected").val() > 0) {
                result = true;
            }
        }
        return result;
    }

    function CargaTipoTelefono(Id) {

        $.ajax({
            type: "POST",
            url: "@Url.Action("CatTipoTelefono_Seleccionar", "Telefono")",
            async: false,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Telefono_TipoTelefono").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Telefono_TipoTelefono").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Telefono_TipoTelefono").append(option);
                    });
                }

                $('#Telefono_TipoTelefono option[value="' + Id + '"]').attr("selected", true);
                $('#Tipo_Telefono').val('');
                $("#BtnTipoTelefonoCerrar").trigger("click");
                AlertSuccess('Registro exitoso !', 'Nuevo tipo de teléfono registrado');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function BtnRegistrarTipoTelefono() {
        if (ValidaTipoTelefono()) {

            var obj = {};
            obj['Nombre'] = $('#Tipo_Telefono').val();

            var jsonObject = {
                "CatTipoTelefono": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CatTipoTelefono_Agregar", "Telefono")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El tipo de teléfono ya se encuentra registrado.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Puesto no registrado.");
                    } else if (result.Id > 0) {
                        CargaTipoTelefono(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Puesto no registrado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidaTipoTelefono() {
        var result = false;
        $('#Tipo_Telefono').css("border", "1px solid #f44336");
        $('#Tipo_Telefono').css("border-left", "none");


        if ($('#Tipo_Telefono').val().length > 0) {
            $('#Tipo_Telefono').css("border", "1px solid #d9dee3");
            $('#Tipo_Telefono').css("border-left", "none");
        }

        if ($('#Tipo_Telefono').val().length > 0) {
            result = true;
        }
        return result;
    }

    function MostrarAgregarTelefono() {
        OcultaFormularios();
        $("#FormPrincipal").css("display", "none");
        $("#FormTelefono").show();
        $("#Telefono_TipoTelefono").select2();

        var posicion = $("#FormTelefono").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarTelefono() {
        $("#FormTelefono").css("display", "none");
        $("#FormPrincipal").show();
        $('#Telefono_TipoTelefono option[value="0"]').attr("selected", true);

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function EliminarTelefono(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar Teléfono  !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                 var Persona = new Object();
                Persona.Id = @ViewBag.Contato.Persona.Id;

                var PersonaTelefono = new Object();
                 PersonaTelefono.Persona = Persona;
                 PersonaTelefono.Id = Id;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("PersonaTelefono_Eliminar", "PersonaTelefono")",
                    async: false,
                    data: JSON.stringify(PersonaTelefono),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }

         });
    }


    function EditarTelefono(Id, telefono) {
        $('#modalActualizarTelefono').modal('show');
        $('#TelefonoNuevo').val(telefono);

        $('#BtnNuevoTel').off('click').on('click', function () {
            GuardarNuevoTelefono(Id);
        });
    }

    function GuardarNuevoTelefono(Id) {
        var Persona = new Object();
        Persona.Id = @ViewBag.Contato.Persona.Id;

        var Telefono = new Object();
        Telefono.telefono = $('#TelefonoNuevo').val();

        if (Telefono.telefono.trim() === "") {
            $('#TelefonoNuevo').css('border', '2px solid red');  // Cambia el borde del input a rojo
            $('#telefonoError').text('Debe ingresar un número de teléfono para actualizar.');  // Muestra el mensaje de error
            return;
        } else {
            $('#TelefonoNuevo').css('border', '');  // Restablece el borde del input si hay un número
            $('#telefonoError').text('');  // Limpia el mensaje de error
        }

        var PersonaTelefono = new Object();
        PersonaTelefono.Persona = Persona;
        PersonaTelefono.Id = Id;
        PersonaTelefono.Telefono = Telefono;

        $.ajax({
            type: "POST",
            url: "@Url.Action("PersonaTelefono_Actualizar", "PersonaTelefono")",
            async: false,
            data: JSON.stringify(PersonaTelefono),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Id > 0) {
                    swal({
                        title: "Número de teléfono actualizado!",
                        icon: "success",
                        buttons: {
                            aceptar: {
                                text: "Aceptar",
                                className: 'sweet-continuar'
                            },
                        },
                    }).then((value) => {
                        switch (value) {
                            case "aceptar":
                                location.reload();
                                break;
                        }
                    });
                } else {
                    alert("Error al actualizar el número de teléfono");
                }
            },
            error: function () {
                alert("Error al actualizar el número de teléfono");
            }
        });
    }
</script>

<script>

    function BtnRegistrarEmail() {
        if (ValidaEmail()) {

            const emailInput = $('#Contacto_Email').val().trim();
            const regex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;

          

            if (!regex.test(emailInput)) {
                AlertWarning("Por favor, introduce un correo electrónico válido para registrarlo.");
                emailInput.focus();
                return;
            }


            var Persona = new Object();
            Persona.Id = @ViewBag.Contato.Persona.Id;

            var Email = new Object();
            /*Email.email = $('#Contacto_Email').val();*/
            Email.email = emailInput;

            var PersonaEmail = new Object();
            PersonaEmail.Persona = Persona;
            PersonaEmail.Email = Email;

            $.ajax({
                type: "POST",
                url: "@Url.Action("PersonaEmail_Agregar", "PersonaEmail")",
                data: JSON.stringify(PersonaEmail),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {
                        swal({
                            title: "Nuevo email agregado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    CargaInformacionEmail();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar email");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El email que intetas agregar ya se encuentra registrado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidaEmail() {
        var result = false;
        $('#Contacto_Email').css("border", "1px solid #f44336");
        $('#Contacto_Email').css("border-left", "none");

        if ($('#Contacto_Email').val().trim().length > 0) {
            $('#Contacto_Email').css("border", "1px solid #d9dee3");
            $('#Contacto_Email').css("border-left", "none");
        }

        if ($('#Contacto_Email').val().length > 0) {
            result = true;
        }

        return result;
    }

    function BusquedaContactoEmail(e) {

        if (e.value.length > 0) {
            var obj = {};
            obj['email'] = e.value.toUpperCase();

            var jsonObject = {
                "Email": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Contacto_Buscar_Email", "Contacto")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.length > 0) {

                        var Table =
                        "<table class='table table-sm table-striped table-hover'>" +
                            "<thead>" +
                                "<tr>" +
                                    "<th>Email</th>" +
                                    "<th>Contacto</th>" +
                                    "<th>Acciones </th>" +
                                "</tr>" +
                            "</thead>" +
                            "<tbody class='table-border-bottom-0'>";
                        if (data[0].Busqueda > 0) {
                            for (var b = 0; b < data.length; b++) {
                            Table +=
                                "<tr>" +
                                    "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Email.email + "</strong></td>" +

                                    "<td>" + data[b].Persona.Nombre + " " + data[b].Persona.ApellidoPaterno + " " + data[b].Persona.ApellidoMaterno + "</td>" +
                                    "<td>" +
                                        "<div class='dropdown'>" +
                                            "<button type='button' class='btn p-0 dropdown-toggle hide-arrow' data-bs-toggle='dropdown'>" +
                                                "<i class='bx bx-dots-vertical-rounded'></i>" +
                                            "</button>" +
                                            "<div class='dropdown-menu'>" +
                                                "<a class='dropdown-item' href='javascript:void(0);'><i class='bx bx-edit-alt me-1'></i> Mostrar</a>" +
                                            "</div>" +
                                        "</div>" +
                                    "</td>" +
                                "</tr>";
                            }
                        }


                       Table +=
                            "</tbody>" +
                        "</table>";

                        $('#TablaBusquedaEmail').html(Table);

                        if (data[0].Busqueda == 1) {
                            $("#BtnAbrirBusqueda").trigger("click");
                        } else if (data[0].Busqueda == 0) {
                            $("#BtnBusquedaEmailCerrar").trigger("click");
                        }
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });
        }
        e.focus();
    }


    function MostrarAgregarEmail() {
        OcultaFormularios(); 


        $("#FormPrincipal").css("display", "none");
        $("#FormEmail").show();

        var posicion = $("#FormEmail").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarEmail() {
        $("#FormEmail").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>

<script>
    function CargaPuesto() {
        $('#select2-Empresa_Departamento-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Departamento option:selected").val() > 0) {
            $('#select2-Empresa_Departamento-container').css("border", "0px solid #d9dee3");
        }

        var obj = {};
        obj['Id'] = $("#Empresa_Departamento option:selected").val();

        var jsonObject = {
            "Departamento": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Puesto_Seleccionar_IdDepartamento", "Puesto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Empresa_Puesto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Empresa_Puesto").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Empresa_Puesto").append(option);
                    });
                }
            },
            error: function () {
                $("#Empresa_Puesto").empty();

                var option = $(document.createElement('option'));
                option.text("SELECCIONAR");
                option.val(0);

                $("#Empresa_Puesto").append(option);
            }
        });
    }

    function AbrirPuesto() {
        $('#select2-Empresa_Departamento-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Departamento option:selected").val() > 0) {
            $('#select2-Empresa_Departamento-container').css("border", "0px solid #d9dee3");
        }

        var Empresa = $("#Empresa_Departamento option:selected").val();

        if (Empresa > 0) {
            $("#IdBtnModalPuestoAbrir").trigger("click");
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona un departamento para crear un puesto nuevo.");
        }
    }

    function BtnRegistrarPuesto() {
        if (ValidaPuesto()) {

            var Departamento = new Object();
            Departamento.Id = $("#Empresa_Departamento option:selected").val();

            var Puesto = new Object();
            Puesto.Nombre = $('#Puesto_Nombre').val();
            Puesto.Departamento = Departamento;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Puesto_Agregar", "Puesto")",
                async: false,
                data: JSON.stringify(Puesto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El puesto ya se encuentra registrado.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Puesto no registrado.");
                    } else if (result.Id > 0) {
                        CargaPuestos(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Puesto no registrado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function CargaPuestos(Id) {

        var obj = {};
        obj['Id'] = $("#Empresa_Departamento option:selected").val();

        var jsonObject = {
            "Departamento": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Puesto_Seleccionar_IdDepartamento", "Puesto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Empresa_Puesto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Empresa_Puesto").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Empresa_Puesto").append(option);
                    });
                }

                $('#Empresa_Puesto option[value="' + Id + '"]').attr("selected", true);
                $('#Puesto_Nombre').val('');
                $("#BtnPuestoCerrar").trigger("click");
                AlertSuccess('Registro exitoso !', 'Nuevo puesto registrado');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaPuesto() {
        var result = false;
        $('#Puesto_Nombre').css("border", "1px solid #f44336");
        $('#Puesto_Nombre').css("border-left", "none");


        if ($('#Puesto_Nombre').val().length > 0) {
            $('#Puesto_Nombre').css("border", "1px solid #d9dee3");
            $('#Puesto_Nombre').css("border-left", "none");
        }

        if ($('#Puesto_Nombre').val().length > 0) {
            result = true;
        }
        return result;
    }
</script>

<script>
    function CargaDepartamento() {

        $('#select2-Empresa_Empresa-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            $('#select2-Empresa_Empresa-container').css("border", "0px solid #d9dee3");
        }

        var obj = {};
        obj['Id'] = $("#Empresa_Empresa option:selected").val();

        var jsonObject = {
            "Empresa": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Departamento_Seleccionar_IdEmpresa", "Departamento")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Empresa_Departamento").empty();
                    $("#Empresa_Puesto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);


                    $("#Empresa_Departamento").append(option);
                    $("#Empresa_Puesto").append(option2);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Empresa_Departamento").append(option);
                    });
                }
            },
            error: function () {
                $("#Empresa_Departamento").empty();
                $("#Empresa_Puesto").empty();

                var option = $(document.createElement('option'));
                option.text("SELECCIONAR");
                option.val(0);

                var option2 = $(document.createElement('option'));
                option2.text("SELECCIONAR");
                option2.val(0);


                $("#Empresa_Departamento").append(option);
                $("#Empresa_Puesto").append(option2);
            }
        });
    }

    function AbrirDepartamento() {
        $('#select2-Empresa_Empresa-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            $('#select2-Empresa_Empresa-container').css("border", "0px solid #d9dee3");
        }

        var Empresa = $("#Empresa_Empresa option:selected").val();

        if (Empresa > 0) {
            $("#IdBtnModalDepartamentoAbrir").trigger("click");
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una empresa para crear un departamento nuevo.");
        }
    }

    function BtnRegistrarDepartamento() {
        if (ValidaTipo()) {

            var Empresa = new Object();
            Empresa.Id = $("#Empresa_Empresa option:selected").val();

            var Departamento = new Object();
            Departamento.Nombre = $('#Departamento_Nombre').val();
            Departamento.Empresa = Empresa;

          /*  console.log(Departamento);*/

            $.ajax({
                type: "POST",
                url: "@Url.Action("Departamento_Agregar", "Departamento")",
                async: false,
                data: JSON.stringify(Departamento),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El departamento ya se encuentra registrado.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Departamento no registrado.");
                    } else if (result.Id > 0) {
                        CargaDepartamentos(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Departamento no registrado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function CargaDepartamentos(Id) {
        var obj = {};
        obj['Id'] = $("#Empresa_Empresa option:selected").val();

        var jsonObject = {
            "Empresa": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Departamento_Seleccionar_IdEmpresa", "Departamento")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Empresa_Departamento").empty();
                    $("#Empresa_Puesto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);


                    $("#Empresa_Departamento").append(option);
                    $("#Empresa_Puesto").append(option2);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Empresa_Departamento").append(option);
                    });


                }

                $('#Empresa_Departamento option[value="' + Id + '"]').attr("selected", true);
                $('#Departamento_Nombre').val('');
                $("#BtnDepartamentoCerrar").trigger("click");
                AlertSuccess('Registro exitoso !', 'Nuevo departamento registrado');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaTipo() {
        var result = false;

        $('#Departamento_Nombre').css("border", "1px solid #f44336");
        $('#Departamento_Nombre').css("border-left", "none");

        if ($('#Departamento_Nombre').val().length > 0) {
            $('#Departamento_Nombre').css("border", "1px solid #d9dee3");
            $('#Departamento_Nombre').css("border-left", "none");
        }

        if ($('#Departamento_Nombre').val().length > 0) {
            result = true;
        }

        return result;
    }
</script>

<script>
    function MostrarOportunidad(num) {
        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("Oportunidad", "Oportunidad")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });
    }

    function EliminarOportunidad(Id, IdOportunidad) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar Oportunidad !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                var Oportunidad = new Object();
                Oportunidad.Id = IdOportunidad;

                var OportunidadPersona = new Object();
                OportunidadPersona.Id = Id;
                OportunidadPersona.Oportunidad = Oportunidad;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadPersona_Eliminar", "OportunidadPersona")",
                    async: false,
                    data: JSON.stringify(OportunidadPersona),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }
        });
    }
</script>

<script>const toastPlacementExample = document.querySelector('.toast-placement-ex');
    let selectedType, selectedPlacement, toastPlacement;

    function toastDispose(toast) {
        if (toast && toast._element !== null) {
            if (toastPlacementExample) {
                toastPlacementExample.classList.remove(selectedType);
                DOMTokenList.prototype.remove.apply(toastPlacementExample.classList, selectedPlacement);
            }
            toast.dispose();
        }
    }

    function AlertIncompleto() {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-primary';
        selectedPlacement = ['top-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text("Formulario incompleto");
        $("#AlertaTexto").text("Completa la información del formulario.");
    }

    function AlertPrimary(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-primary';
        selectedPlacement = ['top-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertWarning(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-warning';
        selectedPlacement = ['bottom-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertDanger(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-danger';
        selectedPlacement = ['bottom-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertDanger(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-danger';
        selectedPlacement = ['bottom-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertSuccess(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-success';
        selectedPlacement = ['top-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }</script>

<script>$(document).ready(function () {
        $("#Empresa_Empresa").select2();
        $("#Empresa_Departamento").select2();
        $("#Empresa_Puesto").select2();
    });

    function ValidaInput(name) {
        if ($('#' + name).val().length > 0) {
            $('#' + name).css("border", "1px solid #d9dee3");
            $('#' + name).css("border-left", "none");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
        }
    }

    function ValidaSelect(name) {
        if ($('#' + name + ' option:selected').val() > 0) {
            $('#select2-' + name + '-container').css("border", "0px solid #d9dee3");
            $('#' + name).css("border", "1px solid #d9dee3");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
            $('#select2-' + name + '-container').css("border", "1px solid #f44336");
        }
    }

    function Mayus(e) {
        e.value = e.value.toUpperCase();
    }

    function soloNum(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "1234567890";
        especiales = [8, 37, 39, 46];

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }
        if (letras.indexOf(tecla) == -1 && !tecla_especial)
            return false;
    }



    $('#Nv1Contacto').addClass("active open");</script>

