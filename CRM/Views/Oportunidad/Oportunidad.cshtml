
@{
    ViewBag.Title = "Oportunidad";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Checkboxes-fSelect/fSelect.css" rel="stylesheet" />
<script src="~/Scripts/Checkboxes-fSelect/fSelect.js"></script>

<style>
    .nav-link {
        display: block;
        padding: 0.5rem 0.25rem;
        color: #8e9baa;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    }

    .btn-outline-secondary-negado {
        color: #ffffff;
        border-color: #ffffff;
        background: transparent;
    }
</style>

<!-- Toast with Placements -->
<div class="bs-toast toast toast-placement-ex m-2" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000">
    <div class="toast-header">
        <i class="bx bx-bell me-2"></i>
        <div class="me-auto fw-semibold" id="AlertaTitulo"></div>
        <small id="AlertaFecha"></small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body" id="AlertaTexto"></div>
</div>

<div class="row">
    <div class="col-lg-8 mb-4 order-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="d-flex align-items-end row">
                        <div class="col-sm-8">
                            <div class="row">
                                <div>
                                    <div class="card-body">

                                        <h5 class="card-title text-primary">OPORTUNIDAD : <strong>@ViewBag.Oportunidad.Nombre</strong> ! 🎉</h5>
                                        <h5 class="card-title" id="TextTituloOportunidadEmpresa" style="display:none;">EMPRESA : <strong></strong>  🏢 </h5>
                                        <p class="mb-4">
                                            Unidad de negocio: <span class="fw-bold"> @ViewBag.Oportunidad.CatUnidadNegocio.Nombre</span> @*<span class="tf-icons bx bx-edit"></span>&nbsp;<span class="fw-bold"> Editar </span>*@
                                            <br />
                                            Tipo oportunidad: <span class="fw-bold"> @ViewBag.Oportunidad.CatTipoOportunidad.Nombre</span>
                                            <br />
                                            Prioridad: <span class="fw-bold"> @ViewBag.Oportunidad.CatPrioridad.Nombre</span>
                                            <br />
                                            Nos encontramos al <span class="fw-bold" id="TextProgreso">** %</span> del progreso, <br />Fecha de cierre:  <span class="fw-bold">
                                                @if (ViewBag.Oportunidad.OportunidadFechaCierre != null)
                                                {
                                                    @Convert.ToDateTime(ViewBag.Oportunidad.OportunidadFechaCierre.Fecha).ToString("dd-MM-yyyy")
                                                }

                                            </span>
                                            @if (@ViewBag.Oportunidad.CatEstatusOpurtunidad.Nombre == "EN PROCESO")
                                            {
                                                <font style="vertical-align: inherit;"
                                                      data-bs-toggle="tooltip"
                                                      data-bs-offset="0,4"
                                                      data-bs-placement="top"
                                                      data-bs-html="true"
                                                      title="<i class='bx bx-calendar-plus' ></i> <span>Modificar fecha de cierre </span>" onclick="BtnAbrirActualizarFecha()">
                                                    <a href="#"><span><font style="vertical-align: inherit;"><i class="tf-icons bx bx-edit"></i></font></span></a>
                                                </font>
                                            }
                                            else
                                            {
                                                <font style="vertical-align: inherit;"
                                                      data-bs-toggle="tooltip"
                                                      data-bs-offset="0,4"
                                                      data-bs-placement="top"
                                                      data-bs-html="true"
                                                      title="<i class='bx bx-calendar-plus' ></i> <span>Solo puedes modificar el fecha de cierre si la oportunidad se encuentra EN PROCESO </span>" onclick="">
                                                    <span><font style="vertical-align: inherit;"><i class="tf-icons bx bx-edit"></i></font></span>
                                                </font>
                                            }
                                            .
                                            <br />
                                            <span class="fw-bold">Descripción:</span> @ViewBag.Oportunidad.Descripcion.
                                        </p>


                                        <hr />
                                        <a href="javascript:;" class="btn btn-sm btn-outline-primary" onclick="FormularioInformacion()">Información principal </a>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4 text-center text-sm-left">
                            <div class="card-body pb-0 px-0 px-md-4">
                                <img src="~/assets/img/illustrations/man-with-laptop-light.png" height="140" alt="View Badge User" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row" id="FormPrincipal">
            <div class="col-md-12">
                <div class="demo-inline-spacing">
                    <input type="checkbox" id="checkbox_Contacto" value="0" style="display:none">
                    <input type="checkbox" id="checkbox_Empresa" value="0" style="display:none">
                    <button type="button" class="btn btn-outline-primary" id="BtnContacto" onclick="FormularioInformacion()">
                        <span class="tf-icons bx bx-crown"></span>&nbsp; Información
                    </button>
                    <button type="button" class="btn btn-primary" id="BtnEmpresa" onclick="FormularioEmpresa()">
                        <span class="tf-icons bx bx-folder-open"></span>&nbsp; Actividad
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="BtnProgreso" onclick="FormularioProgreso()">
                        <span class="tf-icons bx bx-award"></span>&nbsp; Progreso
                    </button>
                </div>
            </div>
            <div class="col-lg-12 col-md-8 col-lg-4 order-3 order-md-2">
                <br />
                <div class="col-xl-12">

                    <div class="nav-align-top mb-4">
                        <ul class="nav nav-tabs nav-fill" role="tablist">
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link active"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-home"
                                        aria-controls="navs-justified-home"
                                        aria-selected="true">
                                    Actividad
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-profile"
                                        aria-controls="navs-justified-profile"
                                        aria-selected="false">
                                    Notas
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-Correos"
                                        aria-controls="navs-justified-Correos"
                                        aria-selected="false">
                                    Correos electrónicos
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-Llamadas"
                                        aria-controls="navs-justified-Llamadas"
                                        aria-selected="false">
                                    Llamadas
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-Tareas"
                                        aria-controls="navs-justified-Tareas"
                                        aria-selected="false">
                                    Tareas
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-Meetings"
                                        aria-controls="navs-justified-Meetings"
                                        aria-selected="false">
                                    Meetings
                                </button>
                            </li>
                            <li class="nav-item">
                                <button type="button"
                                        class="nav-link"
                                        role="tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#navs-justified-Mensaje"
                                        aria-controls="navs-justified-Mensaje"
                                        aria-selected="false">
                                    Mensaje
                                </button>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="navs-justified-home" role="tabpanel">
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.OportunidadBitacora != null)
                                        {

                                            foreach (var item in ViewBag.OportunidadBitacora)
                                            {
                                                <a href="javascript:void(0);"
                                                   class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>@item.Operacion</h6>
                                                        <small class="text-muted">@Convert.ToDateTime(item.FechaRegistro).ToString("dd-MM-yyyy")</small>
                                                    </div>

                                                    <p class="mb-1">
                                                        <strong>@item.Propietario</strong>  @Html.Raw(item.Nota)
                                                    </p>
                                                    <small class="text-muted">@Convert.ToDateTime(item.FechaRegistro)</small>
                                                </a>
                                            }
                                        }


                                    </div>
                                </div>

                            </div>

                            <div class="tab-pane fade" id="navs-justified-profile" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaNota">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Crear nota
                                    </button>
                                </div>
                                <br />
                                <p class="text-center">
                                    <span>Toma notas sobre este registro para realizar un seguimiento de la información importante. Incluso puedes @@mencionar a un compañero de equipo si lo necesitas. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.Notas != null)
                                        {

                                            foreach (var item in ViewBag.Notas)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>
                                                            Propietario: @item.Usuario.Persona.Nombre.ToUpper()
                                                            @{if (item.Usuario.Persona.ApellidoPaterno != null)
                                                                { @item.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                            @{if (item.Usuario.Persona.ApellidoMaterno != null)
                                                                { @item.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                            @{if (@item.Usuario.Persona.Email != null)
                                                                {
                                                                    @item.Usuario.Persona.Email.email
                                                                }
                                                            }
                                                        </h6>
                                                        <small class="text-muted">Fecha registro: @Convert.ToDateTime(item.FechaRegistro).ToString("dd-MM-yyyy")</small>
                                                    </div>
                                                    <p class="mb-1">
                                                        <strong>Nota :</strong>
                                                        <br />
                                                        @item.nota
                                                    </p>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="navs-justified-Correos" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoCorreo">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar correo electrónico
                                    </button>
                                </div>
                                <br />
                                <p class="text-center">
                                    <span>Registra un correo electrónico para realizar un seguimiento. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.Correos != null)
                                        {

                                            foreach (var item in ViewBag.Correos)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>
                                                            Propietario: @item.Correo.Usuario.Persona.Nombre.ToUpper()
                                                            @{if (item.Correo.Usuario.Persona.ApellidoPaterno != null)
                                                                { @item.Correo.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                            @{if (item.Correo.Usuario.Persona.ApellidoMaterno != null)
                                                                { @item.Correo.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                            @{if (@item.Correo.Usuario.Persona.Email != null)
                                                                {
                                                                    @item.Correo.Usuario.Persona.Email.email
                                                                }
                                                            }
                                                        </h6>
                                                        <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Correo.FechaEnvio)</small>
                                                    </div>
                                                    <p class="mb-1">
                                                        <strong>Mensaje :</strong>
                                                        <br />
                                                        @if (@item.Correo.Mensaje != null)
                                                        {
                                                            @item.Correo.Mensaje
                                                        }
                                                        else
                                                        {
                                                            @Html.Label("NO REGISTRO CONTENIDO DEL CORREO");
                                                        }
                                                    </p>
                                                    <small class="text-muted">@Convert.ToDateTime(item.Correo.FechaRegistro)</small>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="navs-justified-Llamadas" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaLlamada">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar llamada
                                    </button>
                                </div>
                                <br />
                                <p class="text-center">
                                    <span>Registra una actividad de llamada para realizar un seguimiento de tu discusión y tus notas. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.Llamadas != null)
                                        {

                                            foreach (var item in ViewBag.Llamadas)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>
                                                            Propietario: @item.Llamada.Usuario.Persona.Nombre.ToUpper()
                                                            @{if (item.Llamada.Usuario.Persona.ApellidoPaterno != null)
                                                                { @item.Llamada.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                            @{if (item.Llamada.Usuario.Persona.ApellidoMaterno != null)
                                                                { @item.Llamada.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                            @{if (@item.Llamada.Usuario.Persona.Email != null)
                                                                {
                                                                    @item.Llamada.Usuario.Persona.Email.email
                                                                }
                                                            }
                                                        </h6>
                                                        <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Llamada.Fecha)</small>
                                                    </div>
                                                    <p class="mb-1">
                                                        <strong>Resultado de la llamada:</strong> @item.Llamada.CatResultadoLlamada.Nombre
                                                        <br />
                                                        <strong>Dirección de la llamada:</strong> @item.Llamada.CatDireccionLlamada.Nombre
                                                        <br />
                                                        <strong>Fecha que se realizó la llamada:</strong> @Convert.ToDateTime(item.Llamada.Fecha)
                                                    </p>
                                                    <p class="mb-1">
                                                        <strong>Descripción :</strong>
                                                        <br />
                                                        @if (@item.Llamada.Descripcion != null)
                                                        {
                                                            @item.Llamada.Descripcion
                                                        }
                                                        else
                                                        {
                                                            @Html.Label("NO REGISTRO CONTENIDO");
                                                        }
                                                    </p>
                                                    <small class="text-muted">@Convert.ToDateTime(item.Llamada.FechaRegistro)</small>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="navs-justified-Tareas" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaTarea">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Crear tarea
                                    </button>
                                </div>
                                <p class="text-center">
                                    <span>Registra una tarea para realizar un seguimiento y tus notas. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.BitaoraTareas != null)
                                        {

                                            foreach (var item in ViewBag.BitaoraTareas)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>Titulo: @item.Tarea.Titulo</h6>
                                                        <small class="text-muted">Fecha registro: @Convert.ToDateTime(item.Tarea.FechaRegistro).ToString("dd-MM-yyyy")</small>

                                                    </div>
                                                    <strong>Tarea :</strong> @item.TareaPersona.CatTipoTarea.Nombre
                                                    <p class="mb-1">
                                                        <strong>Estatus:</strong> @item.Tarea.CatEstatusTarea.Nombre -  <strong>Prioridad:</strong> @item.TareaPersona.CatPrioridad.Nombre
                                                        <br />
                                                        <strong>Vencimiento:</strong> @item.Tarea.CatFechaVencimiento.Nombre - <strong>Fecha Vencimiento:</strong> @Convert.ToDateTime(item.Tarea.FechaVencimiento).ToString("dd-MM-yyyy")
                                                        <br />
                                                        <strong>Recordatorio:</strong> @item.Tarea.CatRecordatorio.Nombre -  @{if (item.Tarea.FechaRecordatorio != null)
                                                            { <strong>Fecha Recordatorio:</strong> @Convert.ToDateTime(item.Tarea.FechaRecordatorio).ToString("dd-MM-yyyy") }
                                                        }
                                                    </p>
                                                    <p class="mb-1">
                                                        <strong>Tarea asignada a:</strong> @item.TareaPersona.Persona.Nombre.ToUpper()
                                                        @{if (item.TareaPersona.Persona.ApellidoPaterno != null)
                                                            { @item.TareaPersona.Persona.ApellidoPaterno.ToUpper()} }
                                                        @{if (item.TareaPersona.Persona.ApellidoMaterno != null)
                                                            { @item.TareaPersona.Persona.ApellidoMaterno.ToUpper()} } -
                                                        @{if (@item.TareaPersona.Persona.Email != null)
                                                            {
                                                                @item.TareaPersona.Persona.Email.email
                                                            }
                                                        }
                                                    </p>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="navs-justified-Meetings" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevaReunion">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar reunión
                                    </button>
                                </div>
                                <br />
                                <p class="text-center">
                                    <span>Registra una actividad de reunión para realizar un seguimiento de tus reuniones y tus notas.. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.Reuniones != null)
                                        {

                                            foreach (var item in ViewBag.Reuniones)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>
                                                            Propietario: @item.Reunion.Usuario.Persona.Nombre.ToUpper()
                                                            @{if (item.Reunion.Usuario.Persona.ApellidoPaterno != null)
                                                                { @item.Reunion.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                            @{if (item.Reunion.Usuario.Persona.ApellidoMaterno != null)
                                                                { @item.Reunion.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                            @{if (@item.Reunion.Usuario.Persona.Email != null)
                                                                {
                                                                    @item.Reunion.Usuario.Persona.Email.email
                                                                }
                                                            }
                                                        </h6>
                                                        <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Reunion.Fecha)</small>
                                                    </div>
                                                    <p class="mb-1">
                                                        <strong>Resultado de la reunión:</strong> @item.Reunion.CatResultadoReunion.Nombre
                                                        <br />
                                                        <strong>Duración:</strong> @item.Reunion.CatDuracionReunion.Nombre
                                                        <br />
                                                        <strong>Tipo de reunión:</strong> @item.Reunion.CatTipoReunion.Nombre
                                                        <br />
                                                        <strong>Fecha que se realizó la reunión:</strong> @Convert.ToDateTime(item.Reunion.Fecha)
                                                    </p>
                                                    <p class="mb-1">
                                                        <strong>Descripción :</strong>
                                                        <br />
                                                        @if (@item.Reunion.Descripcion != null)
                                                        {
                                                            @item.Reunion.Descripcion
                                                        }
                                                        else
                                                        {
                                                            @Html.Label("NO REGISTRO CONTENIDO");
                                                        }
                                                    </p>
                                                    <small class="text-muted">@Convert.ToDateTime(item.Reunion.FechaRegistro)</small>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="navs-justified-Mensaje" role="tabpanel">
                                <div class="demo-inline-spacing text-left">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoMensaje">
                                        <span class="tf-icons bx bx-plus-medical"></span>&nbsp; Registrar mensaje
                                    </button>
                                </div>
                                <br />
                                <p class="text-center">
                                    <span>Registra un mensaje para realizar un seguimiento y tus notas. </span>
                                </p>
                                <div class="demo-inline-spacing mt-3">
                                    <div class="list-group">
                                        @if (ViewBag.Mensajes != null)
                                        {

                                            foreach (var item in ViewBag.Mensajes)
                                            {
                                                <a href="javascript:void(0);" class="list-group-item list-group-item-action flex-column align-items-start">
                                                    <div class="d-flex justify-content-between w-100">
                                                        <h6>
                                                            Propietario: @item.Mensaje.Usuario.Persona.Nombre.ToUpper()
                                                            @{if (item.Mensaje.Usuario.Persona.ApellidoPaterno != null)
                                                                { @item.Mensaje.Usuario.Persona.ApellidoPaterno.ToUpper()} }
                                                            @{if (item.Mensaje.Usuario.Persona.ApellidoMaterno != null)
                                                                { @item.Mensaje.Usuario.Persona.ApellidoMaterno.ToUpper()} } -
                                                            @{if (@item.Mensaje.Usuario.Persona.Email != null)
                                                                {
                                                                    @item.Mensaje.Usuario.Persona.Email.email
                                                                }
                                                            }
                                                        </h6>
                                                        <small class="text-muted">Fecha envió: @Convert.ToDateTime(item.Mensaje.Fecha)</small>
                                                    </div>
                                                    <p class="mb-1">
                                                        <strong>Tipo de mensaje:</strong> @item.Mensaje.CatTipoMensaje.Nombre
                                                        <br />
                                                        <br />
                                                        <strong>Fecha envió:</strong> @Convert.ToDateTime(item.Mensaje.Fecha)
                                                    </p>
                                                    <p class="mb-1">
                                                        <strong>Descripción :</strong>
                                                        <br />
                                                        @if (@item.Mensaje.Descripcion != null)
                                                        {
                                                            @item.Mensaje.Descripcion
                                                        }
                                                        else
                                                        {
                                                            @Html.Label("NO REGISTRO CONTENIDO");
                                                        }
                                                    </p>
                                                    <small class="text-muted">@Convert.ToDateTime(item.Mensaje.FechaRegistro)</small>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormContacto" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Contacto! 👨‍💼</h5>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Contacto   </label>
                                                    <select id='Contacto_Contacto' class="form-select" aria-label="Contacto_Contacto">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.Contactos)
                                                        {
                                                            <option value="@item.Persona.Id">
                                                                @item.Persona.Nombre.ToUpper()
                                                                @{if (item.Persona.ApellidoPaterno != null)
                                                                    { @item.Persona.ApellidoPaterno.ToUpper()} }
                                                                @{if (item.Persona.ApellidoMaterno != null)
                                                                    { @item.Persona.ApellidoMaterno.ToUpper()} }
                                                                (@item.Persona.Email.email)
                                                            </option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-12">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Rol dentro de oportunidad </label>
                                                    <div class="input-group">
                                                        <select id='Contacto_Rol' class="form-select" aria-label="Oportunidad_Rol" onchange="ValidaSelect('Contacto_Rol')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.PersonaOportunidad)
                                                            {
                                                                <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRolPersonaOpurtunidad" aria-controls="offcanvasRolPersonaOpurtunidad">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarContacto()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing" id="DivRegistrarContacto">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarContacto()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                                <div class="demo-inline-spacing" id="DivActualizarContacto" style="display:none;">
                                                    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div id="FormEmpresa" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Empresa! 🏢</h5>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Empresa   </label>
                                                    <select id='Empresa_Empresa' class="form-select" aria-label="Empresa_Empresa">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.Empresas)
                                                        {
                                                            <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarEmpresa()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarEmpresa()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div id="FormProducto" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Relacionar Producto! 🏷️</h5>
                                        <div class="row">
                                            <small class="text-light fw-semibold">Asociar oportunidad con producto:<br /> Puedes agregar varios productos a la oportunidad  </small>
                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Producto </label>
                                                    <button class="btn btn-primary" type="button" id="IdBtnModalProductoAbrir" data-bs-toggle="offcanvas" data-bs-target="#offcanvasProducto" aria-controls="offcanvasProducto" style="display:none;">+</button>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_Producto' class="form-select" aria-label="Oportunidad_Producto" onchange="BuscaProducto()">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @{
                                                                if (ViewBag.Productos != null)
                                                                {
                                                                    foreach (var item in ViewBag.Productos)
                                                                    {
                                                                        <option value="@item.Id"> @item.Nombre.ToUpper() </option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalProducto" onclick="AbrirProducto()">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Cantidad </label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-cart"></i>
                                                        </span>
                                                        <input type="number" class="form-control" id="Oportunidad_Cantidad" placeholder="Cantidad" aria-label="" aria-describedby="Oportunidad_Cantidad" onchange="ValidaInput('Oportunidad_Cantidad')" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Categoría   </label>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_Categoria' class="form-select" aria-label="Oportunidad_Categoria" onchange="CargaSubCategorias()">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @if (ViewBag.CategoriasProducto != null)
                                                            {
                                                                foreach (var item in ViewBag.CategoriasProducto)
                                                                {
                                                                    <option value="@item.Id"> @item.Nombre.ToUpper() </option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCategoria" aria-controls="offcanvasCategoria">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Sub Categoría  </label>
                                                    <button class="btn btn-primary" type="button" id="IdBtnModalSebCategoriaAbrir" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSubCategoria" aria-controls="offcanvasSubCategoria" style="display:none;">+</button>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_SubCategoria' class="form-select" aria-label="Oportunidad_SubCategoria" onchange="CargaClasificaciones()">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalSebCategoria" onclick="AbrirSubCategoria()">+</button>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Clasificación  </label>
                                                    <button class="btn btn-primary" type="button" id="IdBtnModalClasificacionAbrir" data-bs-toggle="offcanvas" data-bs-target="#offcanvasClasificacion" aria-controls="offcanvasClasificacion" style="display:none;">+</button>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_Clasificacion' class="form-select" aria-label="Oportunidad_Clasificacion" onchange="CargaProductos()">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                        </select>
                                                        <button class="btn btn-primary" type="button" id="IdBtnModalClasificacion" onclick="AbrirClasificacion()">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Importe</label>
                                                    <div class="input-group input-group-merge">
                                                        <span class="input-group-text">$</span>
                                                        <input type="text" class="form-control numberPositivo" id="Oportunidad_Producto_Importe" placeholder="Importe" aria-label="" aria-describedby="Oportunidad_Producto_Importe" onchange="ValidaInput('Oportunidad_Producto_Importe')" />
                                                        <span class="input-group-text">.00</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Moneda </label>
                                                    <select id='Oportunidad_Producto_Moneda' class="form-select" aria-label="Oportunidad_Producto_Moneda" onchange="ValidaSelect('Oportunidad_Producto_Moneda')">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.Moneda)
                                                        {
                                                            <option value="@item.Id"> @item.Nombre.ToUpper() </option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Tipo de cambio</label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-dollar"></i>
                                                        </span>
                                                        <input type="text" class="form-control numberPositivo" id="Oportunidad_Producto_TipoCambio" placeholder="Tipo de cambio" aria-label="" aria-describedby="Oportunidad_Producto_TipoCambio" onchange="ValidaInput('Oportunidad_Producto_TipoCambio')" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-8">
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-primary" style="width: 100%;" onclick="AgregarProductoOportunidad()">
                                                        <span class="tf-icons bx bx-cart"></span>&nbsp; Agregar producto
                                                    </button>

                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="row">

                                            <div class="col-lg-12" id="DivTableContenidoProductos">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarProducto()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarOportunidadProducto()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div id="FormImporte" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Nuevo Importe! 💰</h5>

                                        <div class="row">
                                            <div class="col-lg-12">
                                                <small class="text-light fw-semibold">Asociar oportunidad con importe </small>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Importe</label>
                                                    <div class="input-group input-group-merge">
                                                        <span class="input-group-text">$</span>
                                                        <input type="text" class="form-control numberPositivo" id="Oportunidad_Importe" placeholder="Importe" aria-label="" aria-describedby="Oportunidad_Importe" onchange="ValidaInput('Oportunidad_Importe')" />
                                                        <span class="input-group-text">.00</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Moneda </label>
                                                    <select id='Oportunidad_Moneda' class="form-select" aria-label="Oportunidad_Moneda" onchange="ValidaSelect('Oportunidad_Moneda')">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.Moneda)
                                                        {
                                                            <option value="@item.Id"> @item.Nombre.ToUpper() </option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Tipo de cambio</label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-dollar"></i>
                                                        </span>
                                                        <input type="text" class="form-control numberPositivo" id="Oportunidad_TipoCambio" placeholder="Oportunidad" aria-label="" aria-describedby="Oportunidad_TipoCambio" onchange="ValidaInput('Oportunidad_TipoCambio')" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-8">
                                                <div class="input-group">
                                                    <span class="input-group-text">Observación </span>
                                                    <textarea class="form-control" id="Oportunidad_ObsercionImporte" aria-label="With textarea" placeholder="Observación"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarAgregarImporte()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing" id="DivRegistrarImporte">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnRegistrarImporte()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Registrar
                                                    </button>
                                                </div>
                                                <div class="demo-inline-spacing" id="DivActualizarImporte" style="display:none;">
                                                    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormProgreso" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title"> 📝 Progreso de oportunidad - Etapa : <strong><span id="TitleFromProgreso"> </span></strong> </h5>
                                        <div class="row">
                                            <small class="text-light fw-semibold">Da un clic sobre la caja para chequear la tarea completada. </small>
                                        </div>
                                        <div class="row">
                                            <div id="DivContenedorListaTareas">

                                            </div>
                                            <div class="col-md-12 text-center" id="DivContenedorListaTareasFin" style="display: none;">
                                                <br />
                                                <h5 class="card-title" style="color: #fe7e00; font-size: 23px; "> 🎉🎉🎉 Felicitaciones etapas terminadas !! 🎉🎉🎉</h5>
                                                <img src="~/assets/img/illustrations/business-goal-achievement-concept-vector.jpg" width="40%" />
                                            </div>
                                        </div>
                                        <div class="row">

                                            <div class="col-md-6">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-secondary" style="width: 100%;" onclick="OcultarProgreso()">
                                                        <span class="tf-icons bx bx-x-circle"></span>&nbsp; Cerrar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-6" id="DivBtnRegresarEtapaAnterior">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-primary" style="width: 100%;" onclick="BtnRegresarEtapaAnterior()">
                                                        <span class="tf-icons bx bx-reply-all"></span>&nbsp; Regresar a Etapa Anterior
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="FormInformacion" style="display:none">
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="d-flex align-items-end row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="card-body">
                                        <h5 class="card-title">Información de oportunidad! 🎉</h5>
                                        <div class="row">
                                            <small class="text-light fw-semibold">Completa los campos marcados *  </small>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Nombre oportunidad</label>
                                                    <div class="input-group input-group-merge">
                                                        <span id="basic-icon-default-fullname2" class="input-group-text">
                                                            <i class="bx bx-building"></i>
                                                        </span>
                                                        <input type="text" class="form-control" value="@ViewBag.Oportunidad.Nombre" id="Oportunidad_Nombre" placeholder="Oportunidad" aria-label="" aria-describedby="Oportunidad_Nombre" onkeyup="Mayus(this);" onchange="ValidaInput('Oportunidad_Nombre')" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Unidad de negocio </label>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_UnidadNegocio' class="form-select" aria-label="Oportunidad_UnidadNegocio" onchange="ValidaSelect('Oportunidad_UnidadNegocio')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.UnidadNegocio)
                                                            {
                                                                if (ViewBag.Oportunidad.CatUnidadNegocio.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasUnidadNegocio" aria-controls="offcanvasUnidadNegocio">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Tipo </label>
                                                    <div class="input-group">
                                                        <select id='Oportunidad_TipoOportunidad' class="form-select" aria-label="Oportunidad_TipoOportunidad" onchange="ValidaSelect('Oportunidad_TipoOportunidad')">
                                                            <option value="0" selected>SELECCIONAR</option>
                                                            @foreach (var item in ViewBag.TipoOportunidades)
                                                            {
                                                                if (ViewBag.Oportunidad.CatTipoOportunidad.Id == item.Id)
                                                                {
                                                                    <option value="@item.Id" selected>@item.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTipoOportunidad" aria-controls="offcanvasTipoOportunidad">+</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <label class="form-label" for="basic-icon-default-fullname">* Prioridad </label>

                                                    <select id='Oportunidad_Prioridad' class="form-select" aria-label="Oportunidad_Prioridad" onchange="ValidaSelect('Oportunidad_Prioridad')">
                                                        <option value="0" selected>SELECCIONAR</option>
                                                        @foreach (var item in ViewBag.Prioridad)
                                                        {
                                                            if (ViewBag.Oportunidad.CatPrioridad.Id == item.Id)
                                                            {
                                                                    <option value="@item.Id" selected> @item.Nombre.ToUpper() </option>
                                                            }
                                                            else
                                                            {
                                                                    <option value="@item.Id"> @item.Nombre.ToUpper() </option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-lg-12">
                                                <label for="exampleFormControlTextarea1" class="form-label">Descripción </label>
                                                <textarea class="form-control" id="Oportunidad_Descripcion" rows="3" onkeyup="Mayus(this);">@ViewBag.Oportunidad.Descripcion</textarea>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing">
                                                    <button type="button" class="btn btn-outline-secondary" style="width: 100%;" onclick="OcultarInformacion()()">
                                                        <span class="tf-icons bx bx-subdirectory-left"></span>&nbsp; Cancelar
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="demo-inline-spacing" id="DivRegistrarImporte">
                                                    <button type="button" class="btn btn-outline-primary" style="width: 100%;" onclick="BtnActualizarImporfacion()">
                                                        <span class="tf-icons bx bx-save"></span>&nbsp; Actualizar
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 mb-4 order-0">
        <div class="row">
            <div class="col-lg-12 col-md-12 mb-3">
                <div class="card border border-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color">
                    <div class="card-body">
                        <div class="card-title d-flex align-items-start justify-content-between" style="margin-bottom: 0rem; ">
                            <div class="avatar flex-shrink-0">
                                <div class="d-flex">
                                    <div class="me-2">
                                        <span class="badge bg-label-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color p-2"><i class="bx bx-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Icono text-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="text-center" role="toolbar" aria-label="Toolbar with button groups">
                                <div class="btn-group " role="group" aria-label="First group">
                                    <button type="button" class="btn btn-outline-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color"
                                            data-bs-toggle="tooltip"
                                            data-bs-offset="0,4"
                                            data-bs-placement="top"
                                            data-bs-html="true"
                                            title="<i class='bx bx-edit' ></i> <span>Editar</span>" onclick="BtnAbrirActualizarEstatus()">
                                        <i class="tf-icons bx bx-edit"></i>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <span class="fw-semibold d-block mb-1 text-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color" style=" font-size: 15px;">Estatus Oportunidad</span>
                        <h3 class="card-title mb-2 text-@ViewBag.Oportunidad.CatEstatusOpurtunidad.Color" style=" font-size: 20px;">@ViewBag.Oportunidad.CatEstatusOpurtunidad.Nombre</h3>

                    </div>
                </div>
            </div>

            <div class="col-lg-12 col-md-12 mb-3">
                <div class="card">
                    <div class="card-body">
                        <div class="row" id="DivViewProgreso">
                            <p>Progreso - Etapa: </p>
                            <div class="col-lg-12">
                                <div class="progress">
                                    <div class="progress-bar"
                                         role="progressbar"
                                         style="width: 0%"
                                         aria-valuenow="0"
                                         aria-valuemin="0"
                                         aria-valuemax="100">
                                        0%
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-12 col-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title d-flex align-items-start justify-content-between">
                            <div class="avatar flex-shrink-0">
                                <div class="d-flex">
                                    <div class="me-2">
                                        <span class="badge bg-label-primary p-2"><i class="bx bx-dollar text-primary"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="dropdown">
                                <button class="btn p-0"
                                        type="button"
                                        id="cardOpt3"
                                        data-bs-toggle="dropdown"
                                        aria-haspopup="true"
                                        aria-expanded="false">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt3">
                                    <a class="dropdown-item" onclick="MostrarAgregarImporte()">Editar</a>
                                    <a class="dropdown-item" href="javascript:void(0);">Mostar Historico</a>
                                </div>
                            </div>
                        </div>
                        <span class="fw-semibold d-block mb-1">Importe</span>
                        <h3 class="card-title mb-2 texth3" id="Titulo_Importe">$0.00</h3>
                        <small class="text-success fw-semibold" id="Titulo_Importe_anterior"><i class="bx bx-up-arrow-alt"></i> <span> +0%</span></small>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-6 col-md-12 col-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title d-flex align-items-start justify-content-between">
                            <div class="avatar flex-shrink-0">
                                <div class="d-flex">
                                    <div class="me-2">
                                        <span class="badge bg-label-warning p-2"><i class="bx bxs-pie-chart-alt text-warning"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="dropdown">
                                <button class="btn p-0"
                                        type="button"
                                        id="cardOpt6"
                                        data-bs-toggle="dropdown"
                                        aria-haspopup="true"
                                        aria-expanded="false">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt6">
                                    <a class="dropdown-item" onclick="FormularioProgreso()">Actualizar</a>
                                    <a class="dropdown-item" href="javascript:void(0);">Historial</a>
                                </div>
                            </div>
                        </div>
                        <span class="fw-semibold d-block mb-1">Progreso</span>
                        <h3 class="card-title text-nowrap mb-2 texth3" id="h3TextProgreso">0%</h3>
                        <small class="text-success fw-semibold"><i class="bx bx-up-arrow-alt"></i> + 0%</small>
                    </div>
                </div>
            </div>
        </div>

        @{
            if (ViewBag.UsuarioTarea != null)
            {
                <div class="row">
                    <div class="col-lg-12 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title text-center">Lista de tareas pendientes </h5>
                                @foreach (var item1 in ViewBag.UsuarioTarea)
                                {
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12  mb-4">
                                            <div class="card border border-primary">
                                                <div class="card-title d-flex align-items-start justify-content-between p-2" style="margin-bottom: -1.125rem;">
                                                    <div class="avatar flex-shrink-0">
                                                        <div class="d-flex">
                                                            <div class="me-2">
                                                                <span class="badge bg-label-primary p-2"><i class="bx bx-bell text-primary"></i> @item1.Tarea.CatEstatusTarea.Nombre</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="dropdown ">
                                                        <div class="me-2">
                                                            <span class="badge bg-label-primary p-2"><i class="bx bx-calendar text-primary"></i>  </span> <span> Fecha Vencimiento : <strong>  @Convert.ToDateTime(@item1.Tarea.FechaVencimiento).ToString("dd-MM-yyyy") </strong></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=" justify-content-between p-2">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <span class="fw-semibold mb-1">TIPO TAREA: <strong> @item1.TareaPersona.CatTipoTarea.Nombre</strong></span>
                                                        </div>
                                                        <div class="col-md-12">
                                                            <span class="fw-semibold mb-1">TITULO:<br /> <strong>@item1.Tarea.Titulo</strong></span>
                                                        </div>
                                                        <div class="col-md-12 text-center">
                                                            <div class="demo-inline-spacing">
                                                                <button type="button" class="btn btn-secondary">
                                                                    <span class="tf-icons bx bx-calendar"></span>
                                                                </button>
                                                                <button type="button" class="btn btn-info" onclick="AbrirFormCompletarTarea(@item1.Tarea.Id)">
                                                                    <span class="tf-icons bx bx-check-circle"></span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        <div class="row">
            <div class="col-lg-12">
                <div class="accordion" id="accordionExample">
                    <div class="card accordion-item ">
                        <h2 class="accordion-header" id="headingOne">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionOne"
                                    aria-expanded="false"
                                    aria-controls="accordionOne">
                                Contactos  &nbsp;<span id="Btn_Titulo_Contactos"> (0)</span>
                            </button>
                        </h2>

                        <div id="accordionOne"
                             class="accordion-collapse collapse "
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar contacto</span>" onclick="MostrarAgregarContacto()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableContactos">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las personas asociadas con este registro</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingTwo">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionTwo"
                                    aria-expanded="false"
                                    aria-controls="accordionTwo">
                                Empresas  &nbsp;<span id="Btn_Titulo_Empresas"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionTwo"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingTwo"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar empresa</span>" onclick="MostrarAgregarEmpresa()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableEmpresas">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve las empresas u organizaciones asociadas a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item" id="CardProductos">
                        <h2 class="accordion-header" id="headingProductos">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionProductos"
                                    aria-expanded="false"
                                    aria-controls="accordionProductos">
                                Productos  &nbsp;<span id="Btn_Titulo_Productos"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionProductos"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingProductos"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" id="BtnActividadProducto" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" id="BtnAgregarProducto" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar Producto</span>" onclick="MostrarAgregarProducto()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableProductos">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body" id="FooterProductos">
                            <small class="text-light fw-semibold">Ve los productos asociados a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingImportes">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionImportes"
                                    aria-expanded="false"
                                    aria-controls="accordionImportes">
                                Importes  &nbsp;<span id="Btn_Titulo_Importes"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionImportes"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingImportes"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" id="BtnAgregarImporte" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Agregar Importe</span>" onclick="MostrarAgregarImporte()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="TableImportes">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve los importes asociados a este registro.</small>
                        </div>
                    </div>
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingCuatro">
                            <button type="button"
                                    class="accordion-button collapsed"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#accordionCuatro"
                                    aria-expanded="false"
                                    aria-controls="accordionThree">
                                Archivos Adjuntos &nbsp;<span id="Btn_Titulo_Archivos"> (0)</span>
                            </button>
                        </h2>
                        <div id="accordionCuatro"
                             class="accordion-collapse collapse"
                             aria-labelledby="headingThree"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class=" demo-inline-spacing text-center" role="toolbar" aria-label="Toolbar with button groups">
                                            <div class="btn-group " role="group" aria-label="First group">
                                                <button type="button" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-task' ></i> <span>Actividad</span>" onclick="OcultaFormularios()">
                                                    <i class="tf-icons bx bx-task"></i>
                                                </button>

                                                <button type="button" id="BtnAgregarImporte" class="btn btn-outline-secondary"
                                                        data-bs-toggle="tooltip"
                                                        data-bs-offset="0,4"
                                                        data-bs-placement="top"
                                                        data-bs-html="true"
                                                        title="<i class='bx bx-add-to-queue bx-xs' ></i> <span>Subir Archivo</span>" onclick="SubirArchivo()">
                                                    <i class="tf-icons bx bx-add-to-queue"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 text-center">
                                        <input id="fileInputArchivo" type="file" style="visibility:hidden">
                                        <progress id="fileProgresArchivo" style="width: 100%; display: none;"></progress>
                                    </div>
                                </div>
                                <div class="row" id="TableArchivosAdjuntos">

                                </div>
                            </div>
                        </div>
                        <div class="accordion-body">
                            <small class="text-light fw-semibold">Ve los archivos adjuntos a las actividades o cargados en este registro.</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--- FORMULARIO NUEVA UNIDAD DE NEGOCIO -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasUnidadNegocio" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVA UNIDAD DE NEGOCIO</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre unidad de negocio</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-building-house"></i>
                        </span>
                        <input type="text" class="form-control" id="UnidadNegocio_Nombre" placeholder="Unidad de negocio" aria-label="" aria-describedby="UnidadNegocio_Nombre" onchange="ValidaInput('UnidadNegocio_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarUnidadNegocio()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnUnidadNegocioCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVO TIPO OPORTUNIDAD  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasTipoOportunidad" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO TIPO DE OPORTUNIDAD</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre tipo oportunidad</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="TipoOportunidad_Nombre" placeholder="Tipo oportunidad" aria-label="" aria-describedby="TipoOportunidad_Nombre" onchange="ValidaInput('TipoOportunidad_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarTipoOportunidad()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnTipoOportunidadCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVO ESTATUS OPORTUNIDAD  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasEstatusOpurtunidad" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO ESTATUS OPORTUNIDAD </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre estatus oportunidad</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="EstatusOportunidad_Nombre" placeholder="Estatus oportunidad" aria-label="" aria-describedby="EstatusOpurtunidad_Nombre" onchange="ValidaInput('EstatusOportunidad_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarEstatusOportunidad()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnEstatusOportunidadCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVO ROL CONTACTO OPORTUNIDAD  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasRolPersonaOpurtunidad" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO ROL CONTACTO OPORTUNIDAD </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre rol</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="PersonaOportunidad_Nombre" placeholder="Rol contacto oportunidad" aria-label="" aria-describedby="PersonaOportunidad_Nombre" onchange="ValidaInput('PersonaOportunidad_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarPersonaOportunidad()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnPersonaOportunidadCerrar">  Cancelar  </button>
    </div>
</div>


<!---  FORMULARIO NUEVA CATEGORÍA  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasCategoria" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVA CATEGORÍA </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre categoría</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="Categoria_Nombre" placeholder="Categoría" aria-label="" aria-describedby="Categoria_Nombre" onchange="ValidaInput('Categoria_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarCategoria()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnCategoriaCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVA SUBCATEGORIA  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasSubCategoria" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVA SUB CATEGORÍA </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre sub categoría</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="SubCategoria_Nombre" placeholder="Sub categoría" aria-label="" aria-describedby="SubCategoria_Nombre" onchange="ValidaInput('SubCategoria_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarSubCategoria()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnSubCategoriaCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVA CLASIFICACIÓN  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasClasificacion" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVA CLASIFICACIÓN </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre clasificación</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="Clasificacion_Nombre" placeholder="clasificación" aria-label="" aria-describedby="Clasificacion_Nombre" onchange="ValidaInput('Clasificacion_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarClasificacion()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnClasificacionCerrar">  Cancelar  </button>
    </div>
</div>

<!---  FORMULARIO NUEVO PRODUCTO  -->
<div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="offcanvasProducto" aria-labelledby="offcanvasBothLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasBothLabel" class="offcanvas-title">NUEVO PRODUCTO </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body my-auto mx-0 flex-grow-0">
        <div class="row">
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* Nombre producto</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="Producto_Nombre" placeholder="Nombre producto" aria-label="" aria-describedby="Producto_Nombre" onchange="ValidaInput('Producto_Nombre')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="mb-3">
                    <label class="form-label" for="basic-icon-default-fullname">* SKU</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-clipboard"></i>
                        </span>
                        <input type="text" class="form-control" id="Producto_SKU" placeholder="SKU" aria-label="" aria-describedby="Producto_SKU" onchange="ValidaInput('Producto_SKU')" onkeyup="Mayus(this);" />
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <label for="exampleFormControlTextarea1" class="form-label">Descripción </label>
                <textarea class="form-control" id="Producto_Descripcion" rows="2" onkeyup="Mayus(this);"></textarea>
                <br />
            </div>
            <div class="col-lg-12 text-center">
                <div id="ImgEmpleado" style="width:50%"></div>
                <input id="fileInput4" type="file" style="visibility:hidden">
                <progress id="fileProgres" style="width: 100%; display: none;"></progress>
            </div>
            <div class="col-lg-6">
                <button class="btn btn-danger" type="button" id="BtnEliminarImagen" style="display:none;" onclick="EliminarImagen()">Eliminar Imagen</button>
            </div>
            <div class="col-lg-6">
                <button type="button" class="btn btn-dark mb-2 d-grid w-100" id="BtnNuvaImagenFotografica">Subir Imagen </button>
            </div>
        </div>
        <button type="button" class="btn btn-primary mb-2 d-grid w-100" onclick="BtnRegistrarProducto()">Registrar </button>
        <button type="button" class="btn btn-outline-secondary d-grid w-100" data-bs-dismiss="offcanvas" id="BtnProductoCerrar">  Cancelar  </button>
    </div>
</div>




<!-- MODAL ACTUALIZAR FECHA CIERRE -->
<div class="modal fade" id="modalFechaCierreOportunidad" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Actualizar fecha cierre de oportunidad</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Fecha cierre  </label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-calendar"></i>
                                </span>
                                <input type="date" class="form-control" id="Oportunidad_FechaCierre" placeholder="Nombre" aria-label="" aria-describedby="basic-icon-default-fullname2" onkeyup="Mayus(this);" onchange="ValidaInput('Oportunidad_FechaCierre')" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Observación </label>
                        <textarea class="form-control" id="OportunidadFechaCierre_Descripcion" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                    <div class="col-lg-12">
                        <br />
                        <p>Coloca el número de confirmación : <strong><span id="OportunidadFechaCierre_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Clave</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-key"></i>
                                </span>
                                <input type="text" class="form-control" id="OportunidadFechaCierre_Clave" placeholder="Numero de confirmación" aria-label="" aria-describedby="OportunidadFechaCierre_Clave" onkeyup="Mayus(this);" onchange="ValidaInput('OportunidadFechaCierre_Clave')" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" id="BtnCancelarOportunidadFechaCierre" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="ActualizarFechaCierreOportunidad()">Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL ACTUALIZAR ESTATUS -->
<div class="modal fade" id="modalEstatusOportunidad" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Actualizar estado de oportunidad</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Estatus </label>
                            <div class="input-group">
                                <select id='Oportunidad_EstatusOpurtunidad' class="form-select" aria-label="Oportunidad_EstatusOpurtunidad" onchange="ValidaEstatusOpurtunidad()">
                                    <option value="0" selected>SELECCIONAR</option>
                                    @foreach (var item in ViewBag.EstatusOpurtunidad)
                                    {
                                        if (@ViewBag.Oportunidad.CatEstatusOpurtunidad.Id != item.Id)
                                        {
                                            <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                        }
                                    }
                                </select>
                                <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasEstatusOpurtunidad" aria-controls="offcanvasEstatusOpurtunidad">+</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12" id="DivEstatusFechaCierre" style="display:none;">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Fecha cierre  </label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-calendar"></i>
                                </span>
                                <input type="date" class="form-control" id="Oportunidad_EstatusFechaCierre" placeholder="Nombre" aria-label="" aria-describedby="basic-icon-default-fullname2" onkeyup="Mayus(this);" onchange="ValidaInput('Oportunidad_FechaCierre')" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Observación </label>
                        <textarea class="form-control" id="Oportunidad_Descripcion" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                    <div class="col-lg-12">
                        <br />
                        <p>Coloca el número de confirmación : <strong><span id="Oportunidad_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Clave</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-key"></i>
                                </span>
                                <input type="text" class="form-control" id="Oportunidad_Clave" placeholder="Numero de confirmación" aria-label="" aria-describedby="Oportunidad_Nombre" onkeyup="Mayus(this);" onchange="ValidaInput('Oportunidad_Nombre')" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" id="BtnCancelarOportunidadEstatus" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="ActualizarEstatusOportunidad()">Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA TAREA  -->
<div class="modal fade" id="modalNuevaTarea" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Nueva Tarea</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Tarea_checkbox_Tarea" onclick="ConsultaTareasTarea()" />
                            <label class="form-check-label" for="Tarea_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Tarea" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Tarea_Tarea' class="form-select" aria-label="Tarea_Tarea" onchange="ValidaSelect('Tarea_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <label for="defaultFormControlInput" class="form-label">* Ingresa el título de tu tarea</label>
                        <input type="text" class="form-control" id="Tarea_Titulo" placeholder="Tarea" aria-describedby="Tarea_Titulo" onchange="ValidaInput('Tarea_Titulo')" onkeyup="Mayus(this);" />
                        <div id="defaultFormControlHelp" class="form-text">
                            Ingresa un nombre corto y descriptivo de tu tarea.
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Fecha de vencimiento </label>
                            <select id='Tarea_FechaVencimiento' class="form-select" aria-label="Tarea_FechaVencimiento" onchange="ValidaFechaVencimiento()">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.FechaVencimiento)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                            <input type="date" class="form-control" id="Tarea_FechaVencimiento_Date" aria-label="" aria-describedby="Tarea_FechaVencimiento_Date" onchange="ValidaInput('Tarea_FechaVencimiento_Date')" style="display:none;" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Enviar recordatorio </label>
                            <select id='Tarea_FechaRecordatorio' class="form-select" aria-label="Tarea_FechaRecordatorio" onchange="ValidaFechaRecordatorio()">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Recordatorio)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                            <input type="date" class="form-control" id="Tarea_FechaRecordatorio_Date" aria-label="" aria-describedby="Tarea_FechaRecordatorio_Date" onchange="ValidaInput('Tarea_FechaRecordatorio_Date')" style="display:none;" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo </label>
                            <select id='Tarea_TipoTarea' class="form-select" aria-label="Tarea_TipoTarea" onchange="ValidaSelect('Tarea_TipoTarea')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoTarea)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* ASOCIAR A   </label>
                            <select id='Tarea_Contacto' class="form-select" aria-label="Tarea_Contacto" style="width:100%" onchange="ValidaSelect('Tarea_Contacto')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Usuarios)
                                {
                                    //if (((CRM.Models.Usuario)System.Web.HttpContext.Current.Session["Sesion"]).Id == item.Id)
                                    //{

                                    //}
                                    //else
                                    //{
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper() @item.Persona.ApellidoPaterno.ToUpper() @item.Persona.ApellidoMaterno.ToUpper() ( @if (@item.Persona.Email != null)
                                        {@item.Persona.Email.email.ToLower()} )
                                    </option>
                                    @*}*@
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Prioridad </label>
                            <select id='Tarea_Prioridad' class="form-select" aria-label="Tarea_Prioridad" onchange="ValidaSelect('Tarea_Prioridad')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.Prioridad)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Notas </label>
                        <textarea class="form-control" id="Tarea_Notas" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnCrearTarea()">Crear tarea</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL ACTUALIZAR ESTATUS TAREA-->
<div class="modal fade" id="modalEstatusTarea" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Tarea terminada </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Observación </label>
                        <textarea class="form-control" id="Tarea_Estatus_Descripcion" rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                    <div class="col-lg-12">
                        <br />
                        <p>Coloca el número de confirmación : <strong><span id="Tarea_Clave_Text"></span></strong></p>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label class="form-label" for="basic-icon-default-fullname">* Clave</label>
                            <div class="input-group input-group-merge">
                                <span id="basic-icon-default-fullname2" class="input-group-text">
                                    <i class="bx bx-key"></i>
                                </span>
                                <input type="text" class="form-control" id="Tarea_Clave" placeholder="Numero de confirmación" aria-label="" aria-describedby="Tarea_Clave" onkeyup="Mayus(this);" onchange="ValidaInput('Tarea_Clave')" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" id="DivBTNsEstatusTarea">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="ActualizarEstatusTarea()">Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA NOTA  -->
<div class="modal fade" id="modalNuevaNota" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Nueva Nota</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <label for="exampleFormControlTextarea1" class="form-label">Notas </label>
                        <textarea class="form-control" id="Nota_Notas" placeholder="..." rows="3" onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnCrearNota()">Crear nota</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVO CORREO  -->
<div class="modal fade" id="modalNuevoCorreo" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar correo electrónico</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Correo_checkbox_Tarea" onclick="ConsultaTareasCorreo()" />
                            <label class="form-check-label" for="Correo_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Correo" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Correo_Tarea' class="form-select" aria-label="Correo_Tarea" onchange="ValidaSelect('Correo_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-7">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Correo_Contacto' class="test form-select" aria-label="Correo_Contacto" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper()
                                        @{if (item.Persona.ApellidoPaterno != null)
                                            { @item.Persona.ApellidoPaterno.ToUpper()} }
                                        @{if (item.Persona.ApellidoMaterno != null)
                                            { @item.Persona.ApellidoMaterno.ToUpper()} }
                                        (@item.Persona.Email.email)
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha envió </label>
                            <input class="form-control" type="datetime-local" id="Correo_FechaEnvio" onchange="ValidaInput('Correo_FechaEnvio')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Correo_MensajeCorreo" rows="3" placeholder="Describe el correo ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarCorreo()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA LLAMDA  -->
<div class="modal fade" id="modalNuevaLlamada" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar llamada  </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Llamada_checkbox_Tarea" onclick="ConsultaTareasLlamada()" />
                            <label class="form-check-label" for="Llamada_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Llamada" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Llamada_Tarea' class="form-select" aria-label="Llamada_Tarea" onchange="ValidaSelect('Llamada_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Llamada_Contacto' class="test form-select" aria-label="Llamada_Contacto" onchange="ValidaSelect('Llamada_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper()
                                        @{if (item.Persona.ApellidoPaterno != null)
                                            { @item.Persona.ApellidoPaterno.ToUpper()} }
                                        @{if (item.Persona.ApellidoMaterno != null)
                                            { @item.Persona.ApellidoMaterno.ToUpper()} }
                                        (@item.Persona.Email.email)
                                    </option>
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Resultado de la llamada </label>
                            <select id='Llamada_ResultadoLlamada' class="form-select" aria-label="Llamada_ResultadoLlamada" onchange="ValidaSelect('Llamada_ResultadoLlamada')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.ResultadoLlamada)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Dirección de la llamada </label>
                            <select id='Llamada_DireccionLlamada' class="form-select" aria-label="Llamada_DireccionLlamada" onchange="ValidaSelect('Llamada_DireccionLlamada')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.DireccionLlamada)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha que se realizó la llamada </label>
                            <input class="form-control" type="datetime-local" id="Llamada_FechaLlamada" onchange="ValidaInput('Llamada_FechaLlamada')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Llamada_Descripcion" rows="3" placeholder="Describe la llamada ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarLlamada()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVA REUNION  -->
<div class="modal fade" id="modalNuevaReunion" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar reunión  </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Reunion_checkbox_Tarea" onclick="ConsultaTareasReunion()" />
                            <label class="form-check-label" for="Reunion_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Reunion" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Reunion_Tarea' class="form-select" aria-label="Reunion_Tarea" onchange="ValidaSelect('Reunion_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Asistentes </label>
                            <select id='Reunion_Contacto' class="test form-select" aria-label="Reunion_Contacto" onchange="ValidaSelect('Reunion_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper()
                                        @{if (item.Persona.ApellidoPaterno != null)
                                            { @item.Persona.ApellidoPaterno.ToUpper()} }
                                        @{if (item.Persona.ApellidoMaterno != null)
                                            { @item.Persona.ApellidoMaterno.ToUpper()} }
                                        (@item.Persona.Email.email)
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha  </label>
                            <input class="form-control" type="datetime-local" id="Reunion_Fecha" onchange="ValidaInput('Reunion_Fecha')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Resultado de la reunion </label>
                            <select id='Reunion_ResultadoReunion' class="form-select" aria-label="Reunion_ResultadoReunion" onchange="ValidaSelect('Reunion_ResultadoReunion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.ResultadoReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Duración </label>
                            <select id='Reunion_Duracion' class="form-select" aria-label="Reunion_Duracion" onchange="ValidaSelect('Reunion_Duracion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.DuracionReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo de reunión </label>
                            <select id='Reunion_TipoReunion' class="form-select" aria-label="Reunion_TipoReunion" onchange="ValidaSelect('Reunion_TipoReunion')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoReunion)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Reunion_Descripcion" rows="3" placeholder="Describe la reunion ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarReunion()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>

<!-- MODAL NUEVO MENSAJE  -->
<div class="modal fade" id="modalNuevoMensaje" data-bs-backdrop="static" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backDropModalTitle">Registrar mensaje</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="Mensaje_checkbox_Tarea" onclick="ConsultaTareasMensaje()" />
                            <label class="form-check-label" for="Mensaje_checkbox_Tarea">Asociar a una tarea asignada </label>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ListaTareaUsuario_Mensaje" style="display:none;">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tarea </label>
                            <select id='Mensaje_Tarea' class="form-select" aria-label="Mensaje_Tarea" onchange="ValidaSelect('Mensaje_Tarea')">
                                <option value="0" selected>SELECCIONAR</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Contacto </label>
                            <select id='Mensaje_Contacto' class="test form-select" aria-label="Mensaje_Contacto" onchange="ValidaSelect('Mensaje_Contacto')" multiple="multiple">
                                @foreach (var item in ViewBag.Contactos)
                                {
                                    <option value="@item.Persona.Id">
                                        @item.Persona.Nombre.ToUpper()
                                        @{if (item.Persona.ApellidoPaterno != null)
                                            { @item.Persona.ApellidoPaterno.ToUpper()} }
                                        @{if (item.Persona.ApellidoMaterno != null)
                                            { @item.Persona.ApellidoMaterno.ToUpper()} }
                                        (@item.Persona.Email.email)
                                    </option>
                                }
                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-3">
                            <label for="exampleFormControlSelect1" class="form-label">* Tipo Mensaje </label>
                            <select id='Mensaje_TipoMensaje' class="form-select" aria-label="Mensaje_TipoMensaje" onchange="ValidaSelect('Mensaje_TipoMensaje')">
                                <option value="0" selected>SELECCIONAR</option>
                                @foreach (var item in ViewBag.TipoMensaje)
                                {
                                    <option value="@item.Id">@item.Nombre.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            <label for="html5-datetime-local-input" class="form-label">* Fecha envió </label>
                            <input class="form-control" type="datetime-local" id="Mensaje_FechaEnvio" onchange="ValidaInput('Mensaje_FechaEnvio')" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea class="form-control" id="Mensaje_Descripcion" rows="3" placeholder="Describe el mensaje  ..." onkeyup="Mayus(this);"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="BtnGuardarOportunidadEstatus" onclick="BtnRegistrarMensaje()">Registrar Actividad</button>
            </div>
        </form>
    </div>
</div>









<script src="https://cdn.jsdelivr.net/npm/js-confetti@0.8.0/dist/js-confetti.browser.js"></script>
<script>
    const jsConfetti = new JSConfetti();
    document
        .querySelector("#congrats")
        .addEventListener("click", (e) => {
            jsConfetti.addConfetti();
        });
</script>
<script>
    (function ($) {
        $(function () {
            window.fs_test = $('.test').fSelect();
        });
    })(jQuery);
</script>

<script>
    function FormularioProgreso() {
        $("#FormProgreso").show();
        $("#FormPrincipal").css("display", "none");

        var posicion = $("#FormProgreso").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>

<script>
    function BtnActualizarImporfacion() {
        if (ValidaOportunidad()) {

            var CatPrioridad = new Object();
            CatPrioridad.Id = $("#Oportunidad_Prioridad option:selected").val();

            var CatTipoOportunidad = new Object();
            CatTipoOportunidad.Id = $("#Oportunidad_TipoOportunidad option:selected").val();

            var CatUnidadNegocio = new Object();
            CatUnidadNegocio.Id = $("#Oportunidad_UnidadNegocio option:selected").val();

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;
            Oportunidad.CatPrioridad = CatPrioridad;
            Oportunidad.CatTipoOportunidad = CatTipoOportunidad;
            Oportunidad.CatUnidadNegocio = CatUnidadNegocio;
            Oportunidad.Nombre = $('#Oportunidad_Nombre').val();
            Oportunidad.Descripcion = $('#Oportunidad_Descripcion').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Oportunidad_Actualizar", "Oportunidad")",
                async: false,
                data: JSON.stringify(Oportunidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id > 0) {
                        swal({
                            title: "Oportunidad actualizada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });
                    }
                },
                error: function () {
                    AlertDanger("Problemas al actualizar ", "Oportunidad no actualizada.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidaOportunidad() {
        var result = false;

        $('#Oportunidad_Nombre').css("border", "1px solid #f44336");
        $('#Oportunidad_Nombre').css("border-left", "none");

        $('#select2-Oportunidad_UnidadNegocio-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_TipoOportunidad-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_Prioridad-container').css("border", "1px solid #f44336");

        if ($('#Oportunidad_Nombre').val().length > 0) {
            $('#Oportunidad_Nombre').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Nombre').css("border-left", "none");
        }

        if ($("#Oportunidad_UnidadNegocio option:selected").val() > 0) {
            $('#select2-Oportunidad_UnidadNegocio-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_TipoOportunidad option:selected").val() > 0) {
            $('#select2-Oportunidad_TipoOportunidad-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_Prioridad option:selected").val() > 0) {
            $('#select2-Oportunidad_Prioridad-container').css("border", "0px solid #d9dee3");
        }

        if ($('#Oportunidad_Nombre').val().length > 0) {
            if ($("#Oportunidad_UnidadNegocio option:selected").val() > 0) {
                if ($("#Oportunidad_TipoOportunidad option:selected").val() > 0) {
                    if ($("#Oportunidad_Prioridad option:selected").val() > 0) {
                        result = true;
                    }
                }
            }
        }

        return result;
    }

    function OcultarInformacion() {
        $("#FormInformacion").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function FormularioInformacion() {
        $("#FormInformacion").show();
        $("#FormPrincipal").css("display", "none");

        $("#Oportunidad_UnidadNegocio").select2();
        $("#Oportunidad_TipoOportunidad").select2();
        $("#Oportunidad_Prioridad").select2();

        var posicion = $("#FormInformacion").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>



<script>
    function ConsultaTareasTarea() {
        if ($("#Tarea_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Tarea").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 6;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Tarea_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Tarea_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Tarea_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Tarea").css("display", "none");
        }
    }

    function ConsultaTareasMensaje() {
        if ($("#Mensaje_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Mensaje").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 4;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Mensaje_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Mensaje_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Mensaje_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Mensaje").css("display", "none");
        }
    }

    function ConsultaTareasReunion() {
        if ($("#Reunion_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Reunion").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 5;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Reunion_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Reunion_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Reunion_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Reunion").css("display", "none");
        }
    }

    function ConsultaTareasLlamada() {
         if ($("#Llamada_checkbox_Tarea").is(':checked')) {

             $("#ListaTareaUsuario_Llamada").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 1;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Llamada_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Llamada_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Llamada_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
             $("#ListaTareaUsuario_Llamada").css("display", "none");
        }
    }

    function ConsultaTareasCorreo() {
        if ($("#Correo_checkbox_Tarea").is(':checked')) {

            $("#ListaTareaUsuario_Correo").show();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = 2;

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var NuevaTarea = new Object();
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Seleccionar_Usuairo_Entidad_IdTipoTarea", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#Correo_Tarea").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Correo_Tarea").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Titulo.toUpperCase());
                        option.val(this.Id);

                        $("#Correo_Tarea").append(option);
                    });

                },
                error: function () {

                }
            });

        } else {
            $("#ListaTareaUsuario_Correo").css("display", "none");
        }
    }
</script>

<script>
    function BtnRegistrarMensaje() {
        if (ValidarNuevaMensaje()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var MensajeEntidad = new Object();
            MensajeEntidad.CatEntidad = CatEntidad;
            MensajeEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            if ($("#Mensaje_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Mensaje_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var MensajePersona = [];
            $("#Mensaje_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                MensajePersona.push({
                    "Persona": Persona,
                });
            });

            var CatTipoMensaje = new Object();
            CatTipoMensaje.Id = $("#Mensaje_TipoMensaje option:selected").val();

            var Mensaje = new Object();
            Mensaje.CatTipoMensaje = CatTipoMensaje;
            Mensaje.Descripcion = $('#Mensaje_Descripcion').val();
            Mensaje.Fecha = $('#Mensaje_FechaEnvio').val();

            var NuevaMensaje = new Object();
            NuevaMensaje.Tarea = Tarea;
            NuevaMensaje.MensajeEntidad = MensajeEntidad;
            NuevaMensaje.Mensaje = Mensaje;
            NuevaMensaje.MensajePersona = MensajePersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Mensaje_Agregar", "Mensaje")",
                async: false,
                data: JSON.stringify(NuevaMensaje),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nuevo mensaje registrado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Mensaje no registrado ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Mensaje no registardo ! ", "Intentelo mas tarde.");
                }
            });
        }
    }

    function ValidarNuevaMensaje() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Mensaje_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Mensaje_checkbox_Tarea").is(':checked')) {
            if ($("#Mensaje_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }


        $('#Mensaje_Tarea').css("border", "1px solid #f44336");
        $('#Mensaje_TipoMensaje').css("border", "1px solid #f44336");
        $('#Mensaje_FechaEnvio').css("border", "1px solid #f44336");


        if ($("#Mensaje_Tarea option:selected").val() > 0) {
            $('#Mensaje_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($("#Mensaje_TipoMensaje option:selected").val() > 0) {
            $('#Mensaje_TipoMensaje').css("border", "1px solid #d9dee3");
        }

        if ($('#Mensaje_FechaEnvio').val().length > 0) {
            $('#Mensaje_FechaEnvio').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Mensaje_TipoMensaje option:selected").val() > 0) {
                    if ($('#Mensaje_FechaEnvio').val().length > 0) {
                        result = true;
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }

        return result;
    }
</script>

<script>
    function BtnRegistrarReunion() {
        if (ValidarNuevaReunion()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var ReunionEntidad = new Object();
            ReunionEntidad.CatEntidad = CatEntidad;
            ReunionEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            if ($("#Reunion_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Reunion_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var ReunionPersona = [];
            $("#Reunion_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                ReunionPersona.push({
                    "Persona": Persona,
                });
            });

            var CatResultadoReunion = new Object();
            CatResultadoReunion.Id = $("#Reunion_ResultadoReunion option:selected").val();

            var CatDuracionReunion = new Object();
            CatDuracionReunion.Id = $("#Reunion_Duracion option:selected").val();

            var CatTipoReunion = new Object();
            CatTipoReunion.Id = $("#Reunion_TipoReunion option:selected").val();

            var Reunion = new Object();
            Reunion.CatResultadoReunion = CatResultadoReunion;
            Reunion.CatDuracionReunion = CatDuracionReunion;
            Reunion.CatTipoReunion = CatTipoReunion;
            Reunion.Descripcion = $('#Reunion_Descripcion').val();
            Reunion.Fecha = $('#Reunion_Fecha').val();

            var NuevaReunion = new Object();
            NuevaReunion.Tarea = Tarea;
            NuevaReunion.ReunionEntidad = ReunionEntidad;
            NuevaReunion.Reunion = Reunion;
            NuevaReunion.ReunionPersona = ReunionPersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Reunion_Agregar", "Reunion")",
                async: false,
                data: JSON.stringify(NuevaReunion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nueva reunión registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Reunión no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Reunión no registarda ! ", "Intentelo mas tarde.");
                }
            });

        }
    }

    function ValidarNuevaReunion() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Reunion_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Reunion_checkbox_Tarea").is(':checked')) {
            if ($("#Reunion_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        $('#Reunion_Tarea').css("border", "1px solid #f44336");
        $('#Reunion_Fecha').css("border", "1px solid #f44336");
        $('#Reunion_ResultadoReunion').css("border", "1px solid #f44336");
        $('#Reunion_Duracion').css("border", "1px solid #f44336");
        $('#Reunion_TipoReunion').css("border", "1px solid #f44336");

        if ($("#Reunion_Tarea option:selected").val() > 0) {
            $('#Reunion_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($('#Reunion_Fecha').val().length > 0) {
            $('#Reunion_Fecha').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_ResultadoReunion option:selected").val() > 0) {
            $('#Reunion_ResultadoReunion').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_Duracion option:selected").val() > 0) {
            $('#Reunion_Duracion').css("border", "1px solid #d9dee3");
        }

        if ($("#Reunion_TipoReunion option:selected").val() > 0) {
            $('#Reunion_TipoReunion').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Reunion_ResultadoReunion option:selected").val() > 0) {
                    if ($("#Reunion_Duracion option:selected").val() > 0) {
                        if ($("#Reunion_TipoReunion option:selected").val() > 0) {
                            if ($('#Reunion_Fecha').val().length > 0) {
                                result = true;
                            } else { AlertIncompleto(); }
                        } else { AlertIncompleto(); }
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }

        return result;
    }
</script>

<script>
    function BtnRegistrarLlamada() {
        if (ValidarNuevaLlamada()) {

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var LlamadaEntidad = new Object();
            LlamadaEntidad.CatEntidad = CatEntidad;
            LlamadaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            if ($("#Llamada_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Llamada_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var LlamadaPersona = [];
            $("#Llamada_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                LlamadaPersona.push({
                    "Persona": Persona,
                });
            });

            var CatResultadoLlamada = new Object();
            CatResultadoLlamada.Id = $("#Llamada_ResultadoLlamada option:selected").val();

            var CatDireccionLlamada = new Object();
            CatDireccionLlamada.Id = $("#Llamada_DireccionLlamada option:selected").val();


            var Llamada = new Object();
            Llamada.CatResultadoLlamada = CatResultadoLlamada;
            Llamada.CatDireccionLlamada = CatDireccionLlamada;
            Llamada.Descripcion = $('#Llamada_Descripcion').val();
            Llamada.Fecha = $('#Llamada_FechaLlamada').val();

            var NuevaLlamada = new Object();
            NuevaLlamada.Tarea = Tarea;
            NuevaLlamada.LlamadaEntidad = LlamadaEntidad;
            NuevaLlamada.Llamada = Llamada;
            NuevaLlamada.LlamadaPersona = LlamadaPersona;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Llamada_Agregar", "Llamada")",
                async: false,
                data: JSON.stringify(NuevaLlamada),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nueva llamada registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Llamada no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Llamada no registarda ! ", "Intentelo mas tarde.");
                }
            });

        }
    }

    function ValidarNuevaLlamada() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Llamada_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        if ($("#Llamada_checkbox_Tarea").is(':checked')) {
            if ($("#Llamada_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        $('#Llamada_Tarea').css("border", "1px solid #f44336");
        $('#Llamada_ResultadoLlamada').css("border", "1px solid #f44336");
        $('#Llamada_DireccionLlamada').css("border", "1px solid #f44336");
        $('#Llamada_FechaLlamada').css("border", "1px solid #f44336");

        if ($("#Llamada_Tarea option:selected").val() > 0) {
            $('#Llamada_Tarea').css("border", "1px solid #d9dee3");
        }

        if ($("#Llamada_ResultadoLlamada option:selected").val() > 0) {
            $('#Llamada_ResultadoLlamada').css("border", "1px solid #d9dee3");
        }

        if ($("#Llamada_DireccionLlamada option:selected").val() > 0) {
            $('#Llamada_DireccionLlamada').css("border", "1px solid #d9dee3");
        }

        if ($('#Llamada_FechaLlamada').val().length > 0) {
            $('#Llamada_FechaLlamada').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($("#Llamada_ResultadoLlamada option:selected").val() > 0) {
                    if ($("#Llamada_DireccionLlamada option:selected").val() > 0) {
                        if ($('#Llamada_FechaLlamada').val().length > 0) {
                            result = true;
                        } else { AlertIncompleto(); }
                    } else { AlertIncompleto(); }
                } else { AlertIncompleto(); }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos.");
            }
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una tarea.");
        }
        return result;
    }
</script>

<script>
    function BtnRegistrarCorreo() {
        if (ValidarNuevoCorreo()) {


            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var CorreoEntidad = new Object();
            CorreoEntidad.CatEntidad = CatEntidad;
            CorreoEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var Correo = new Object();
            Correo.Mensaje = $('#Correo_MensajeCorreo').val();
            Correo.FechaEnvio = $('#Correo_FechaEnvio').val();

            var Tarea = new Object();
            if ($("#Correo_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Correo_Tarea option:selected").val();
            } else {
                Tarea.Id = null;
            }

            var CorreoPersona = [];
            $("#Correo_Contacto :selected").each(function () {
                var Persona = new Object();
                Persona.Id = this.value;

                CorreoPersona.push({
                    "Persona": Persona,
                });
            });

            var NuevoCorreo = new Object();
            NuevoCorreo.Tarea = Tarea;
            NuevoCorreo.CorreoEntidad = CorreoEntidad;
            NuevoCorreo.Correo = Correo;
            NuevoCorreo.CorreoPersona = CorreoPersona;

             $.ajax({
                type: "POST",
                url: "@Url.Action("CorreoElectronico_Agregar", "CorreoElectronico")",
                async: false,
                 data: JSON.stringify(NuevoCorreo),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Id > 0) {
                        swal({
                            title: "Nuevo correo electrónico  registrado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Correo electrónico  no registrado ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Correo electrónico  no registardo ! ", "Intentelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarNuevoCorreo() {
        var result = false;
        var AsociarTarea = false;
        var Contactos = [];

        $("#Correo_Contacto :selected").each(function () {
            Contactos.push(this.value);
        });

        $('#Correo_Tarea').css("border", "1px solid #f44336");
        $("#SelectContenido").css("border", "1px solid #f44336");
        $('#Correo_FechaEnvio').css("border", "1px solid #f44336");

        if ($("#Correo_checkbox_Tarea").is(':checked')) {
            if ($("#Correo_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }

        if ($("#Correo_Tarea option:selected").val() > 0) {
            $('#Correo_Tarea').css("border", "1px solid #d9dee3");
        }

        if (Contactos.length > 0) {
            $("#SelectContenido").css("border", "1px solid #d9dee3");
        }

        if ($('#Correo_FechaEnvio').val().length > 0) {
            $('#Correo_FechaEnvio').css("border", "1px solid #d9dee3");
        }

        if (AsociarTarea) {
            if (Contactos.length > 0) {
                if ($('#Correo_FechaEnvio').val().length > 0) {
                    result = true;
                }
            } else {
                AlertPrimary("Formulario incompleto ! ", "Selecciona uno o mas contactos .");
            }
        }

        return result;
    }

</script>

<script>
    function BtnCrearNota(){
        if (ValidarNuevaNota()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var Nota = new Object();
            Nota.nota = $('#Nota_Notas').val();

            var NotaEntidad = new Object();
            NotaEntidad.Nota = Nota;
            NotaEntidad.CatEntidad = CatEntidad;
            NotaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Nota_Agregar", "Notas")",
                async: false,
                data: JSON.stringify(NotaEntidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Nueva nota registrada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Nota no registrada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Nota no registarda ! ", "Intentelo mas tarde.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function ValidarNuevaNota() {
        var result = false;

        $('#Nota_Notas').css("border", "1px solid #f44336");


        if ($('#Nota_Notas').val().length > 0) {
            $('#Nota_Notas').css("border", "1px solid #d9dee3");
        }

        if ($('#Nota_Notas').val().length > 0) {
            result = true;
        }

        return result;
    }
</script>

<script>
    function ActualizarEstatusTarea(Id) {
        if (ValidarEstatusTarea()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad =  @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            Tarea.Id = Id;
            Tarea.Notas = $('#Tarea_Estatus_Descripcion').val();

            var NuevaTarea = new Object();
            NuevaTarea.TareaEntidad = TareaEntidad;
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.Clave = $('#Tarea_Clave').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Actulizar_Terminar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Tarea finalizada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Tarea no actulizada ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ActualizarEstatusTareaCancelar(Id) {
        if (ValidarEstatusTarea()) {
            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad =  @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            Tarea.Id = Id;
            Tarea.Notas = $('#Tarea_Estatus_Descripcion').val();

            var NuevaTarea = new Object();
            NuevaTarea.TareaEntidad = TareaEntidad;
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.Clave = $('#Tarea_Clave').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Actulizar_Cancelar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Tarea cancelada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Tarea no actulizada ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarEstatusTarea() {
        var result = false;

        $('#Tarea_Clave').css("border", "1px solid #f44336");
        $('#Tarea_Clave').css("border-left", "none");

        if ($('#Tarea_Clave').val().length > 0) {
            $('#Tarea_Clave').css("border", "1px solid #d9dee3");
            $('#Tarea_Clave').css("border-left", "none");
        }

        if ($('#Tarea_Clave').val().length > 0) {
            result = true;
        }

        return result;
    }

    function AbrirFormCompletarTarea(Id) {
        var ClaveMovimiento = new Object();
        ClaveMovimiento.Movimiento = "Actualizar";
        ClaveMovimiento.Observaciones = "Actualizar estatus tarea";

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClaveMovimiento_Agregar", "ClaveMovimiento")",
            async: false,
            data: JSON.stringify(ClaveMovimiento),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                /*console.log(data);*/
                if (data.Id > 0) {
                    $("#modalEstatusTarea").modal("show");
                    $('#Tarea_Clave_Text').text(data.Clave);

                    //var html = "<button type='button' class='btn btn-outline-secondary' data-bs-dismiss='modal'>" +
                    //            "    Cerrar" +
                    //            "</button>" +
                    var html = "<button type='button' class='btn btn-primary' id='BtnGuardarOportunidadEstatus' onclick='ActualizarEstatusTarea(" + Id + ")'>" +
                            "<span class='tf-icons bx bx-like'></span>&nbsp; Terminar tarea</button> " +
                            "<button type='button' class='btn btn-danger' id='BtnGuardarOportunidadEstatus' onclick='ActualizarEstatusTareaCancelar(" + Id + ")'> " +
                                "<span class='tf-icons bx bx-trash'></span>&nbsp; Eliminar tarea " +
                            "</button > ";
                    $('#DivBTNsEstatusTarea').html(html);

                } else if (data.Id == 0) {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            },
            error: function () {
                AlertDanger("Permiso denegado ! ", "Actualización no valida .");
            }
        });
    }

</script>
<script>

    function BtnCrearTarea() {
        if (ValidarTarea()) {

            var CatFechaVencimiento = new Object();
            CatFechaVencimiento.Id = $("#Tarea_FechaVencimiento option:selected").val();

            var CatRecordatorio = new Object();
            CatRecordatorio.Id = $("#Tarea_FechaRecordatorio option:selected").val();

            var CatTipoTarea = new Object();
            CatTipoTarea.Id = $("#Tarea_TipoTarea option:selected").val();

            var CatPrioridad = new Object();
            CatPrioridad.Id = $("#Tarea_Prioridad option:selected").val()

            var Persona = new Object();
            Persona.Id = $("#Tarea_Contacto option:selected").val();

            var TareaPersona = new Object();
            TareaPersona.CatTipoTarea = CatTipoTarea;
            TareaPersona.CatPrioridad = CatPrioridad;
            TareaPersona.Persona = Persona;

            var CatEntidad = new Object();
            CatEntidad.Id = 3;

            var TareaEntidad = new Object();
            TareaEntidad.CatEntidad = CatEntidad;
            TareaEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

            var Tarea = new Object();
            Tarea.Titulo = $('#Tarea_Titulo').val();
            Tarea.CatFechaVencimiento = CatFechaVencimiento;
            Tarea.FechaVencimiento = $('#Tarea_FechaVencimiento_Date').val();
            Tarea.CatRecordatorio = CatRecordatorio;
            Tarea.FechaRecordatorio = $('#Tarea_FechaRecordatorio_Date').val();
            Tarea.Notas = $('#Tarea_Notas').val();

            if ($("#Tarea_checkbox_Tarea").is(':checked')) {
                Tarea.Id = $("#Tarea_Tarea option:selected").val();
            }


            var NuevaTarea = new Object();
            NuevaTarea.Tarea = Tarea;
            NuevaTarea.TareaPersona = TareaPersona;
            NuevaTarea.TareaEntidad = TareaEntidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Tarea_Agregar", "Tarea")",
                async: false,
                data: JSON.stringify(NuevaTarea),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Nueva tarea asignada !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else  {
                        AlertDanger("Tarea no creada ! ", "Verifica tu información");
                    }
                },
                error: function () {
                    AlertDanger("Tarea no creada ! ", "Intentelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidarTarea() {
        var result = false;
        var AsociarTarea = false;
        var FechaVencimiento = false;
        var IdFechaVencimiento = $("#Tarea_FechaVencimiento option:selected").val();
        var FechaRecordatorio = false;
        var IdFechaRecordatorio = $("#Tarea_FechaRecordatorio option:selected").val();

        $('#Tarea_Titulo').css("border", "1px solid #f44336");
        $('#Tarea_FechaVencimiento').css("border", "1px solid #f44336");
        $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #f44336");
        $('#Tarea_FechaRecordatorio').css("border", "1px solid #f44336");
        $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #f44336");
        $('#Tarea_TipoTarea').css("border", "1px solid #f44336");
        $('#Tarea_Contacto').css("border", "1px solid #f44336");
        $('#Tarea_Prioridad').css("border", "1px solid #f44336");
        $('#select2-Tarea_Contacto-container').css("border", "1px solid #f44336");
        $('#Tarea_Tarea').css("border", "1px solid #f44336");

        if ($('#Tarea_Titulo').val().length > 0) {
            $('#Tarea_Titulo').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_FechaVencimiento option:selected").val() > 0) {
            $('#Tarea_FechaVencimiento').css("border", "1px solid #d9dee3");
        }
        if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
            $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #d9dee3");
        }

        if ($("#Tarea_FechaRecordatorio option:selected").val() > 0) {
            $('#Tarea_FechaRecordatorio').css("border", "1px solid #d9dee3");
        }
        if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
            $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_TipoTarea option:selected").val() > 0) {
            $('#Tarea_TipoTarea').css("border", "1px solid #d9dee3");
        }
        if ($("#Tarea_Contacto option:selected").val() > 0) {
            $('#Tarea_Contacto').css("border", "1px solid #d9dee3");
            $('#select2-Tarea_Contacto-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Tarea_Prioridad option:selected").val() > 0) {
            $('#Tarea_Prioridad').css("border", "1px solid #d9dee3");
        }

        if ($("#Tarea_Tarea option:selected").val() > 0) {
            $('#Tarea_Tarea').css("border", "1px solid #d9dee3");
        }


        if (IdFechaVencimiento == 12) {
            if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
                FechaVencimiento = true;
            }
        } else {
            FechaVencimiento = true;
        }

        if (IdFechaRecordatorio == 7) {
            if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
                FechaRecordatorio = true;
            }
        } else {
            FechaRecordatorio = true;
        }

        if ($("#Tarea_checkbox_Tarea").is(':checked')) {
            if ($("#Tarea_Tarea option:selected").val() > 0) {
                AsociarTarea = true;
            }
        } else {
            AsociarTarea = true;
        }



        if ($('#Tarea_Titulo').val().length > 0) {
            if (FechaVencimiento) {
                if (FechaRecordatorio) {
                    if ($("#Tarea_TipoTarea option:selected").val() > 0) {
                        if ($("#Tarea_Prioridad option:selected").val() > 0) {
                            if (AsociarTarea) {
                                result = true;
                            }
                        }
                    }
                }
            }
        }

        return result;
    }
</script>

<script>

    function ValidaFechaVencimiento() {
        var IdFecha = $("#Tarea_FechaVencimiento option:selected").val();

        if (IdFecha == 12) {
            $("#Tarea_FechaVencimiento_Date").show();
            $("#Tarea_FechaVencimiento").css("display", "none");
        } else {
            $("#Tarea_FechaVencimiento").show();
            $("#Tarea_FechaVencimiento_Date").css("display", "none");
        }

        if (IdFecha > 0) {
            if ($('#Tarea_FechaVencimiento').val().length > 0) {
                $('#Tarea_FechaVencimiento').css("border", "1px solid #d9dee3");
            }
        }

        if ($('#Tarea_FechaVencimiento_Date').val().length > 0) {
            $('#Tarea_FechaVencimiento_Date').css("border", "1px solid #d9dee3");
        }

    }

    function ValidaFechaRecordatorio() {
        var IdFecha = $("#Tarea_FechaRecordatorio option:selected").val();

        if (IdFecha == 7) {
            $("#Tarea_FechaRecordatorio_Date").show();
            $("#Tarea_FechaRecordatorio").css("display", "none");
        } else {
            $("#Tarea_FechaRecordatorio").show();
            $("#Tarea_FechaRecordatorio_Date").css("display", "none");
        }

        if (IdFecha > 0) {
            if ($('#Tarea_FechaRecordatorio').val().length > 0) {
                $('#Tarea_FechaRecordatorio').css("border", "1px solid #d9dee3");
            }
        }

        if ($('#Tarea_FechaRecordatorio_Date').val().length > 0) {
            $('#Tarea_FechaRecordatorio_Date').css("border", "1px solid #d9dee3");
        }

    }

</script>

<script>
    function ValidaEstatusOpurtunidad() {

        var IdEstaus = $("#Oportunidad_EstatusOpurtunidad option:selected").val();

        if (IdEstaus == 1) {
             $("#DivEstatusFechaCierre").show();
        } else {
            $("#DivEstatusFechaCierre").css("display", "none");
        }

    }

    function ActualizarEstatusOportunidad() {
        if (ValidarEstatusOportunidad()) {

            var CatEstatusOpurtunidad = new Object();
            CatEstatusOpurtunidad.Id = $("#Oportunidad_EstatusOpurtunidad option:selected").val();

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;
            Oportunidad.CatEstatusOpurtunidad = CatEstatusOpurtunidad;
            Oportunidad.Descripcion = $('#Oportunidad_Descripcion').val();
            Oportunidad.Clave = $('#Oportunidad_Clave').val();
            Oportunidad.FechaCierre = $('#Oportunidad_EstatusFechaCierre').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Oportunidad_Actulizar_Estatus", "Oportunidad")",
                async: false,
                data: JSON.stringify(Oportunidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Oportunidad Actulizada!",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Oportunidad no actulizada ! ", "No es posible actulizar el estatus.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function ValidarEstatusOportunidad() {
        var result = false;
        var estatus = false;
        var IdEstaus = $("#Oportunidad_EstatusOpurtunidad option:selected").val();

        $('#Oportunidad_EstatusOpurtunidad').css("border", "1px solid #f44336");

        $('#Oportunidad_Clave').css("border", "1px solid #f44336");
        $('#Oportunidad_Clave').css("border-left", "none");

        $('#Oportunidad_EstatusFechaCierre').css("border", "1px solid #f44336");
        $('#Oportunidad_EstatusFechaCierre').css("border-left", "none");


        if ($("#Oportunidad_EstatusOpurtunidad option:selected").val() > 0) {
            $('#Oportunidad_EstatusOpurtunidad').css("border", "1px solid #d9dee3");
        }

        if ($('#Oportunidad_Clave').val().length > 0) {
            $('#Oportunidad_Clave').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Clave').css("border-left", "none");
        }

        if ($('#Oportunidad_EstatusFechaCierre').val().length > 0) {
            $('#Oportunidad_EstatusFechaCierre').css("border", "1px solid #d9dee3");
            $('#Oportunidad_EstatusFechaCierre').css("border-left", "none");
        }

        if (IdEstaus == 1) {
            if ($('#Oportunidad_EstatusFechaCierre').val().length > 0) {
                estatus = true;
            }
        } else {
            estatus = true;
        }

        if ($("#Oportunidad_EstatusOpurtunidad option:selected").val() > 0) {
            if ($('#Oportunidad_Clave').val().length > 0) {
                if (estatus) {
                    result = true;
                }
            }
        }

        return result;
    }

    function BtnAbrirActualizarEstatus() {

        var ClaveMovimiento = new Object();
        ClaveMovimiento.Movimiento = "Actualizar";
        ClaveMovimiento.Observaciones = "Actualizar estatus oportunidad";

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClaveMovimiento_Agregar", "ClaveMovimiento")",
            async: false,
            data: JSON.stringify(ClaveMovimiento),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
     /*           console.log(data);*/
                if (data.Id > 0) {
                    $("#modalEstatusOportunidad").modal("show");
                    $('#Oportunidad_Clave_Text').text(data.Clave);
                } else if (data.Id == 0) {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            },
            error: function () {
                AlertDanger("Permiso denegado ! ", "Actualización no valida .");
            }
        });
    }
</script>

<script>
    function ActualizarFechaCierreOportunidad() {
        if (ValidarFechaCierreOportunidad()) {

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;
            Oportunidad.FechaCierre = $('#Oportunidad_FechaCierre').val();
            Oportunidad.Clave = $('#OportunidadFechaCierre_Clave').val();
            Oportunidad.Descripcion = $('#OportunidadFechaCierre_Descripcion').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Oportunidad_Actulizar_FechaCierre", "Oportunidad")",
                async: false,
                data: JSON.stringify(Oportunidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data.Id > 0) {
                        swal({
                            title: "Oportunidad Actulizada, nueva fecha de cierre!",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                    break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertDanger("Clave denegada ! ", "Clave no valida, verificala.");
                    } else if (data.Id == -1) {
                        AlertDanger("Oportunidad no actulizada ! ", "No es posible actulizar la fecha cierre.");
                    }
                },
                error: function () {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidarFechaCierreOportunidad() {

        var result = false;

        $('#Oportunidad_FechaCierre').css("border", "1px solid #f44336");
        $('#Oportunidad_FechaCierre').css("border-left", "none");

        $('#OportunidadFechaCierre_Clave').css("border", "1px solid #f44336");
        $('#OportunidadFechaCierre_Clave').css("border-left", "none");

        if ($('#Oportunidad_FechaCierre').val().length > 0) {
            $('#Oportunidad_FechaCierre').css("border", "1px solid #d9dee3");
            $('#Oportunidad_FechaCierre').css("border-left", "none");
        }

        if ($('#OportunidadFechaCierre_Clave').val().length > 0) {
            $('#OportunidadFechaCierre_Clave').css("border", "1px solid #d9dee3");
            $('#OportunidadFechaCierre_Clave').css("border-left", "none");
        }

        if ($('#Oportunidad_FechaCierre').val().length > 0) {
            if ($('#OportunidadFechaCierre_Clave').val().length > 0) {
                result = true;
            }
        }

        return result;
    }

    function BtnAbrirActualizarFecha() {
        var ClaveMovimiento = new Object();
        ClaveMovimiento.Movimiento = "Actualizar";
        ClaveMovimiento.Observaciones = "Actualizar fecha cierre de oportunidad";

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClaveMovimiento_Agregar", "ClaveMovimiento")",
            async: false,
            data: JSON.stringify(ClaveMovimiento),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Id > 0) {
                    $("#modalFechaCierreOportunidad").modal("show");
                    $('#OportunidadFechaCierre_Clave_Text').text(data.Clave);
                } else if (data.Id == 0) {
                    AlertDanger("Permiso denegado ! ", "Actualización no valida .");
                }
            },
            error: function () {
                AlertDanger("Permiso denegado ! ", "Actualización no valida .");
            }
        });
    }
</script>

<script>
    $(document).ready(function () {
        CargaInformacionContacto();
        CargaInformacionEmpresa();
        CargaInformacionProducto();
        CargaInformacionImporte();
        CargaInformacionEtapasTareas();
        CargaInformacionArchvos();

        $("#Tarea_Contacto").select2({
            dropdownParent: $("#modalNuevaTarea")
        });
    });

    function OcultaFormularios() {
        $("#FormPrincipal").show();
        $("#FormContacto").css("display", "none");
        $("#FormEmpresa").css("display", "none");
        $("#FormProducto").css("display", "none");
        $("#FormImporte").css("display", "none");
        $("#FormProgreso").css("display", "none");
        $("#FormInformacion").css("display", "none");

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);

    }

    function CargaInformacionContacto() {
        $("#FormContacto").css("display", "none");
        $("#FormPrincipal").show();
        $('#Contacto_Contacto option[value="0"]').attr("selected", true);
        $('#Contacto_Rol option[value="0"]').attr("selected", true);

        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadPersona_Seleccionar_IdOportunidad", "OportunidadPersona")",
            async: false,
            data: JSON.stringify(Oportunidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Contactos').text("(" + data.length + ")");
                /* console.log(data); */

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Contacto </th>" +
                                                "<th> Acciones  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            var ApellidoPaterno = "";
                                            if (data[b].Persona.ApellidoPaterno != null) {
                                                ApellidoPaterno = data[b].Persona.ApellidoPaterno;
                                            }
                                            var ApellidoMaterno = "";
                                            if (data[b].Persona.ApellidoMaterno != null) {
                                                ApellidoMaterno = data[b].Persona.ApellidoMaterno;
                                            }

                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i>" + data[b].Persona.Nombre + " " + ApellidoPaterno + " " + ApellidoMaterno + "<br><strong>" + data[b].Persona.Email.email + "</strong><br>" + data[b].CatPersonaOportunidad.Nombre + "</td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='FromEditarContacto(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarContacto(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='MostrarContacto(" + data[b].Persona.Id + ")'>" +
                                                        "<span class='tf-icons bx bx-user'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableContactos").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionEmpresa() {
        $('#Empresa_Empresa option[value="0"]').attr("selected", true);
        $("#FormEmpresa").css("display", "none");
        $("#FormPrincipal").show();

        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadEmpresa_Seleccionar_IdOportunidad", "OportunidadEmpresa")",
            async: false,
            data: JSON.stringify(Oportunidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Empresas').text("(" + data.length + ")");
                $('#TextTituloOportunidadEmpresa').html("EMPRESA: <strong> " + data[0].Empresa.Nombre + "</strong> ");
                $("#TextTituloOportunidadEmpresa").show();
         /*       console.log(data);*/

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Empresa </th>" +
                                                "<th> Editar </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].Empresa.Nombre + "</strong></td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='MostrarEmpresa(" + data[b].Empresa.Id +")'>" +
                                                        "<span class='tf-icons bx bx-buildings'></span>" +
                                                    "</button>" +
                                                "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarEmpresa(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableEmpresas").html(Table);
            },
            error: function () {

            }
        });
    }

    function CargaInformacionProducto() {
        $("#FormProducto").css("display", "none");
        $("#FormPrincipal").show();

        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadProducto_Seleccionar_IdOportunidad", "OportunidadProducto")",
            async: false,
            data: JSON.stringify(Oportunidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Productos').text("(" + data.length + ")");

                var TotalImporteProductos = 0;
                var TotalImporte = 0;
                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Empresa </th>" +
                                                "<th> Cantidad </th>" +
                                                "<th> Importe </th>" +
                                                "<th> Eliminar </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            var Total = data[b].Valor * data[b].TipoCambio;
                                            TotalImporteProductos += Total;
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].CatProducto.Nombre + "</strong></td>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> " + data[b].Item + "</td>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>$ " + Total.toLocaleString('en') + " MXN</strong></td>" +
                                                "<td>" +
                                                    //"<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary'>" +
                                                    //    "<span class='tf-icons bx bx-edit'></span>" +
                                                    //"</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarProdcuto(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableProductos").html(Table);



                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadImporte_Seleccionar_IdOportunidad", "OportunidadImporte")",
                    async: false,
                    data: JSON.stringify(Oportunidad),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {


                        if (data.length > 0) {

                            TotalImporte = data[0].Valor * data[0].TipoCambio;

                        }
                    },
                    error: function () {

                    }
                });

                if (TotalImporteProductos != TotalImporte) {
                    $("#CardProductos").addClass('border border-danger');
                    $("#FooterProductos").html("<small class=' text-danger fw-semibold'> <i class='bx bxs-bell'></i>El importe no es igual a la suma total de productos (rubros).</small>");
                }
            },
            error: function () {
                // CONSULTA EL IMPORTE
                var Oportunidad = new Object();
                Oportunidad.Id = @ViewBag.Oportunidad.Id;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadImporte_Seleccionar_IdOportunidad", "OportunidadImporte")",
                    async: false,
                    data: JSON.stringify(Oportunidad),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {
                            $("#CardProductos").addClass('bg-warning');
                            $("#BtnActividadProducto").removeClass("btn-outline-secondary");
                            $("#BtnActividadProducto").addClass('btn-outline-secondary-negado');
                            $("#BtnAgregarProducto").removeClass("btn-outline-secondary");
                            $("#BtnAgregarProducto").addClass('btn-outline-secondary-negado');
                            $("#FooterProductos").html("<small class=' text-white fw-semibold'> <i class='bx bxs-bell'></i>El importe no es igual a la suma total de productos (rubros).</small>");
                        }
                    },
                    error: function () {

                    }
                });

            }
        });
    }

    function CargaInformacionImporte() {
        $("#FormProducto").css("display", "none");
        $("#FormPrincipal").show();

        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadImporte_Seleccionar_IdOportunidad", "OportunidadImporte")",
            async: false,
            data: JSON.stringify(Oportunidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Importes').text("(" + data.length + ")");
              /*  console.log(data);*/

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Valor </th>" +
                                                "<th> Moneda </th>" +
                                                "<th>  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            var Total = data[b].Valor * data[b].TipoCambio;
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>$ " + Total.toLocaleString('en') + "</strong></td>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> MXN </td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='FromEditarImporte(" + data[b].Id +")'>" +
                                                        "<span class='tf-icons bx bx-edit'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarImporte(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableImportes").html(Table);

                if (data.length > 0) {
                    $("#Titulo_Importe").html("$" + data[0].Valor.toLocaleString('en') + " " + data[0].CatMoneda.Nombre);

                    if (data.length > 1) {
                        var num1 = data[0].Valor * data[0].TipoCambio;
                        var num2 = data[1].Valor * data[1].TipoCambio;
                        var num3 = num1 - num2;
                        if (num1 >= num2) {
                            $("#Titulo_Importe_anterior").html("<i class='bx bx-up-arrow-alt'></i> + $ " + num3.toLocaleString('en') +" ");
                        } else {
                            $("#Titulo_Importe_anterior").html("<i class='bx bx-down-arrow-alt'></i> - $ " + (num3.toLocaleString('en') * -1) + " ");
                        }

                    } else {
                        $("#Titulo_Importe_anterior").html("<i class='bx bx-up-arrow-alt'></i> +0%");
                    }
                }


            },
            error: function () {

            }
        });
    }

    function CargaInformacionEtapasTareas() {
        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadEtapa_Seleccionar_IdOportunidad", "OportunidadEtapa")",
            async: false,
            data: JSON.stringify(Oportunidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                /*alert(data.length);*/
                if (data.length > 0) {
                    var color = 'primary';
                    if (data[0].Fin == 1) {
                        color = 'success';
                        $("#DivContenedorListaTareasFin").show();
                        $("#DivContenedorListaTareas").html("");

                    } else {
                        $("#DivContenedorListaTareasFin").css("display", "none");
                    }

                    // PORCENTAJES
                    var HTMLProgreso = "";
                    var HTMLChecks = "";
                    var porcentaje = data[0].Progreso;
                    
                    var etapa = data[0].CatEtapaOportunidad.Id;
                    

                    $("#h3TextProgreso").html(porcentaje + " %");
                    $("#TextProgreso").html(porcentaje + " %");

                    $("#TitleFromProgreso").html(data[0].CatEtapaOportunidad.Nombre);

                    HTMLProgreso = "<p>Progreso - Etapa: <strong> " + data[0].CatEtapaOportunidad.Nombre + " </strong> </p>" +
                                    "<div class='col-lg-12'>" +
                                        "<div class='progress'>" +
                                            "<div class='progress-bar progress-bar-striped progress-bar-animated bg-" + color +"'" +
                                            "role='progressbar'" +
                        "style='width: " + porcentaje.toFixed(0) + "%'" +
                        "aria-valuenow='" + porcentaje.toFixed(0) + "'" +
                                            "aria-valuemin='0'" +
                                            "aria-valuemax='100'>" +
                        porcentaje + "%" +
                                            "</div>" +
                                        "</div > " +
                                    "</div >";
                    $("#DivViewProgreso").html(HTMLProgreso);

                    for (var b = 0; b < data.length; b++) {
                        HTMLChecks += '<div class="form-check mt-3">';
                        if (data[b].OportunidadEtapaTarea.Estatus == 1) {
                            HTMLChecks += '<input class="form-check-input" type="checkbox" value="' + data[b].OportunidadEtapaTarea.Id + '" id="CheckTarea_' + data[b].OportunidadEtapaTarea.Id + '" onclick="ActilizarEtapaTarea(' + etapa + ',' + data[b].OportunidadEtapaTarea.Id + ',' + data[b].OportunidadEtapaTarea.Estatus + ')" checked/>' +
                                          '<label class="form-check-label" for="CheckTarea_' + data[b].OportunidadEtapaTarea.Id + '"> ' + data[b].CatTareaEtapa.Nombre + ' </label>';
                        } else {
                            HTMLChecks += '<input class="form-check-input" type="checkbox" value="' + data[b].OportunidadEtapaTarea.Id + '" id="CheckTarea_' + data[b].OportunidadEtapaTarea.Id + '" onclick="ActilizarEtapaTarea(' + etapa + ',' + data[b].OportunidadEtapaTarea.Id + ',' + data[b].OportunidadEtapaTarea.Estatus + ')" />' +
                                           '<label class="form-check-label" for="CheckTarea_' + data[b].OportunidadEtapaTarea.Id + '"> ' + data[b].CatTareaEtapa.Nombre + ' </label>';
                        }
                        HTMLChecks +=   '</div>';
                    }

                    $("#DivContenedorListaTareas").html(HTMLChecks);


                    if (etapa == 1) {
                        $("#DivBtnRegresarEtapaAnterior").css("display", "none");
                    } else {
                        $("#DivBtnRegresarEtapaAnterior").show();
                    }
                }
            },
            error: function () {

            }
        });
    }

    function CargaInformacionArchvos() {
        var CatEntidad = new Object();
        CatEntidad.Id = 3;

        var ArchivoEntidad = new Object();
        ArchivoEntidad.CatEntidad = CatEntidad;
        ArchivoEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Archivo_Seleccionar_Entidad_Valor", "Archivo")",
            async: false,
            data: JSON.stringify(ArchivoEntidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#Btn_Titulo_Archivos').text("(" + data.length + ")");

                var Table = "<div class='col-lg-12'>" +
                                "<div class='table-responsive text-nowrap'>" +
                                    "<table class='table table-striped'>" +
                                        "<thead>" +
                                            "<tr class='text-center'>" +
                                                "<th> Nombre archivo </th>" +
                                                "<th>  </th>" +
                                            "</tr>"+
                                        "</thead>" +
                                        "<tbody class='table-border-bottom-0'>";
                                        for (var b = 0; b < data.length; b++) {
                                            Table += "<tr class='text-center'>" +
                                                "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].NombreOrigianl +"</strong></td>" +
                                                "<td>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='DescargarArchivo(" + data[b].Id + ") '>" +
                                                        "<span class='tf-icons bx bx-cloud-download'></span>" +
                                                    "</button>" +
                                                    "<button type='button' class='btn rounded-pill btn-icon btn-outline-secondary' onclick='EliminarArchivo(" + data[b].Id +") '>" +
                                                        "<span class='tf-icons bx bx-trash'></span>" +
                                                    "</button>" +
                                                "</td>" +
                                            "</tr>";
                                        }

                    Table +=            "</tbody>" +
                                    "</table>" +
                                 "</div>" +
                             "</div>" ;
                $("#TableArchivosAdjuntos").html(Table);

            },
            error: function () {

            }
        });
    }
</script>

<script>
    function SubirArchivo() {
        $("#fileInputArchivo").click();
    }

    $('#fileInputArchivo').change(function () {
        var fileInput = document.getElementById('fileInputArchivo');

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'png' || ext == 'jpg' || ext == 'jpeg' || ext == 'pdf' || ext == 'txt' || ext == 'eml' || ext == 'xls' || ext == 'ppt' || ext == 'pptx' || ext == 'docx' || ext == 'doc' || ext == 'xlsx' || ext == 'zip') {
                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#fileProgresArchivo").show();

                    $.ajax({
                        url: '/api/FileAPI/UploadFileArchivo',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                            CargaDocumentoOportunidad(documento);
                        },
                        xhr: function () {
                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgresArchivo").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {
                            AlertWarning("Problema ocurrido", "Problemas para leer el archivo");
                            CerrarProgresArchivo();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarProgresArchivo, 1000);
                    });

                } else {
                    AlertPrimary("Formulario incompleto ", "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG");
                }
            } else {
                AlertPrimary("Formulario incompleto ", "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .png, .jpg, jpeg ");
            }
        } else {
            AlertPrimary("Formulario incompleto ","Selecciona un archivo.");
        }
    });

    function CerrarProgresArchivo() {
        $("#fileProgresArchivo").css("display", "none");
    }

    function CargaDocumentoOportunidad(documento) {

        var CatEntidad = new Object();
        CatEntidad.Id = 3;

        var Archivo = new Object();
        Archivo.NombreOrigianl = documento.NombreOrigianl;
        Archivo.NombreNuevo = documento.NombreNuevo;
        Archivo.Extencion = documento.Extencion;

        var ArchivoEntidad = new Object();
        ArchivoEntidad.CatEntidad = CatEntidad;
        ArchivoEntidad.IdValorEntidad = @ViewBag.Oportunidad.Id;
        ArchivoEntidad.Archivo = Archivo;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Archivo_Agregar", "Archivo")",
            async: false,
            data: JSON.stringify(ArchivoEntidad),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Id > 0) {
                    swal({
                        title: "Nuevo documento registrado !",
                        icon: "success",
                        buttons: {
                            agregar: {
                                text: "Aceptar", className: 'sweet-continuar'
                            },
                        },
                    }).then((value) => {
                        switch (value) {
                            case "agregar":
                                CargaInformacionArchvos();
                            break;
                        }
                    });

                } else  {
                    AlertDanger("Archivo no registrado ! ", "Verifica tu información");
                }
            },
            error: function () {
                AlertDanger("Archivo no registardo ! ", "Intentelo mas tarde.");
            }
        });
    }

    function EliminarArchivo(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar archivo !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {

                var Archivo = new Object();
                Archivo.Id = Id;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Archivo_Eliminar", "Archivo")",
                    async: false,
                    data: JSON.stringify(Archivo),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {
                    }
                });
            }
        });
    }

   function DescargarArchivo(Id) {
    var Archivo = new Object();
    Archivo.Id = Id;

    $.ajax({
        type: "POST",
        url: "@Url.Action("Archivo_Seleccionar_Id", "Archivo")",
        async: false,
        data: JSON.stringify(Archivo),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            

            // Verifica que la ruta del archivo esté disponible
            if (data.NombreNuevo) {
                var url = "http://" + data.NombreNuevo; // Asegúrate de agregar el prefijo http:// si es necesario

                // Crear un elemento <a> temporal
                var a = document.createElement('a');
                a.href = url;
                a.download = data.NombreOrigianl || 'archivo_descargado'; // Nombre original del archivo

                // Simular el clic para iniciar la descarga
                document.body.appendChild(a);
                a.click();

                // Remover el elemento <a> del DOM
                document.body.removeChild(a);
            }
        },
        error: function () {
            console.error("Error al intentar descargar el archivo.");
        }
    });
}

</script>

<script>

    function BtnRegresarEtapaAnterior() {

        swal({
            title: "Confirmación de acción ",
            text: "Regresar a etapa anterior !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                var Oportunidad = new Object();
                Oportunidad.Id = @ViewBag.Oportunidad.Id;

                var OportunidadEtapaTarea = new Object();
                OportunidadEtapaTarea.Oportunidad = Oportunidad;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadEtapaTarea_RetrocederEtapa", "OportunidadEtapa")",
                    async: false,
                    data: JSON.stringify(OportunidadEtapaTarea),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        CargaInformacionEtapasTareas();
                    },
                    error: function () {

                    }
                });
            }

        });
    }

    function ActilizarEtapaTarea(etapa, tarea, esatus) {

        var ValEstaus = 0;

        if (esatus == 0) {
            ValEstaus = 1;
        }

        var Oportunidad = new Object();
        Oportunidad.Id = @ViewBag.Oportunidad.Id;

        var CatEtapaOportunidad = new Object();
        CatEtapaOportunidad.Id = etapa;

        var CatTareaEtapa = new Object();
        CatTareaEtapa.CatEtapaOportunidad = CatEtapaOportunidad;
        CatTareaEtapa.Id = tarea;

        var OportunidadEtapaTarea = new Object();
        OportunidadEtapaTarea.CatTareaEtapa = CatTareaEtapa;
        OportunidadEtapaTarea.Oportunidad = Oportunidad;
        OportunidadEtapaTarea.Estatus = ValEstaus;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadEtapaTarea_ActulizarEstatus", "OportunidadEtapa")",
            async: false,
            data: JSON.stringify(OportunidadEtapaTarea),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                //console.log(data);
                //alert(data.Id);
                if (data.Id == 1) {
                  /*  alert(1);*/
                    jsConfetti.addConfetti();
                    CargaInformacionEtapasTareas();
                    jsConfetti.addConfetti();

                    var Estatus = "@ViewBag.Oportunidad.CatEstatusOpurtunidad.Nombre";
                    if (Estatus == "EN PROCESO") {
                        setTimeout(function () {
                            // Tu función jQuery aquí
                            ValidarTerminoEtapas()

                        }, 2000); // 5000 milisegundos = 5 segundos
                    }

                } else {
                  /*  alert(2);*/
                    CargaInformacionEtapasTareas();
                }
            },
            error: function () {

            }
        });
    }

    function ValidarTerminoEtapas() {
        swal({
            title: "No olvides cambiar el estatus de la oportunidad.!",
            icon: "warning",
            buttons: {
                agregar: {
                    text: "Cambiar estatus", className: 'sweet-continuar'
                },
                cancelar: {
                    text: "Cancelar", className: 'sweet-mostrar'
                }
            },
        })
        .then((value) => {
            switch (value) {

                case "cancelar":
                    
                    break;

                case "agregar":
                    swal.close();
                    BtnAbrirActualizarEstatus();
                    break;
            }
        });



    }

    function MostrarProgreso() {
        $("#FormPrincipal").css("display", "none");
        $("#FormProgreso").show();

        var posicion = $("#FormProgreso").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarProgreso() {
        location.reload();
    }
</script>

<script>
    function BtnRegistrarImporte() {
        if (ValidarImporte()) {

            var CatMoneda = new Object();
            CatMoneda.Id = $("#Oportunidad_Moneda option:selected").val();

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var OportunidadImporte = new Object();
            OportunidadImporte.Oportunidad = Oportunidad;
            OportunidadImporte.Valor = $('#Oportunidad_Importe').val().replace(/,/g, '');;
            OportunidadImporte.TipoCambio = $('#Oportunidad_TipoCambio').val().replace(/,/g, '');;
            OportunidadImporte.Observacion = $('#Oportunidad_ObsercionImporte').val();
            OportunidadImporte.CatMoneda = CatMoneda;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadImporte_Agregar", "OportunidadImporte")",
                async: false,
                data: JSON.stringify(OportunidadImporte),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    /*console.log(data);*/
                    if (data.Id > 0) {

                        swal({
                            title: "Nuevo importe registrado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Importe no actualizado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Importe no actualizado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function ValidarImporte() {
        var result = false;

        $('#Oportunidad_Importe').css("border", "1px solid #f44336");
        $('#Oportunidad_Importe').css("border-left", "none");

        $('#Oportunidad_Moneda').css("border", "1px solid #f44336");

        $('#Oportunidad_TipoCambio').css("border", "1px solid #f44336");
        $('#Oportunidad_TipoCambio').css("border-left", "none");

        if ($('#Oportunidad_Importe').val().length > 0) {
            $('#Oportunidad_Importe').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Importe').css("border-left", "none");
        }

        if ($("#Oportunidad_Moneda option:selected").val() > 0) {
            $('#Oportunidad_Moneda').css("border", "0px solid #d9dee3");
        }

        if ($('#Oportunidad_TipoCambio').val().length > 0) {
            $('#Oportunidad_TipoCambio').css("border", "1px solid #d9dee3");
            $('#Oportunidad_TipoCambio').css("border-left", "none");
        }

        if ($('#Oportunidad_Importe').val().length > 0) {
            if ($("#Oportunidad_Moneda option:selected").val() > 0) {
                if ($('#Oportunidad_TipoCambio').val().length > 0) {
                    /*   if ($('#Oportunidad_ObsercionImporte').val().length > 0) {*/
                        result = true;
                /*    }*/
                }
            }
        }

        return result;
    }

    function MostrarAgregarImporte() {
        OcultaFormularios();

        $("#DivActualizarImporte").css("display", "none");
        $("#DivRegistrarImporte").show();

        $("#Oportunidad_Importe").val("");
        $("#Oportunidad_Moneda").val(0);
        $("#Oportunidad_TipoCambio").val("");
        $("#Oportunidad_ObsercionImporte").val("");

        $("#FormPrincipal").css("display", "none");
        $("#FormImporte").show();

        var posicion = $("#FormImporte").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarImporte() {
        $("#FormImporte").css("display", "none");
        $("#FormPrincipal").show();



        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function EliminarImporte(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar importe !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                var Oportunidad = new Object();
                Oportunidad.Id = @ViewBag.Oportunidad.Id;

                 var OportunidadImporte = new Object();
                 OportunidadImporte.Id = Id;
                 OportunidadImporte.Oportunidad = Oportunidad;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadImporte_Eliminar", "OportunidadImporte")",
                    async: false,
                    data: JSON.stringify(OportunidadImporte),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }

         });

    }

    function EditarImporte(Id) {
        if (ValidarImporte()) {

            var CatMoneda = new Object();
            CatMoneda.Id = $("#Oportunidad_Moneda option:selected").val();

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var OportunidadImporte = new Object();
            OportunidadImporte.Id = Id;
            OportunidadImporte.Oportunidad = Oportunidad;
            OportunidadImporte.Valor = $('#Oportunidad_Importe').val().replace(/,/g, '');;
            OportunidadImporte.TipoCambio = $('#Oportunidad_TipoCambio').val().replace(/,/g, '');;
            OportunidadImporte.Observacion = $('#Oportunidad_ObsercionImporte').val();
            OportunidadImporte.CatMoneda = CatMoneda;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadImporte_Editar", "OportunidadImporte")",
                async: false,
                data: JSON.stringify(OportunidadImporte),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    /*console.log(data);*/
                    if (data.Id > 0) {

                        swal({
                            title: "Importe actualizado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Importe no actualizado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Importe no actualizado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function FromEditarImporte(Id) {
        MostrarAgregarImporte();

        var OportunidadImporte = new Object();
        OportunidadImporte.Id = Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadImporte_Seleccionar_Id", "OportunidadImporte")",
            async: false,
            data: JSON.stringify(OportunidadImporte),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
               /* console.log(data);*/
                $("#Oportunidad_Importe").val(data.Valor.toLocaleString('en'));
                $("#Oportunidad_Moneda").val(data.CatMoneda.Id);
                $("#Oportunidad_TipoCambio").val(data.TipoCambio.toLocaleString('en'));
                $("#Oportunidad_ObsercionImporte").val(data.Observacion);

                $("#DivRegistrarImporte").css("display", "none");
                $("#DivActualizarImporte").show();

                var Table = "<button type='button' class='btn btn-outline-primary' style='width: 100%;' onclick='EditarImporte(" + Id + ")'>" +
                                "<span class='tf-icons bx bx-save'></span>&nbsp; Actualizar" +
                            "</button>";
                $("#DivActualizarImporte").html(Table);

            },
            error: function () {

            }
        });
    }
</script>

<script>
    function BtnRegistrarOportunidadProducto() {
        if (VaidaOportunidadProducto()) {

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadProducto_Agregar", "OportunidadProducto")",
                async: false,
                data: JSON.stringify(Oportunidad),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
       /*             console.log(data);*/
                    if (data.Id > 0) {

                        swal({
                            title: "Nuevo producto relacionado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        }).then((value) => {
                            switch (value) {
                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });

                    } else if (data.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Producto no agregado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Producto no agregado.");
                }
            });
        } else {
            AlertDanger("Formulairo incompleto ", "Agrega un producto a la lista.");
        }
    }

    function VaidaOportunidadProducto() {
        var result = false;
        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadProducto_Consultar", "OportunidadProducto")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    result = true;
                }
            },
            error: function () {

            }
        });

        return result;
    }

    function MostrarAgregarProducto() {
        OcultaFormularios();
        $("#FormPrincipal").css("display", "none");
        $("#FormProducto").show();

        $("#Oportunidad_Producto").select2();
        $("#Oportunidad_Categoria").select2();
        $("#Oportunidad_SubCategoria").select2();
        $("#Oportunidad_Clasificacion").select2();

        var posicion = $("#FormProducto").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarProducto() {
        $("#FormProducto").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }
</script>

<script>
    function AgregarProductoOportunidad() {
        if (ValidaProductoOportunidad()) {

            var CatMoneda = new Object();
            CatMoneda.Id = $("#Oportunidad_Producto_Moneda option:selected").val();

            var CatProducto = new Object();
            CatProducto.Id = $("#Oportunidad_Producto option:selected").val();

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var OportunidadProducto = new Object();
            OportunidadProducto.CatMoneda = CatMoneda;
            OportunidadProducto.CatProducto = CatProducto;
            OportunidadProducto.Oportunidad = Oportunidad;
            OportunidadProducto.Item = $('#Oportunidad_Cantidad').val();
            OportunidadProducto.Valor = $('#Oportunidad_Producto_Importe').val().replace(/,/g, '');;
            OportunidadProducto.TipoCambio = $('#Oportunidad_Producto_TipoCambio').val().replace(/,/g, '');;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadProducto_Selecionar_OportunidadProducto", "OportunidadProducto")",
                async: false,
                data: JSON.stringify(OportunidadProducto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == 0) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("OportunidadProducto_Sesion_Agregar", "OportunidadProducto")",
                            async: false,
                            data: JSON.stringify(OportunidadProducto),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (result) {
                                $('#Oportunidad_Cantidad').val("");
                                PintaTablaProductos(result);
                            },
                            error: function () {
                                AlertDanger("Problemas al registrar ", "Producto no agregado.");
                            }
                        });
                    } else if (result.Id == 1) {
                        AlertWarning("Problemas al registrar ", "El producto que intentas agregar ya se encuentra asociado a la oportunidad.");
                    }

                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Producto no agregado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function PintaTablaProductos(data) {


        $("#DivTableContenidoProductos").empty();

        var Table =
                "<table class='table table-sm table-striped table-hover text-left'>" +
                    "<thead>" +
                        "<tr class='table-primary'>" +
                            "<th>Producto </th>" +
                            "<th>Imagen </th>" +
                            "<th>Cantidad </th>" +
                            "<th>Acciones </th>" +
                        "</tr>" +
                    "</thead>" +
                    "<tbody class='table-border-bottom-0'>";

            for (var b = 0; b < data.length; b++) {
                var src = 'http://' + data[b].CatProducto.ProductoImagen.ImagenURL;
                Table +=
                    "<tr>" +
                        "<td><i class='fab fa-angular fa-lg text-danger me-3'></i> <strong>" + data[b].CatProducto.Nombre + "</strong></td>" +
                        "<td>" +
                            "<ul class='list-unstyled users-list m-0 avatar-group d-flex align-items-center'>" +
                                "<li data-bs-toggle='tooltip' data-popup='tooltip-custom'  data-bs-placement='top' class='avatar avatar-xl pull-up' title='" + data[b].CatProducto.Nombre + "' >" +
                                    "<img src='" + src +"' alt='Avatar' class='rounded-circle' />" +
                                "</li>" +
                            "</ul>" +
                        "</td > " +
                        "<td>" + data[b].Item + "</td>" +
                        "<td>" +
                            "<div class='dropdown'>" +
                                "<button type='button' class='btn p-0 dropdown-toggle hide-arrow' data-bs-toggle='dropdown'>" +
                                    "<i class='bx bx-dots-vertical-rounded'></i>" +
                                "</button>" +
                                "<div class='dropdown-menu'>" +
                                    "<a class='dropdown-item' onclick='BtnEliminarProducto(" + data[b].CatProducto.Id + ")'><i class='bx bx-trash me-1'></i> Eliminar </a>" +
                                "</div>" +
                            "</div>" +
                        "</td>" +
                    "</tr>";
                }

                Table +=
                    "</tbody>" +
            "</table>";

        $("#DivTableContenidoProductos").html(Table);
    }

    function BtnEliminarProducto(Id) {
        var obj = {};
        obj['Id'] = Id;

        var jsonObject = {
            "CatProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadProducto_Sesion_Eliminar", "OportunidadProducto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                PintaTablaProductos(result);
            },
            error: function () {
                AlertDanger("Problemas al eliminar ", "Producto no eliminado.");
            }
        });
    }

    function ValidaProductoOportunidad() {
        var result = false;
        $('#select2-Oportunidad_Categoria-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_SubCategoria-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_Clasificacion-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_Producto-container').css("border", "1px solid #f44336");
        $('#Oportunidad_Producto_Moneda').css("border", "1px solid #f44336");

        $('#Oportunidad_Cantidad').css("border", "1px solid #f44336");
        $('#Oportunidad_Cantidad').css("border-left", "none");

        $('#Oportunidad_Producto_Importe').css("border", "1px solid #f44336");
        $('#Oportunidad_Producto_Importe').css("border-left", "none");

        $('#Oportunidad_Producto_TipoCambio').css("border", "1px solid #f44336");
        $('#Oportunidad_Producto_TipoCambio').css("border-left", "none");


        if ($("#Oportunidad_Producto_Moneda option:selected").val() > 0) {
            $('#Oportunidad_Producto_Moneda').css("border", "1px solid #d9dee3");
        }

        if ($("#Oportunidad_Producto option:selected").val() > 0) {
            $('#select2-Oportunidad_Producto-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_Categoria option:selected").val() > 0) {
            $('#select2-Oportunidad_Categoria-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_SubCategoria option:selected").val() > 0) {
            $('#select2-Oportunidad_SubCategoria-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_Clasificacion option:selected").val() > 0) {
            $('#select2-Oportunidad_Clasificacion-container').css("border", "0px solid #d9dee3");
        }

        if ($('#Oportunidad_Cantidad').val().length > 0) {
            $('#Oportunidad_Cantidad').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Cantidad').css("border-left", "none");
        }

        if ($('#Oportunidad_Producto_Importe').val().length > 0) {
            $('#Oportunidad_Producto_Importe').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Producto_Importe').css("border-left", "none");
        }

        if ($('#Oportunidad_Producto_TipoCambio').val().length > 0) {
            $('#Oportunidad_Producto_TipoCambio').css("border", "1px solid #d9dee3");
            $('#Oportunidad_Producto_TipoCambio').css("border-left", "none");
        }

        if ($("#Oportunidad_Producto option:selected").val() > 0) {
            if ($("#Oportunidad_Categoria option:selected").val() > 0) {
                if ($("#Oportunidad_SubCategoria option:selected").val() > 0) {
                    if ($("#Oportunidad_Clasificacion option:selected").val() > 0) {
                        if ($('#Oportunidad_Cantidad').val().length > 0) {
                            if ($('#Oportunidad_Producto_Importe').val().length > 0) {
                                if ($('#Oportunidad_Producto_TipoCambio').val().length > 0) {
                                    if ($("#Oportunidad_Producto_Moneda option:selected").val() > 0) {
                                        result = true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        return result;
    }

    function EliminarProdcuto(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar producto !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                var Oportunidad = new Object();
                Oportunidad.Id = @ViewBag.Oportunidad.Id;

                 var OportunidadProducto = new Object();
                 OportunidadProducto.Id = Id;
                 OportunidadProducto.Oportunidad = Oportunidad;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadProducto_Eliminar", "OportunidadProducto")",
                    async: false,
                    data: JSON.stringify(OportunidadProducto),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }

         });
    }
</script>
<script>
    function BtnRegistrarProducto() {
        if (ValidaProducto()) {
            var CatClasificacionProducto = new Object();
            CatClasificacionProducto.Id = $("#Oportunidad_Clasificacion option:selected").val();

            var CatProducto = new Object();
            CatProducto.CatClasificacionProducto = CatClasificacionProducto;
            CatProducto.Nombre = $('#Producto_Nombre').val();
            CatProducto.SKU = $('#Producto_SKU').val();
            CatProducto.Descripcion = $('#Producto_Descripcion').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Producto_Agregar", "Producto")",
                async: false,
                data: JSON.stringify(CatProducto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -2) {
                        AlertWarning("Problemas al registrar ", "El SKU ya se encuentra asociado a otro producto.");
                    } else if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El nombre del producto que intentas agregar ya se encuentra registrado.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Producto no registrado.");
                    } else if (result.Id > 0) {
                        CargaProductoList(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Producto no registrado.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function CargaProductoList(Id) {

        var obj = {};
        obj['Id'] = $("#Oportunidad_Clasificacion option:selected").val();

        var jsonObject = {
            "CatClasificacionProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Producto_Listar_Clasificacion", "Producto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Producto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Oportunidad_Producto").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Producto").append(option);
                    });
                }
                $('#Oportunidad_Producto option[value="' + Id + '"]').attr("selected", true);

                $('#Producto_Nombre').val('');
                $('#Producto_SKU').val('');
                $('#Producto_Descripcion').val('');
                $('#ImgEmpleado').html('');
                $("#BtnEliminarImagen").css("display", "none");

                $("#BtnProductoCerrar").trigger("click");
                AlertSuccess('Registro exitoso !','Nuevo producto registrado.');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaProducto() {
        var result = false;
        $('#Producto_Nombre').css("border", "1px solid #f44336");
        $('#Producto_Nombre').css("border-left", "none");

        $('#Producto_SKU').css("border", "1px solid #f44336");
        $('#Producto_SKU').css("border-left", "none");

        if ($('#Producto_Nombre').val().length > 0) {
            $('#Producto_Nombre').css("border", "1px solid #d9dee3");
            $('#Producto_Nombre').css("border-left", "none");
        }

        if ($('#Producto_SKU').val().length > 0) {
            $('#Producto_SKU').css("border", "1px solid #d9dee3");
            $('#Producto_SKU').css("border-left", "none");
        }

        if ($('#Producto_Nombre').val().length > 0) {
            if ($('#Producto_SKU').val().length > 0) {
                result = true;
            }
        }

        return result;
    }

</script>
<script>
    function EliminarImagen() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Producto_EliminarImagen", "Producto")",
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                $('#ImgEmpleado').html('');
                $("#BtnEliminarImagen").css("display", "none");
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                $("#BtnEliminarImagen").css("display", "none");
            }
        });
    }

    $('#BtnNuvaImagenFotografica').click(function () {
        $("#fileInput4").click();
    });

    $('#fileInput4').change(function () {
        var fileInput = document.getElementById('fileInput4');

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'png' || ext == 'jpg' || ext == 'jpeg') {
                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    $("#BtnNuvaImagenFotografica").prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#fileProgres").show();

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesImagen',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                            CargaImagen(documento);
                        },
                        xhr: function () {
                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgres").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {
                            AlertWarning("Problema ocurrido", "Problemas para leer el archivo");
                            $("#BtnNuvaImagenFotografica").prop('disabled', false);
                            CerrarProgres();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarProgres, 1000);
                    });

                } else {
                    AlertPrimary("Formulario incompleto ", "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG");
                }
            } else {
                AlertPrimary("Formulario incompleto ", "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .png, .jpg, jpeg ");
            }
        } else {
            $("#BtnNuvaImagenFotografica").prop('disabled', false);
            AlertPrimary("Formulario incompleto ","Selecciona un archivo.");
        }
    });

    function CerrarProgres() {
        $("#fileProgres").css("display", "none");
    }

    function CargaImagen(Imagen) {
        $("#BtnNuvaImagenFotografica").prop('disabled', false);

        var ProductoImagen = new Object();
        ProductoImagen.NmArchivo = Imagen.NmArchivo;
        ProductoImagen.NmOriginal = Imagen.NmOriginal;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Producto_AgregarImagen", "Producto")",
            data: JSON.stringify(ProductoImagen),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
             /*   console.log(respuesta);*/
                $('#ImgEmpleado').html('');

                var image = new Image();

                var src = 'http://' + respuesta;
                image.src = src;
                image.style.width = '100%';

                $('#ImgEmpleado').append(image);
                $("#BtnEliminarImagen").show();

            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                $("#BtnEliminarImagen").css("display", "none");
            }
        });
    }

    function AbrirProducto() {
        var abrir = false;
        $('#select2-Oportunidad_Categoria-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_SubCategoria-container').css("border", "1px solid #f44336");
        $('#select2-Oportunidad_Clasificacion-container').css("border", "1px solid #f44336");

        if ($("#Oportunidad_Categoria option:selected").val() > 0) {
            $('#select2-Oportunidad_Categoria-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_SubCategoria option:selected").val() > 0) {
            $('#select2-Oportunidad_SubCategoria-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_Clasificacion option:selected").val() > 0) {
            $('#select2-Oportunidad_Clasificacion-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Oportunidad_Categoria option:selected").val() > 0) {
            if ($("#Oportunidad_SubCategoria option:selected").val() > 0) {
                if ($("#Oportunidad_Clasificacion option:selected").val() > 0) {
                    abrir = true;
                }
            }
        }

        if (abrir) {
            $("#IdBtnModalProductoAbrir").trigger("click");
        } else {
            AlertPrimary("Formulario incompleto ! ", "Completa los campos marcados.");
        }

    }
</script>

<script>
    function BuscaProducto() {
        var obj = {};
        obj['Id'] = $("#Oportunidad_Producto option:selected").val();

        var jsonObject = {
            "CatProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Producto_Seleccionar_IdProducto", "Producto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $('#Oportunidad_Categoria').val(result.CatClasificacionProducto.CatSubcategoriaProducto.CatCategoriasProducto.Id).trigger('change.select2');
                $('#Oportunidad_SubCategoria').val(result.CatClasificacionProducto.CatSubcategoriaProducto.Id).trigger('change.select2');

                var obj = {};
                obj['Id'] = $("#Oportunidad_SubCategoria option:selected").val();

                var jsonObject = {
                    "CatSubcategoriaProducto": obj
                };

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ClasificacionProducto_Listar", "ClasificacionProducto")",
                    async: false,
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {

                            $("#Oportunidad_Clasificacion").empty();

                            var option = $(document.createElement('option'));
                            option.text("SELECCIONAR");
                            option.val(0);

                            $("#Oportunidad_Clasificacion").append(option);

                            $(data).each(function () {
                                var option = $(document.createElement('option'));

                                option.text(this.Nombre.toUpperCase());
                                option.val(this.Id);

                                $("#Oportunidad_Clasificacion").append(option);
                            });

                            $('#Oportunidad_Clasificacion option[value="' + result.CatClasificacionProducto.Id + '"]').attr("selected", true);

                        }
                    },
                    error: function () {
                        $("#Oportunidad_Clasificacion").empty();

                        var option = $(document.createElement('option'));
                        option.text("SELECCIONAR");
                        option.val(0);

                        $("#Oportunidad_Clasificacion").append(option);
                    }
                });
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function CargaProductos() {

        var obj = {};
        obj['Id'] = $("#Oportunidad_Clasificacion option:selected").val();

        var jsonObject = {
            "CatClasificacionProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Producto_Listar_Clasificacion", "Producto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Producto").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Oportunidad_Producto").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Producto").append(option);
                    });
                }
            },
            error: function () {
                $("#Oportunidad_Producto").empty();

                var option = $(document.createElement('option'));
                option.text("SELECCIONAR");
                option.val(0);

                $("#Oportunidad_Producto").append(option);
            }
        });
    }

    function CargaClasificaciones() {
        var obj = {};
        obj['Id'] = $("#Oportunidad_SubCategoria option:selected").val();

        var jsonObject = {
            "CatSubcategoriaProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClasificacionProducto_Listar", "ClasificacionProducto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Clasificacion").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Oportunidad_Clasificacion").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Clasificacion").append(option);
                    });
                }
            },
            error: function () {
                $("#Oportunidad_Clasificacion").empty();

                var option = $(document.createElement('option'));
                option.text("SELECCIONAR");
                option.val(0);

                $("#Oportunidad_Clasificacion").append(option);
            }
        });
    }

    function CargaSubCategorias() {
        var obj = {};
        obj['Id'] = $("#Oportunidad_Categoria option:selected").val();

        var jsonObject = {
            "CatCategoriasProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("SubcategoriaProducto_Listar", "SubcategoriaProducto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_SubCategoria").empty();
                    $("#Oportunidad_Clasificacion").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);


                    $("#Oportunidad_SubCategoria").append(option);
                    $("#Oportunidad_Clasificacion").append(option2);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_SubCategoria").append(option);
                    });
                }
            },
            error: function () {
                $("#Oportunidad_SubCategoria").empty();
                $("#Oportunidad_Clasificacion").empty();

                var option = $(document.createElement('option'));
                option.text("SELECCIONAR");
                option.val(0);

                var option2 = $(document.createElement('option'));
                option2.text("SELECCIONAR");
                option2.val(0);


                $("#Oportunidad_SubCategoria").append(option);
                $("#Oportunidad_Clasificacion").append(option2);
            }
        });
    }
</script>

<script>
    function BtnRegistrarClasificacion() {
        if (ValidaClasificacion()) {
            var CatSubcategoriaProducto = new Object();
            CatSubcategoriaProducto.Id = $("#Oportunidad_SubCategoria option:selected").val();

            var CatClasificacionProducto = new Object();
            CatClasificacionProducto.Nombre = $('#Clasificacion_Nombre').val();
            CatClasificacionProducto.CatSubcategoriaProducto = CatSubcategoriaProducto;

            $.ajax({
                type: "POST",
                url: "@Url.Action("ClasificacionProducto_Agregar", "ClasificacionProducto")",
                async: false,
                data: JSON.stringify(CatClasificacionProducto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La clasificación ya se encuentra registrada.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Clasificación no registrada.");
                    } else if (result.Id > 0) {
                        CargaClasificacion(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Clasificación no registrada.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function CargaClasificacion(Id) {

        var obj = {};
        obj['Id'] = $("#Oportunidad_SubCategoria option:selected").val();

        var jsonObject = {
            "CatSubcategoriaProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("ClasificacionProducto_Listar", "ClasificacionProducto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Clasificacion").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Oportunidad_Clasificacion").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Clasificacion").append(option);
                    });
                }
                $('#Oportunidad_Clasificacion option[value="' + Id + '"]').attr("selected", true);
                $('#Clasificacion_Nombre').val('');
                $("#BtnClasificacionCerrar").trigger("click");
                AlertSuccess('Registro exitoso !','Nueva clasificación registrada');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaClasificacion() {
        var result = false;

        $('#Clasificacion_Nombre').css("border", "1px solid #f44336");
        $('#Clasificacion_Nombre').css("border-left", "none");

        if ($('#Clasificacion_Nombre').val().length > 0) {
            $('#Clasificacion_Nombre').css("border", "1px solid #d9dee3");
            $('#Clasificacion_Nombre').css("border-left", "none");
        }

        if ($('#Clasificacion_Nombre').val().length > 0) {
            result = true;
        }

        return result;
    }

    function AbrirClasificacion() {
        $('#select2-Oportunidad_SubCategoria-container').css("border", "1px solid #f44336");

        if ($("#Oportunidad_SubCategoria option:selected").val() > 0) {
            $('#select2-Oportunidad_SubCategoria-container').css("border", "0px solid #d9dee3");
        }

        var Categoria = $("#Oportunidad_SubCategoria option:selected").val();

        if (Categoria > 0) {
            $("#IdBtnModalClasificacionAbrir").trigger("click");
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una subcategoría para crear una clasificación nueva.");
        }
    }
</script>

<script>
    function BtnRegistrarSubCategoria() {
        if (ValidaSubCategoria()) {

            var CatCategoriasProducto = new Object();
            CatCategoriasProducto.Id = $("#Oportunidad_Categoria option:selected").val();

            var CatSubcategoriaProducto = new Object();
            CatSubcategoriaProducto.Nombre = $('#SubCategoria_Nombre').val();
            CatSubcategoriaProducto.CatCategoriasProducto = CatCategoriasProducto;

            $.ajax({
                type: "POST",
                url: "@Url.Action("SubcategoriaProducto_Agregar", "SubcategoriaProducto")",
                async: false,
                data: JSON.stringify(CatSubcategoriaProducto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La Sub categoría ya se encuentra registrada.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Sub categoría no registrada.");
                    } else if (result.Id > 0) {
                        CargaSubcategoria(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Sub categoría no registrada.");
                }
            });
        } else {
            AlertIncompleto();
        }
    }

    function CargaSubcategoria(Id) {

        var obj = {};
        obj['Id'] = $("#Oportunidad_Categoria option:selected").val();

        var jsonObject = {
            "CatCategoriasProducto": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("SubcategoriaProducto_Listar", "SubcategoriaProducto")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_SubCategoria").empty();
                    $("#Oportunidad_Clasificacion").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);

                    $("#Oportunidad_SubCategoria").append(option);
                    $("#Oportunidad_Clasificacion").append(option2);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_SubCategoria").append(option);
                    });
                }
                $('#Oportunidad_SubCategoria option[value="' + Id + '"]').attr("selected", true);
                $('#SubCategoria_Nombre').val('');
                $("#BtnSubCategoriaCerrar").trigger("click");
                AlertSuccess('Registro exitoso !','Nueva sub categoría registrada');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaSubCategoria() {
        var result = false;

        $('#SubCategoria_Nombre').css("border", "1px solid #f44336");
        $('#SubCategoria_Nombre').css("border-left", "none");

        if ($('#SubCategoria_Nombre').val().length > 0) {
            $('#SubCategoria_Nombre').css("border", "1px solid #d9dee3");
            $('#SubCategoria_Nombre').css("border-left", "none");
        }

        if ($('#SubCategoria_Nombre').val().length > 0) {
            result = true;
        }

        return result;
    }

    function AbrirSubCategoria() {
        $('#select2-Oportunidad_Categoria-container').css("border", "1px solid #f44336");

        if ($("#Oportunidad_Categoria option:selected").val() > 0) {
            $('#select2-Oportunidad_Categoria-container').css("border", "0px solid #d9dee3");
        }

        var Categoria = $("#Oportunidad_Categoria option:selected").val();

        if (Categoria > 0) {
            $("#IdBtnModalSebCategoriaAbrir").trigger("click");
        } else {
            AlertPrimary("Formulario incompleto ! ", "Selecciona una categoría para crear una subcategoría nueva.");
        }
    }
</script>

<script>
    function BtnRegistrarCategoria() {
        if (ValidaCategoria()) {

            var obj = {};
            obj['Nombre'] = $('#Categoria_Nombre').val();

            var jsonObject = {
                "CatCategoriasProducto": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CategoriasProducto_Agregar", "CategoriasProducto")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La Categoría ya se encuentra registrada.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Categoría no registrada.");
                    } else if (result.Id > 0) {
                        CargaCategoria(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Categoría no registrada.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function CargaCategoria(Id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("CategoriasProducto_Listar", "CategoriasProducto")",
            async: false,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Categoria").empty();
                    $("#Oportunidad_SubCategoria").empty();
                    $("#Oportunidad_Clasificacion").empty();


                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);

                    var option3 = $(document.createElement('option'));
                    option3.text("SELECCIONAR");
                    option3.val(0);

                    $("#Oportunidad_Categoria").append(option);
                    $("#Oportunidad_SubCategoria").append(option2);
                    $("#Oportunidad_Clasificacion").append(option3);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Categoria").append(option);
                    });
                }
                $('#Oportunidad_Categoria option[value="' + Id + '"]').attr("selected", true);
                $('#Categoria_Nombre').val('');
                $("#BtnCategoriaCerrar").trigger("click");
                AlertSuccess('Registro exitoso !','Nueva categoría registrada');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaCategoria() {
        var result = false;

        $('#Categoria_Nombre').css("border", "1px solid #f44336");
        $('#Categoria_Nombre').css("border-left", "none");

        if ($('#Categoria_Nombre').val().length > 0) {
            $('#Categoria_Nombre').css("border", "1px solid #d9dee3");
            $('#Categoria_Nombre').css("border-left", "none");
        }

        if ($('#Categoria_Nombre').val().length > 0) {
            result = true;
        }

        return result;
    }
</script>


<script>
    function BtnRegistrarEmpresa() {
        if (ValidaEmpresa()) {

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var Empresa = new Object();
            Empresa.Id = $("#Empresa_Empresa option:selected").val();

            var OportunidadEmpresa = new Object();
            OportunidadEmpresa.Empresa = Empresa;
            OportunidadEmpresa.Oportunidad = Oportunidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadEmpresa_Agregar", "OportunidadEmpresa")",
                async: false,
                data: JSON.stringify(OportunidadEmpresa),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Nuevo contacto relacionado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar la empresa");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "La empresa que intentas relacionar ya se encuentra registrada.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidaEmpresa() {

        var result = false;

        $('#select2-Empresa_Empresa-container').css("border", "1px solid #f44336");

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            $('#select2-Empresa_Empresa-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Empresa_Empresa option:selected").val() > 0) {
            result = true;
        }
        return result;
    }

    function MostrarAgregarEmpresa() {

        OcultaFormularios();

        $("#FormPrincipal").css("display", "none");
        $("#FormEmpresa").show();
        $("#Empresa_Empresa").select2();

        var posicion = $("#FormEmpresa").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);

    }

    function OcultarAgregarEmpresa() {
        $("#FormEmpresa").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function EliminarEmpresa(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar empresa !",
              icon: "warning",
              buttons: true,
              dangerMode: true,
         }).then((willDelete) => {
             if (willDelete) {
                var Oportunidad = new Object();
                Oportunidad.Id = @ViewBag.Oportunidad.Id;

                 var OportunidadEmpresa = new Object();
                 OportunidadEmpresa.Id = Id;
                 OportunidadEmpresa.Oportunidad = Oportunidad;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OportunidadEmpresa_Eliminar", "OportunidadEmpresa")",
                    async: false,
                    data: JSON.stringify(OportunidadEmpresa),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {

                    }
                });
            }

         });

    }
</script>

<script>
    function BtnRegistrarContacto() {
        if (ValidaContacto()) {

            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var Persona = new Object();
            Persona.Id = $("#Contacto_Contacto option:selected").val();

            var CatPersonaOportunidad = new Object();
            CatPersonaOportunidad.Id = $("#Contacto_Rol option:selected").val();

            var OportunidadPersona = new Object();
            OportunidadPersona.Oportunidad = Oportunidad;
            OportunidadPersona.Persona = Persona;
            OportunidadPersona.CatPersonaOportunidad = CatPersonaOportunidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadPersona_Agregar", "OportunidadPersona")",
                async: false,
                data: JSON.stringify(OportunidadPersona),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Nuevo contacto relacionado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar el contacto");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El contacto que intentas relacionar ya se encuentra registrado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });


        } else {
            AlertIncompleto();
        }
    }

    function ValidaContacto() {

        var result = false;

        $('#select2-Contacto_Rol-container').css("border", "1px solid #f44336");
        $('#select2-Contacto_Contacto-container').css("border", "1px solid #f44336");

        if ($("#Contacto_Rol option:selected").val() > 0) {
            $('#select2-Contacto_Rol-container').css("border", "0px solid #d9dee3");
        }
        if ($("#Contacto_Contacto option:selected").val() > 0) {
            $('#select2-Contacto_Contacto-container').css("border", "0px solid #d9dee3");
        }

        if ($("#Contacto_Rol option:selected").val() > 0) {
            if ($("#Contacto_Contacto option:selected").val() > 0) {
                result = true;
            }
        }
        return result;
    }

    function MostrarAgregarContacto() {
        OcultaFormularios();
        $("#DivActualizarContacto").css("display", "none");
        $("#DivRegistrarContacto").show();

        $("#FormPrincipal").css("display", "none");
        $("#FormContacto").show();

        $("#Contacto_Rol").select2();
        $("#Contacto_Contacto").select2();

        $("#Contacto_Rol").val(0);
        $('#Contacto_Rol').val(0).trigger('change.select2');

        $("#Contacto_Contacto").val(0);
        $('#Contacto_Contacto').val(0).trigger('change.select2');

        $('#select2-Contacto_Rol-container').css("border", "0px solid #d9dee3");

        var posicion = $("#FormContacto").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function OcultarAgregarContacto() {
        $("#FormContacto").css("display", "none");
        $("#FormPrincipal").show();

        var posicion = $("#FormPrincipal").offset().top;
        $("html, body").animate({
            scrollTop: posicion - 100
        }, 500);
    }

    function EliminarContacto(Id) {
        swal({
            title: "Confirmación de acción ",
            text: "Eliminar contacto !",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

                var OportunidadPersona = new Object();
                OportunidadPersona.Id = Id;
                OportunidadPersona.Oportunidad = Oportunidad;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadPersona_Eliminar", "OportunidadPersona")",
                async: false,
                data: JSON.stringify(OportunidadPersona),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    location.reload();
                },
                error: function () {

                }
            });
        }

        });

    }

    function EditarContacto(Id) {
        if (ValidaContacto()) {
            var Oportunidad = new Object();
            Oportunidad.Id = @ViewBag.Oportunidad.Id;

            var Persona = new Object();
            Persona.Id = $("#Contacto_Contacto option:selected").val();

            var CatPersonaOportunidad = new Object();
            CatPersonaOportunidad.Id = $("#Contacto_Rol option:selected").val();

            var OportunidadPersona = new Object();
            OportunidadPersona.Oportunidad = Oportunidad;
            OportunidadPersona.Persona = Persona;
            OportunidadPersona.CatPersonaOportunidad = CatPersonaOportunidad;
            OportunidadPersona.Id = Id;

            $.ajax({
                type: "POST",
                url: "@Url.Action("OportunidadPersona_Editar", "OportunidadPersona")",
                async: false,
                data: JSON.stringify(OportunidadPersona),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    if (respuesta.Id > 0) {

                        swal({
                            title: "Contacto editado !",
                            icon: "success",
                            buttons: {
                                agregar: {
                                    text: "Aceptar", className: 'sweet-continuar'
                                },
                            },
                        })
                        .then((value) => {
                            switch (value) {

                                case "agregar":
                                    location.reload();
                                break;
                            }
                        });
                    } else if (respuesta.Id == 0) {
                        AlertWarning("Problemas al registrar ", "Problemas al relacionar el contacto");
                    } else if (respuesta.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El contacto que intentas relacionar ya se encuentra registrado.");
                    }
                },
                error: function () {
                    AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function FromEditarContacto(Id) {

        MostrarAgregarContacto();

        var OportunidadPersona = new Object();
        OportunidadPersona.Id = Id;

        $.ajax({
            type: "POST",
            url: "@Url.Action("OportunidadPersona_Seleccionar_Id", "OportunidadPersona")",
            async: false,
            data: JSON.stringify(OportunidadPersona),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
              /*  console.log(data);*/
                $("#Contacto_Contacto").val(data.Persona.Id);
                $('#Contacto_Contacto').val(data.Persona.Id).trigger('change.select2');

                $("#Contacto_Rol").val(data.CatPersonaOportunidad.Id);
                $('#Contacto_Rol').val(data.CatPersonaOportunidad.Id).trigger('change.select2');

                $("#DivRegistrarContacto").css("display", "none");
                $("#DivActualizarContacto").show();

                var Table = "<button type='button' class='btn btn-outline-primary' style='width: 100%;' onclick='EditarContacto(" + Id + ")'>" +
                                "<span class='tf-icons bx bx-save'></span>&nbsp; Actualizar" +
                            "</button>";
                $("#DivActualizarContacto").html(Table);

            },
            error: function () {

            }
        });
    }
</script>

<script>
    function BtnRegistrarPersonaOportunidad() {
        if (ValidaPersonaOportunidad()) {

            var obj = {};
            obj['Nombre'] = $('#PersonaOportunidad_Nombre').val();

            var jsonObject = {
                "CatPersonaOportunidad": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("PersonaOportunidad_Agregar", "PersonaOportunidad")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id == -1) {
                        AlertWarning("Problemas al registrar ", "El rol ya se encuentra registrado.");
                    } else if (result.Id == 0) {
                        AlertDanger("Problemas al registrar ", "Rol no registrado.");
                    } else if (result.Id > 0) {
                        CargaPersonaOportunidad(result.Id);
                    }
                },
                error: function () {
                    AlertDanger("Problemas al registrar ", "Rol no registrado.");
                }
            });

        } else {
            AlertIncompleto();
        }
    }

    function CargaPersonaOportunidad(Id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("PersonaOportunidad_Listar", "PersonaOportunidad")",
            async: false,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {

                    $("#Oportunidad_Rol").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Oportunidad_Rol").append(option);

                    $(data).each(function () {
                        var option = $(document.createElement('option'));

                        option.text(this.Nombre.toUpperCase());
                        option.val(this.Id);

                        $("#Oportunidad_Rol").append(option);
                    });
                }
                $('#Oportunidad_Rol option[value="' + Id + '"]').attr("selected", true);
                $('#PersonaOportunidad_Nombre').val('');
                $("#BtnPersonaOportunidadCerrar").trigger("click");
                AlertSuccess('Registro exitoso !','Nuevo rol registrado');
            },
            error: function () {
                AlertDanger("Problemas de conexión ", "Inténtelo mas tarde.");
            }
        });
    }

    function ValidaPersonaOportunidad() {
        var result = false;

        $('#PersonaOportunidad_Nombre').css("border", "1px solid #f44336");
        $('#PersonaOportunidad_Nombre').css("border-left", "none");

        if ($('#PersonaOportunidad_Nombre').val().length > 0) {
            $('#PersonaOportunidad_Nombre').css("border", "1px solid #d9dee3");
            $('#PersonaOportunidad_Nombre').css("border-left", "none");
        }

        if ($('#PersonaOportunidad_Nombre').val().length > 0) {
            result = true;
        }

        return result;
    }
</script>
<script>

    const toastPlacementExample = document.querySelector('.toast-placement-ex');
    let selectedType, selectedPlacement, toastPlacement;

    function toastDispose(toast) {
        if (toast && toast._element !== null) {
            if (toastPlacementExample) {
                toastPlacementExample.classList.remove(selectedType);
                DOMTokenList.prototype.remove.apply(toastPlacementExample.classList, selectedPlacement);
            }
            toast.dispose();
        }
    }

    function AlertIncompleto() {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-primary';
        selectedPlacement = ['top-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text("Formulario incompleto");
        $("#AlertaTexto").text("Completa la información del formulario.");
    }

    function AlertPrimary(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-primary';
        selectedPlacement = ['top-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertWarning(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-warning';
        selectedPlacement = ['bottom-0', 'end-0'];

        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertDanger(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-danger';
        selectedPlacement = ['bottom-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertDanger(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-danger';
        selectedPlacement = ['bottom-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }

    function AlertSuccess(titulo, texto) {

        if (toastPlacement) {
            toastDispose(toastPlacement);
        }

        selectedType = 'bg-success';
        selectedPlacement = ['top-0', 'end-0'];
        toastPlacementExample.classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();

        var fecha = new Date();
        var hora = fecha.toLocaleTimeString();
        $("#AlertaFecha").text(hora);
        $("#AlertaTitulo").text(titulo);
        $("#AlertaTexto").text(texto);
    }


    function ValidaInput(name) {
        if ($('#' + name).val().length > 0) {
            $('#' + name).css("border", "1px solid #d9dee3");
            $('#' + name).css("border-left", "none");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
        }
    }

    function ValidaSelect(name) {
        if ($('#' + name + ' option:selected').val() > 0) {
            $('#select2-' + name + '-container').css("border", "0px solid #d9dee3");
            $('#' + name).css("border", "1px solid #d9dee3");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
            $('#select2-' + name + '-container').css("border", "1px solid #f44336");
        }
    }

    function Mayus(e) {
        e.value = e.value.toUpperCase();
    }

    function MostrarContacto(num) {
        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("Contacto", "Contacto")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });
    }

    function MostrarEmpresa(num) {
        var obj = {};

        obj['UrlVaible'] = num;

        var jsonObject = {
            "URL": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("URL_Cifrar", "URLS")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                window.location.href = '@Url.Action("Empresa", "Empresa")?cont=' + result.Url;
            },
            error: function () {
                AlertDanger("Problemas al consultar ", "Intentolo mas tarde.");
            }
        });
    }

    const MILLARES = ",";
    const DECIMALES = ".";
    const DTFLOCAL = new Intl.NumberFormat('en-US');

    // Formatear solamente numeros decimales positivos
    function numberFormatPositivo(e) {
        if (this.value === "") {
            return;
        }
        // Obtenemos un array con el numero y los decimales si hay
        let contenido = "";
        if (MILLARES === ",") {
            contenido = this.value.replace(/[^0-9\.]/g, "").split(".");
        } else {
            contenido = this.value.replace(/[^0-9\,]/g, "").split(",");
        }
        // añadimos los separadores de miles al primer numero del array
        contenido[0] = contenido[0].length ? DTFLOCAL.format(parseInt(contenido[0])) : "0";
        // Juntamos el numero con los decimales si hay decimales
        this.value = contenido.length > 1 ? contenido.slice(0, 2).join(".") : contenido[0];
    }

    window.onload = function () {
        //SE EJECUTA DESPUES CARGAR EL CODIGO CSS y HTML
        // Creamos el evento keyup
        document.querySelectorAll(".numberPositivo").forEach(el => el.addEventListener("keyup", numberFormatPositivo));
    };

    $('#Nv1Oportunidad').addClass("active open");
</script>
